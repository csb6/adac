Form C058-0896
wdrwn83.txt


Tests Withdrawn from ACVC 1.11 
 
This flyer provides a listing of those tests that have been withdrawn 
from ACVC, Version 1.11.  The Ada Validation Organization (AVO) withdraws
tests from the ACVC when it is found that they are based on assumptions
that may not hold true for all Ada implementations or that the test program
does not meet its test objective.   
 
Detailed information about the Ada compiler validation process is 
contained in Ada Compiler Validation Procedures, Version 3.1, August 1992.  

 
Withdrawn Tests, ACVC 1.11 

B27005A:  ai-866/03 allows the escape char. to be included in comments 
(line 34) 
 
E28005C:  line 204 is not top-of-page as intended [203 is] (withdrawn in 
1.10) 
 
B28006C:  this test's objective is now considered to be counter-
productive 
 
C32203A:  expected 'size equality of subtype and derived type is 
unfounded 
 
C34006D:  checks that component'size <= type'size @lines 223ff are wrong 
 
C35507K:  ai-866/03 allows support of the Latin-1 char.set (line 185) 
 
C35507L:  ai-866/03 allows support of the Latin-1 char.set (line 89) 
 
C35507N:  ai-866/03 allows support of the Latin-1 char.set (line 96) 
 
C35507O:  ai-866/03 allows support of the Latin-1 char.set (line 73) 
 
C35507P:  ai-866/03 allows support of the Latin-1 char.set (line 64) 
 
C35508I:  change of representation for boolean types is optional (arg, 
ai-564) 
 
C35508J:  change of representation for boolean types is optional (arg, 
ai-564) 
 
C35508M:  change of representation for boolean types is optional (arg, 
ai-564) 
 
C35508N:  change of representation for boolean types is optional (arg, 
ai-564) 
 
C35702A:  the test objective conflicts with ai-459/08 (should withdraw 
the ai!) 
 
C37310A:  ai-866/03 allows support of the Latin-1 char.set (lines 36 & 
43) 
 
C35702B:  the test objective conflicts with ai-459/08 (should withdraw 
the ai!) 
 
B41308B:  line 44 should be marked "--error" for it is illegal, too 
 
C43004A:  upper bound may exceed parent subtype'last @ line 36 
 
C45114A:  needs a pragma pack for an integer'last-sized array of boolean 
 
C45346A:  catenation @ line 42 is wrongly allowed to raise no exception 
 
C45612A:  exponentiations to integer'last are excessive in duration 
 
C45612B:  exponentiations to integer'last are excessive in duration 
 
C45612C:  exponentiations to integer'last are excessive in duration 
 
C45651A:  fixed-point ranges @ lines 231 & 256 may be too large or too 
small 
 
C46022A:  if conversion operands are non-static, they raise exceptions 
 
B49008A:  ai-438/09 rejects test's expected errors @ lines 37 & 41 
 
B49008B:  ai-438/09 rejects test's expected errors (both) 
 
A54B02A:  ai-866/03 allows support of the Latin-1 char.set  (line 117) 
 
C55B06A:  ai-866/03 allows support of the Latin-1 char.set (line 185) 
 
A74006A:  is identical to a71004a 
 
C74308A:  the particular requirements for erroneous execution are 
unjustified 
 
B83022B:  intended error @ line 39 is legal by ai-865/04 
 
B83022H:  intended error @ file 1 line 36 is legal by ai-865/04 
 
B83025B:  intended error @ line 40 is legal by ai-865/04 
 
B83025D:  intended error @ line 35 is legal by ai-865/04 
 
C83026A:  visibility issue @ lines 46 & 103:  was questioned (legal by 
ai-865) 
 
B83026B:  intended error @ line 43 is legal by ai-865/04 
 
C83041A:  uninitialized en1_l @ line 93 is used in membership test @ 
line 122 
 
B85001L:  "rec2" @ line 20 is undefined, and so is an unintended error 
 
C86001F:  withdrawn until ai-00041 is resolved:  re-compiling system 
 
C94021A:  ai-00867/03 rejects test objective:  task access is erroneous 
 
C97116A:  contains race conditions (withdrawn in 1.10) 
 
C98003B:  legitimate scheduling may produce failed result (esp. If 
parallel) 
 
BA2011A:  contains an unintended error @ file/line 4/38 
 
CB7001A:  expected exceptions may not be raised (dead variables or radix 
/= 2) 
 
CB7001B:  expected exceptions may not be raised (dead variables, 
large**2<last) 
 
CB7004A:  expected exceptions may not be raised (dead variables or radix 
/= 2) 
 
CC1223A:  some expressions might not be static (will be referred to arg) 
 
BC1226A:  contains many unintended errors (undefined type/subtype names) 
 
CC1226B:  contains many uses of uninitialized variables (eg lines 61 & 
63) 
 
BC3009B:  circular instantiations may be undetected [ai-256](withdrawn 
in 1.10) 
 
BD1B02B:  test does not meet its objective:  "'size" => "'storage_size" 
 
BD1B06A:  intended illegal lines are also illegal for unintended causes 
 
AD1B08A:  assumes integer'size = access'size; treats size clause as 
optional 
 
BD2A02A:  uses length clauses with values that need not be supported 
 
CD2A21E:  does not meet objective of using a rep. Clause inside generic 
unit 
 
CD2A23E:  does not meet objective of using a rep. Clause inside generic 
unit 
 
CD2A32A:  wrongly assumes that array'size = length*component'size 
 
CD2A41A:  checking change of floating-point'size lacks value (for 
validation) 
 
CD2A41E:  checking change of floating-point'size lacks value (for 
validation) 
 
CD2A87A:  wrongly requires object'size <= type'size 
 
CD2B15C:  wrongly fails allocation of more than specified for collection 
size 
 
BD3006A:  line 32 should be marked "--error" for it is a forcing 
occurrence 
 
BD4008A:  checks some requirements on which the arg is unresolved (ai-
301) 
 
CD4022A:  wrongly expects record representation clause to determine 
type'size 
 
CD4022D:  wrongly expects record representation clause to determine 
type'size 
 
CD4024B:  [ditto, and:] component clause for fixed-point type is too 
small 
 
CD4024C:  [ditto, and:] assignment of fixed-point upper bound raises 
exception 
 
CD4024D:  wrongly expects record representation clause to determine 
type'size 
 
CD4031A:  wrongly expects record representation clause to determine 
type'size 
 
CD4051D:  wrongly expects record representation clause to determine 
type'size 
 
CD5111A:  wrongly uses out parameters in an interrupt entry 
 
CD7004C:  pragma elaborate is needed @ line 33; the test objective lacks 
value 
 
ED7005D:  checking pragma storage_unit is inappropriate (withdrawn in 
1.10) 
 
CD7005E:  pragma elaborate is needed @ line 33; the test objective lacks 
value 
 
AD7006A:  conversion to integer of universal expression may raise 
exception 
 
CD7006E:  pragma elaborate is needed @ line 33; the test objective lacks 
value 
 
AD7201A:  'address attribute is undefined for a generic unit 
 
AD7201E:  the checking of 'address for predefined attributes lacks value 
 
CD7204B:  checks that component'size <= type'size @ lines 47ff is wrong 
 
AD7206A:  attribute 'address is not well defined for constants (ai-203) 
 
BD8002A:  macro $record_name may need to have and not have discriminants 
 
BD8004C:  unintended errors result from the machine code statement at 
line 96 
 
CD9005A:  effecting interface usually requires an implementation-defined 
pragma 
 
CD9005B:  effecting interface usually requires an implementation-defined 
pragma 
 
CDA201E:  unchecked_conversion might be instantiated with unequal-sized 
types 
 
CE2107I:  data_error @ lines 90ff need not be raised (withdrawn in 1.10) 
 
CE2117A:  the test objective lacks merit 
 
CE2117B:  the test objective lacks merit 
 
CE2119B:  restrictions may apply to use of form parameter 
 
CE2205B:  an exception other than data_error may be raised @ line 87 
 
CE2405A:  an exception other than data_error may be raised @ line 79 
 
CE3111C:  sharing an external file gives unexpected results (withdrawn 
in 1.10) 
 
CE3116A:  the test objective lacks merit 
 
CE3118A:  restrictions may apply to use of form parameter 
 
CE3411B:  requires too much disk space for validation (withdrawn in 
1.10) 
 
CE3412B:  is impractical for validation (checking layout_error for line) 
 
CE3607B:  the test objective is unjustified by the standard 
 
CE3607C:  the test objective is unjustified by the standard 
 
CE3607D:  the test objective is unjustified by the standard 
 
CE3812A:  required precision for floating-point output is deemed 
excessive 
 
CE3814A:  variable z may be other than the two values required @ lines 
48 & 49 
 
CE3902B:  open(<default_output_file>, in_file, ...) @ Line 62 raises 
mode_error 
 
 
 
Form C58-0795 
wdrwn83.txt 
 
 
********************** 
 
The views, opinions, and findings contained in this report are those of 
the author(s) and  
should not be construed as an official Agency position, policy, or 
decision, unless so  
designated by other official documentation. 
 
Copyright 1995.  IIT Research Institute.  All rights assigned to the 
U.S. Government  
(Ada Joint Program Office).  Permission to reprint this flyer, in whole 
or in part, is  
granted, provided the AdaIC is acknowledged as the source. 
 
********************** 
 
Ada Information Clearinghouse (AdaIC) 
P.O. Box 1866 
Falls Church, VA  22204 
Telephone:  1-800-AdaIC-11 (1-800/232-4211) or 703/681-2466 
Fax:  703/681-2869 
E-mail:  adainfo@sw-eng.falls-church.va.us 
 
The AdaIC is sponsored by the Ada Joint Program Office and operated by 
IIT Research  
Institute. 

