-- BC3204D.ADA

-- CHECK THAT AN INSTANTIATION IS ILLEGAL WHEN A LIMITED/NON-LIMITED
-- FORMAL PRIVATE TYPE IS USED AS THE PARENT TYPE IN A DERIVED TYPE
-- DEFINITION APPEARING IN THE FULL DECLARATION OF A PRIVATE TYPE,
-- AND THE ACTUAL TYPE IS AN UNCONSTRAINED ARRAY TYPE OR AN
-- UNCONSTRAINED TYPE WITH DISCRIMINANTS WITHOUT DEFAULTS.

-- TEST WHEN THE INSTANTIATIONS, GENERIC SPECIFICATION, AND GENERIC BODY
-- ARE IN SEPARATE COMPILATION UNITS WITHIN THE SAME COMPILATION.  THE
-- INSTANTIATIONS ARE COMPILED BEFORE THE GENERIC BODY.

-- SPS 7/13/82
-- JBG 4/29/85

--       **************************************************
-- AS A RESULT OF ADA COMMENTARY AI-00037, INSTANTIATIONS ARE ALWAYS
-- LEGAL IF THE FORMAL PARAMETER IS A PRIVATE TYPE WITHOUT DISCRIMINANTS
-- AND THE ACTUAL PARAMETER IS A TYPE WITH DEFAULT DISCRIMINANTS.
--       **************************************************

--       **************************************************
-- IN THIS TEST, AN ERROR MAY BE INDICATED EITHER AT THE POINT OF THE
-- INSTANTIATION (AS INDICATED IN THE TEST) OR BY REFUSING TO ACCEPT THE
-- GENERIC UNIT BODY FOR COMPILATION (WHEN THE CORRESPONDING
-- INSTANTIATION HAS AN ERROR INDICATION).
--       **************************************************

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE PK_REC IS END PK_REC;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE PK_DREC IS END PK_DREC;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE PK_UARR IS END PK_UARR;

WITH PK_REC, PK_DREC, PK_UARR;
PROCEDURE BC3204D IS

     TYPE UARR IS ARRAY(INTEGER RANGE <>) OF INTEGER;
     TYPE CARR IS ARRAY(INTEGER RANGE 1..10) OF INTEGER;
     TYPE REC(D : INTEGER) IS RECORD NULL; END RECORD;
     TYPE DREC(D : INTEGER := 3) IS RECORD NULL; END RECORD;
     SUBTYPE CREC IS REC(D => 3);

     PACKAGE N1 IS NEW PK_REC(REC, CREC, CREC, CREC);   -- ERROR: REC IS
                                                        -- UNCONSTRAINED
     PACKAGE N2 IS NEW PK_DREC(DREC, CREC, CREC, CREC); -- OK. AI-37.
     PACKAGE N3 IS NEW PK_REC(CREC, REC, CREC, CREC);   -- ERROR: REC IS
                                                        -- UNCONSTRAINED
     PACKAGE N4 IS NEW PK_DREC(CREC, DREC, CREC, CREC); -- OK. AI-37.
     PACKAGE N5 IS NEW PK_REC(CREC, CREC, REC, CREC);   -- ERROR: REC IS
                                                        -- UNCONSTRAINED
     PACKAGE N6 IS NEW PK_DREC(CREC, CREC, DREC, CREC); -- OK. AI-37.
     PACKAGE N7 IS NEW PK_REC(CREC, CREC, CREC, REC);   -- ERROR: REC IS
                                                        -- UNCONSTRAINED
     PACKAGE N8 IS NEW PK_DREC(CREC, CREC, CREC, DREC); -- OK. AI-37.
     PACKAGE N9 IS NEW PK_UARR(UARR, CARR, CARR, CARR); -- ERROR: UARR
                                                        -- UNCONSTRAINED
     PACKAGE N10 IS NEW PK_UARR(CARR, UARR, CARR, CARR);-- ERROR: UARR
                                                        -- UNCONSTRAINED
     PACKAGE N11 IS NEW PK_UARR(CARR, CARR, UARR, CARR);-- ERROR: UARR
                                                        -- UNCONSTRAINED
     PACKAGE N12 IS NEW PK_UARR(CARR, CARR, CARR, UARR);-- ERROR: UARR
                                                        -- UNCONSTRAINED
     PACKAGE N13 IS NEW PK_DREC(CREC, CREC, CREC, CREC);-- OK.
     PACKAGE N14 IS NEW PK_DREC(CARR, CARR, CARR, CARR);-- OK.

BEGIN
     NULL;
END BC3204D;

-- THIS BODY CAN BE REJECTED
PACKAGE BODY PK_REC IS

     SUBTYPE SP IS P;
     SUBTYPE SL IS L;

     TYPE DP IS NEW SP;
     TYPE DL IS NEW SL;
     SUBTYPE SDL IS DL;

     PACKAGE PRIV IS
          TYPE PP IS PRIVATE;
          TYPE PL IS LIMITED PRIVATE;
          TYPE PPV IS PRIVATE;
          TYPE PLP IS LIMITED PRIVATE;
     PRIVATE
          TYPE PP IS NEW DP;       -- POTENTIALLY ILLEGAL.
          TYPE PL IS NEW SDL;      -- POTENTIALLY ILLEGAL.
          TYPE PPV IS NEW PV;      -- POTENTIALLY ILLEGAL.
          TYPE PLP IS NEW LP;      -- POTENTIALLY ILLEGAL.
     END PRIV;

BEGIN
     NULL;
END PK_REC;

PACKAGE BODY PK_DREC IS

     SUBTYPE SP IS P;
     SUBTYPE SL IS L;

     TYPE DP IS NEW SP;
     TYPE DL IS NEW SL;
     SUBTYPE SDL IS DL;

     PACKAGE PRIV IS
          TYPE PP IS PRIVATE;
          TYPE PL IS LIMITED PRIVATE;
          TYPE PPV IS PRIVATE;
          TYPE PLP IS LIMITED PRIVATE;
     PRIVATE
          TYPE PP IS NEW DP;       -- POTENTIALLY ILLEGAL.
          TYPE PL IS NEW SDL;      -- POTENTIALLY ILLEGAL.
          TYPE PPV IS NEW PV;      -- POTENTIALLY ILLEGAL.
          TYPE PLP IS NEW LP;      -- POTENTIALLY ILLEGAL.
     END PRIV;

BEGIN
     NULL;
END PK_DREC;

-- THIS BODY CAN BE REJECTED
PACKAGE BODY PK_UARR IS

     SUBTYPE SP IS P;
     SUBTYPE SL IS L;

     TYPE DP IS NEW SP;
     TYPE DL IS NEW SL;
     SUBTYPE SDL IS DL;

     PACKAGE PRIV IS
          TYPE PP IS PRIVATE;
          TYPE PL IS LIMITED PRIVATE;
          TYPE PPV IS PRIVATE;
          TYPE PLP IS LIMITED PRIVATE;
     PRIVATE
          TYPE PP IS NEW DP;       -- POTENTIALLY ILLEGAL.
          TYPE PL IS NEW SDL;      -- POTENTIALLY ILLEGAL.
          TYPE PPV IS NEW PV;      -- POTENTIALLY ILLEGAL.
          TYPE PLP IS NEW LP;      -- POTENTIALLY ILLEGAL.
     END PRIV;

BEGIN
     NULL;
END PK_UARR;
