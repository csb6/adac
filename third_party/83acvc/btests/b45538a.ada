-- B45538A.ADA

-- CHECK THAT MULTIPLICATION OF A FIXED POINT VARIABLE OR CONSTANT BY A
-- REAL LITERAL OR REAL NAMED NUMBER IS ILLEGAL.

-- CHECK THAT IF ONE OPERAND OF THE DIVISION OPERATOR IS A FIXED POINT
-- VARIABLE OR CONSTANT, THE OTHER OPERATOR CANNOT BE A REAL LITERAL OR
-- NAMED NUMBER.

-- JBG 6/1/85

PROCEDURE B45538A IS

     TYPE FIXED IS DELTA 1.0 RANGE -10.0 .. 10.0;

     FIXED_VAR : FIXED := 1.0;
     FIXED_CON : CONSTANT FIXED := 2.0;

     ONE  : CONSTANT := 1.0;
     ZERO : CONSTANT := 0.0;
     FOUR : CONSTANT := 4.0;

BEGIN

     FIXED_VAR := FIXED (FIXED_VAR * 1.0);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (FIXED_VAR * 0.0);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (FIXED_VAR * 3.0);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (FIXED_VAR * ONE);        -- ERROR: ONE.
     FIXED_VAR := FIXED (FIXED_VAR * ZERO);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FIXED_VAR * FOUR);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (1.0 * FIXED_VAR);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (0.0 * FIXED_VAR);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (3.0 * FIXED_VAR);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (ONE * FIXED_VAR);        -- ERROR: ONE.
     FIXED_VAR := FIXED (ZERO * FIXED_VAR);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FOUR * FIXED_VAR);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (FIXED_VAR / 1.0);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (FIXED_VAR / 0.0);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (FIXED_VAR / 3.0);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (FIXED_VAR / ONE);        -- ERROR: ONE.
     FIXED_VAR := FIXED (FIXED_VAR / ZERO);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FIXED_VAR / FOUR);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (1.0 / FIXED_VAR);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (0.0 / FIXED_VAR);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (3.0 / FIXED_VAR);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (ONE / FIXED_VAR);        -- ERROR: ONE.
     FIXED_VAR := FIXED (ZERO / FIXED_VAR);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FOUR / FIXED_VAR);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (FIXED_CON * 1.0);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (FIXED_CON * 0.0);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (FIXED_CON * 3.0);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (FIXED_CON * ONE);        -- ERROR: ONE.
     FIXED_VAR := FIXED (FIXED_CON * ZERO);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FIXED_CON * FOUR);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (1.0 * FIXED_CON);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (0.0 * FIXED_CON);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (3.0 * FIXED_CON);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (ONE * FIXED_CON);        -- ERROR: ONE.
     FIXED_VAR := FIXED (ZERO * FIXED_CON);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FOUR * FIXED_CON);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (FIXED_CON / 1.0);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (FIXED_CON / 0.0);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (FIXED_CON / 3.0);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (FIXED_CON / ONE);        -- ERROR: ONE.
     FIXED_VAR := FIXED (FIXED_CON / ZERO);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FIXED_CON / FOUR);       -- ERROR: FOUR.

     FIXED_VAR := FIXED (1.0 / FIXED_CON);        -- ERROR: 1.0.
     FIXED_VAR := FIXED (0.0 / FIXED_CON);        -- ERROR: 0.0.
     FIXED_VAR := FIXED (3.0 / FIXED_CON);        -- ERROR: 3.0.
     FIXED_VAR := FIXED (ONE / FIXED_CON);        -- ERROR: ONE.
     FIXED_VAR := FIXED (ZERO / FIXED_CON);       -- ERROR: ZERO.
     FIXED_VAR := FIXED (FOUR / FIXED_CON);       -- ERROR: FOUR.

END B45538A;
