-- BC3205C.ADA

-- CHECK THAT AN INSTANTIATION IS ILLEGAL IF A FORMAL LIMITED/NON-
-- LIMITED PRIVATE TYPE IS USED IN AN ALLOCATOR, A VARIABLE OBJECT
-- DECLARATION, A RECORD COMPONENT DECLARATION, OR AN ARRAY TYPE
-- DEFINITION WHEN THE ACTUAL PARAMETER IS AN UNCONSTRAINED ARRAY TYPE
-- OR AN UNCONSTRAINED TYPE WITH DISCRIMINANTS THAT DO NOT HAVE
-- DEFAULTS.

-- TEST WHEN THE INSTANTIATIONS, GENERIC SPECIFICATION, AND GENERIC 
-- BODY ARE IN SEPARATE PROGRAM UNITS WITHIN THE SAME COMPILATION. 
-- THE INSTANTIATIONS ARE COMPILED BEFORE THE GENERIC BODY.

-- SPS 7/14/82
-- JBG 3/8/84
-- JBG 4/29/85

--       **************************************************
-- AS A RESULT OF ADA COMMENTARY AI-00037, INSTANTIATIONS ARE ALWAYS
-- LEGAL IF THE FORMAL PARAMETER IS A PRIVATE TYPE WITHOUT DISCRIMINANTS
-- AND THE ACTUAL PARAMETER IS A TYPE WITH DEFAULT DISCRIMINANTS.
--       **************************************************

--       **************************************************
-- IN THIS TEST, AN ERROR MAY BE INDICATED EITHER AT THE POINT OF THE
-- INSTANTIATION (AS INDICATED IN THE TEST) OR BY REFUSING TO ACCEPT THE
-- GENERIC UNIT BODY FOR COMPILATION (WHEN THE CORRESPONDING
-- INSTANTIATION HAS AN ERROR INDICATION).
--       **************************************************

GENERIC
     TYPE P IS PRIVATE;
     POBJ : P;
PACKAGE GP IS 
     CP : CONSTANT P := POBJ;                   -- OK.
END GP;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
     TYPE PRV IS PRIVATE;
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK1 IS END BC3205C_PK1;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE BC3205C_PK2 IS END BC3205C_PK2;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE BC3205C_PK3 IS END BC3205C_PK3;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
PACKAGE BC3205C_PK4 IS END BC3205C_PK4;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
PACKAGE BC3205C_PK5 IS END BC3205C_PK5;

GENERIC
     TYPE PRV IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK6 IS END BC3205C_PK6;

GENERIC
     TYPE PRV IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK7 IS END BC3205C_PK7;

GENERIC
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
PACKAGE BC3205C_PK8 IS END BC3205C_PK8;

GENERIC
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
PACKAGE BC3205C_PK9 IS END BC3205C_PK9;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE BC3205C_PK10 IS END BC3205C_PK10;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE BC3205C_PK11 IS END BC3205C_PK11;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
PACKAGE BC3205C_PK12 IS END BC3205C_PK12;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
PACKAGE BC3205C_PK13 IS END BC3205C_PK13;

GENERIC
     TYPE PRV IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK14 IS END BC3205C_PK14;

GENERIC
     TYPE PRV IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK15 IS END BC3205C_PK15;

GENERIC
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
PACKAGE BC3205C_PK16 IS END BC3205C_PK16;

GENERIC
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
PACKAGE BC3205C_PK17 IS END BC3205C_PK17;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
     TYPE PRV IS PRIVATE;
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK18 IS END BC3205C_PK18;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE BC3205C_PK19 IS END BC3205C_PK19;

GENERIC
     TYPE P IS PRIVATE;
     TYPE L IS LIMITED PRIVATE;
PACKAGE BC3205C_PK20 IS END BC3205C_PK20;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
PACKAGE BC3205C_PK21 IS END BC3205C_PK21;

GENERIC
     TYPE PV IS PRIVATE;
     TYPE LP IS LIMITED PRIVATE;
PACKAGE BC3205C_PK22 IS END BC3205C_PK22;

GENERIC
     TYPE PRV IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK23 IS END BC3205C_PK23;

GENERIC
     TYPE PRV IS PRIVATE;
     TYPE LIM IS LIMITED PRIVATE;
PACKAGE BC3205C_PK24 IS END BC3205C_PK24;

GENERIC
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
PACKAGE BC3205C_PK25 IS END BC3205C_PK25;

GENERIC
     TYPE LMP IS LIMITED PRIVATE;
     TYPE PVT IS PRIVATE;
PACKAGE BC3205C_PK26 IS END BC3205C_PK26;

WITH BC3205C_PK1, BC3205C_PK2, BC3205C_PK3, BC3205C_PK4, BC3205C_PK5,
BC3205C_PK6,  BC3205C_PK7,  BC3205C_PK8,  BC3205C_PK9,  BC3205C_PK10,
BC3205C_PK11, BC3205C_PK12, BC3205C_PK13, BC3205C_PK14, BC3205C_PK15,
BC3205C_PK16, BC3205C_PK17, BC3205C_PK18, BC3205C_PK19, BC3205C_PK20,
BC3205C_PK21, BC3205C_PK22, BC3205C_PK23, BC3205C_PK24, BC3205C_PK25,
BC3205C_PK26;
WITH GP;
PROCEDURE BC3205C IS

     TYPE UARR IS ARRAY(INTEGER RANGE <>) OF INTEGER;
     TYPE CARR IS ARRAY(INTEGER RANGE 1..3) OF INTEGER;
     TYPE REC(D : INTEGER) IS RECORD NULL; END RECORD;
     TYPE DREC(D : INTEGER := 3) IS RECORD NULL; END RECORD;
     SUBTYPE CREC IS REC(4);
     REC1 : DREC;
     REC2 : REC (D => 3);
     AR1 : CARR;
     AR2 : UARR (1 .. 3);

     PACKAGE N1 IS NEW BC3205C_PK1(CREC, CREC, CREC, CREC,
          CREC, CREC, CREC, CREC);                -- OK.
     PACKAGE N2 IS NEW BC3205C_PK2(REC, CREC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N3 IS NEW BC3205C_PK3(CREC, REC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N4 IS NEW BC3205C_PK4(REC, CREC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N5 IS NEW BC3205C_PK5(CREC, REC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N6 IS NEW BC3205C_PK6(REC, CREC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N7 IS NEW BC3205C_PK7(CREC, REC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N8 IS NEW BC3205C_PK8(REC, CREC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N9 IS NEW BC3205C_PK9(CREC, REC);    -- ERROR: REC IS
                                                  -- UNCONSTRAINED.
     PACKAGE N12 IS NEW BC3205C_PK10(DREC, CREC); -- OK. AI-00037.
     PACKAGE N13 IS NEW BC3205C_PK11(CREC, DREC); -- OK. AI-00037.
     PACKAGE N14 IS NEW BC3205C_PK12(DREC, CREC); -- OK. AI-00037.
     PACKAGE N15 IS NEW BC3205C_PK13(CREC, DREC); -- OK. AI-00037.
     PACKAGE N16 IS NEW BC3205C_PK14(DREC, CREC); -- OK. AI-00037.
     PACKAGE N17 IS NEW BC3205C_PK15(CREC, DREC); -- OK. AI-00037.
     PACKAGE N18 IS NEW BC3205C_PK16(DREC, CREC); -- OK. AI-00037.
     PACKAGE N19 IS NEW BC3205C_PK17(CREC, DREC); -- OK. AI-00037.

     PACKAGE P1 IS NEW BC3205C_PK18(CARR, CARR, CARR, CARR,
          CARR, CARR, CARR, CARR);                -- OK.
     PACKAGE P2 IS NEW BC3205C_PK19(UARR, CARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P3 IS NEW BC3205C_PK20(CARR, UARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P4 IS NEW BC3205C_PK21(UARR, CARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P5 IS NEW BC3205C_PK22(CARR, UARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P6 IS NEW BC3205C_PK23(UARR, CARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P7 IS NEW BC3205C_PK24(CARR, UARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P8 IS NEW BC3205C_PK25(UARR, CARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.
     PACKAGE P9 IS NEW BC3205C_PK26(CARR, UARR);  -- ERROR: UARR IS
                                                  -- UNCONSTRAINED.

     PACKAGE G1 IS NEW GP(DREC, REC1);            -- OK.
     PACKAGE G2 IS NEW GP(REC, REC2);             -- OK.
     PACKAGE G3 IS NEW GP(CARR, AR1);             -- OK.
     PACKAGE G4 IS NEW GP(UARR, AR2);             -- OK.

BEGIN
     NULL;
END BC3205C;

PACKAGE BODY BC3205C_PK1 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.
     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK1;

PACKAGE BODY BC3205C_PK2 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK2;

PACKAGE BODY BC3205C_PK3 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK3;

PACKAGE BODY BC3205C_PK4 IS

     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK4;

PACKAGE BODY BC3205C_PK5 IS

     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK5;

PACKAGE BODY BC3205C_PK6 IS

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK6;

PACKAGE BODY BC3205C_PK7 IS

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK7;

PACKAGE BODY BC3205C_PK8 IS

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

BEGIN
     NULL;
END BC3205C_PK8;

PACKAGE BODY BC3205C_PK9 IS

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

BEGIN
     NULL;
END BC3205C_PK9;

PACKAGE BODY BC3205C_PK10 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK10;

PACKAGE BODY BC3205C_PK11 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK11;

PACKAGE BODY BC3205C_PK12 IS

     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK12;

PACKAGE BODY BC3205C_PK13 IS

     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK13;

PACKAGE BODY BC3205C_PK14 IS

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK14;

PACKAGE BODY BC3205C_PK15 IS

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK15;

PACKAGE BODY BC3205C_PK16 IS

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

BEGIN
     NULL;
END BC3205C_PK16;

PACKAGE BODY BC3205C_PK17 IS

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

BEGIN
     NULL;
END BC3205C_PK17;

PACKAGE BODY BC3205C_PK18 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.
     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK18;

PACKAGE BODY BC3205C_PK19 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK19;

PACKAGE BODY BC3205C_PK20 IS

     TYPE AP IS ACCESS P;
     TYPE AL IS ACCESS L;
     NP : AP := NEW P;                    -- POTENTIALLY ILLEGAL.
     NL : AL := NEW L;                    -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK20;

PACKAGE BODY BC3205C_PK21 IS

     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK21;

PACKAGE BODY BC3205C_PK22 IS

     VP : PV;                             -- POTENTIALLY ILLEGAL.
     VL : LP;                             -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK22;

PACKAGE BODY BC3205C_PK23 IS

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK23;

PACKAGE BODY BC3205C_PK24 IS

     TYPE ARP IS ARRAY (INTEGER) OF PRV;  -- POTENTIALLY ILLEGAL.
     TYPE ARL IS ARRAY (INTEGER) OF LIM;  -- POTENTIALLY ILLEGAL.

BEGIN
     NULL;
END BC3205C_PK24;

PACKAGE BODY BC3205C_PK25 IS

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

BEGIN
     NULL;
END BC3205C_PK25;

PACKAGE BODY BC3205C_PK26 IS

     TYPE RC IS RECORD
          RCP : PVT;                      -- POTENTIALLY ILLEGAL.
          RCL : LMP;                      -- POTENTIALLY ILLEGAL.
     END RECORD;

BEGIN
     NULL;
END BC3205C_PK26;
