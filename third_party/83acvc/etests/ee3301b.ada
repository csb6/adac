-- EE3301B.ADA

-- OBJECTIVE:
--     CHECK THAT SET_LINE_LENGTH, SET_PAGE_LENGTH, LINE_LENGTH,
--     AND PAGE_LENGTH CAN BE CALLED WITHOUT A SPECIFIED FILE, AND
--     THAT THEY ARE THEN APPLIED TO THE CURRENT DEFAULT OUTPUT FILE.

-- APPLICABLITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS WHICH SUPPORT
--     CREATE FOR TEXT FILES.

-- PASS/FAIL CRITERIA:
--     THIS TEST IS PASSED IF IT EXECUTES, PRINTS TENTATIVELY PASSED,
--     AND THE CONTENTS OF THE STANDARD OUTPUT FILE ARE CORRECT.

-- HISTORY:
--     ABW 08/26/82
--     SPS 11/12/82
--     TBN 11/04/86  REVISED TEST TO OUTPUT A NOT_APPLICABLE
--                   RESULT WHEN FILES ARE NOT SUPPORTED.
--     JLH 08/19/87  ADDED CALL TO SPECIAL ACTION PROCEDURE AND REPLACED
--                   UNBOUNDED WITH THE ORIGINAL VALUE FOR LINE_LENGTH
--                   AND PAGE_LENGTH.

WITH REPORT;
USE REPORT;
WITH TEXT_IO;
USE TEXT_IO;
WITH CHECK_FILE;

PROCEDURE EE3301B IS

     INCOMPLETE : EXCEPTION;
     FILE : FILE_TYPE;
     TWO : COUNT := COUNT(IDENT_INT(2));
     TEN : COUNT := COUNT(IDENT_INT(10));
     STR : STRING (1 .. 15);
     L : POSITIVE_COUNT;
     ORIGINAL_LINE_LENGTH : COUNT := LINE_LENGTH;
     ORIGINAL_PAGE_LENGTH : COUNT := PAGE_LENGTH;

BEGIN

     TEST ("EE3301B", "CHECK THAT SET_LINE_LENGTH, " &
                      "SET_PAGE_LENGTH, LINE_LENGTH, AND " &
                      "PAGE_LENGTH ARE APPLIED TO THE " &
                      "CURRENT DEFAULT OUTPUT FILE IF NO " &
                      "FILE IS SPECIFIED");

     BEGIN
          CREATE (FILE, OUT_FILE, LEGAL_FILE_NAME);
     EXCEPTION
          WHEN USE_ERROR =>
               NOT_APPLICABLE ("USE_ERROR RAISED ON TEXT CREATE WITH " &
                               "OUT_FILE MODE");
               RAISE INCOMPLETE;
          WHEN NAME_ERROR =>
               NOT_APPLICABLE ("NAME_ERROR RAISED ON TEXT CREATE " &
                               "WITH OUT_FILE MODE");
               RAISE INCOMPLETE;
          WHEN OTHERS =>
               FAILED ("UNEXPECTED EXCEPTION RAISED ON TEXT CREATE");
               RAISE INCOMPLETE;
     END;

     SET_OUTPUT (FILE);

     SET_LINE_LENGTH (TEN);
     SET_PAGE_LENGTH (TWO);

     FOR I IN 1 .. 50 LOOP
          PUT ('C');
     END LOOP;

     IF LINE (FILE) /= TWO AND PAGE (FILE) /= 3 THEN
          FAILED ("SET_LINE_LENGTH AND SET_PAGE_LENGTH ON DEFAULT " &
                  "FILE NOT SUCCESSFUL");
     ELSE
          IF LINE_LENGTH /= LINE_LENGTH (FILE) THEN
               FAILED ("LINE_LENGTH FOR CURRENT_OUTPUT INCORRECT. " &
                       "IS" & COUNT'IMAGE(LINE_LENGTH(FILE)) & ". " &
                       "SHOULD BE" &
                       COUNT'IMAGE(LINE_LENGTH(CURRENT_OUTPUT)));
          END IF;

          IF PAGE_LENGTH /= PAGE_LENGTH (FILE) THEN
               FAILED ("PAGE_LENGTH FOR CURRENT_OUTPUT INCORRECT. " &
                       "IS" & COUNT'IMAGE(PAGE_LENGTH(FILE)) & ". " &
                       "SHOULD BE" &
                       COUNT'IMAGE(PAGE_LENGTH(CURRENT_OUTPUT)));
          END IF;
     END IF;

     SET_OUTPUT (STANDARD_OUTPUT);

     SET_LINE_LENGTH (TEN);
     SET_PAGE_LENGTH (TWO);

     FOR I IN 1 .. 50 LOOP
          PUT ('X');
     END LOOP;

     IF LINE  /= TWO AND PAGE /= 3 THEN
          FAILED ("SET_LINE_LENGTH AND SET_PAGE_LENGTH ON STANDARD " &
                  "FILE NOT SUCCESSFUL");
     ELSE
          IF LINE_LENGTH /= LINE_LENGTH (STANDARD_OUTPUT) THEN
               FAILED ("LINE_LENGTH FOR CURRENT_OUTPUT INCORRECT");
          END IF;

          IF PAGE_LENGTH /= PAGE_LENGTH (STANDARD_OUTPUT) THEN
               FAILED ("PAGE_LENGTH FOR CURRENT_OUTPUT INCORRECT");
          END IF;
     END IF;

-- CHECK CONTENTS OF OUTPUT FILE

     SET_LINE_LENGTH (ORIGINAL_LINE_LENGTH);
     SET_PAGE_LENGTH (ORIGINAL_PAGE_LENGTH);

     CHECK_FILE (FILE, "CCCCCCCCCC#" &
                       "CCCCCCCCCC#@" &
                       "CCCCCCCCCC#" &
                       "CCCCCCCCCC#@" &
                       "CCCCCCCCCC#@%");
     BEGIN
          DELETE (FILE);
     EXCEPTION
          WHEN USE_ERROR =>
               NULL;
     END;

     SPECIAL_ACTION ("CHECK THAT THE CONTENTS OF THE STANDARD OUTPUT " &
                     "FILE ARE CORRECT");
     SPECIAL_ACTION ("IT SHOULD CONTAIN:");
     SPECIAL_ACTION ("TEST HEADER LINE(S)");
     SPECIAL_ACTION ("XXXXXXXXXX");
     SPECIAL_ACTION ("<NEW PAGE>");
     SPECIAL_ACTION ("XXXXXXXXXX");
     SPECIAL_ACTION ("XXXXXXXXXX");
     SPECIAL_ACTION ("<NEW PAGE>");
     SPECIAL_ACTION ("XXXXXXXXXX");
     SPECIAL_ACTION ("XXXXXXXXXX");

     RESULT;

EXCEPTION
     WHEN INCOMPLETE =>
          RESULT;

END EE3301B;
