-- MACRO.DFS

-- THIS FILE CONTAINS THE MACRO DEFINITIONS USED IN THE ACVC TESTS.
-- THESE DEFINITIONS ARE USED BY THE ACVC TEST PRE-PROCESSOR,
-- MACROSUB. MACROSUB WILL CALCULATE VALUES FOR THOSE MACRO SYMBOLS 
-- WHOSE DEFINITIONS DEPEND ON THE VALUE OF MAX_IN_LEN (NAMELY, THE
-- VALUES OF THE MACRO SYMBOLS BIG_ID1, BIG_ID2, BIG_ID3, BIG_ID4,
-- BIG_STRING1, BIG_STRING2, MAX_STRING_LITERAL, BIG_INT_LIT,
-- BIG_REAL_LIT, MAX_LEN_INT_BASED_LITERAL, MAX_LEN_REAL_BASED_LITERAL,
-- AND BLANKS).  THEREFORE, ANY VALUES GIVEN IN THIS FILE FOR THOSE
-- MACRO SYMBOLS WILL BE IGNORED BY MACROSUB.  

-- NOTE: AS REQUIRED BY THE MACROSUB PROGRAM, THE FIRST MACRO DEFINED
--       IN THIS FILE IS $MAX_IN_LEN.  THE NEXT 12 MACRO DEFINITIONS
--       ARE FOR THOSE MACRO SYMBOLS THAT DEPEND ON THE VALUE OF
--       MAX_IN_LEN.  THESE ARE IN ALPHABETIC ORDER.  FOLLOWING THESE
--       ARE 61 MORE DEFINITIONS, ALSO IN ALPHABETIC ORDER.

-- EACH DEFINITION IS ACCORDING TO THE FOLLOWING FORMAT:

-- A. A NUMBER OF LINES PRECEDED BY THE ADA COMMENT DELIMITER, --.
--    THE FIRST OF THESE LINES CONTAINS THE MACRO SYMBOL AS IT APPEARS
--    IN THE TEST FILES (WITH THE DOLLAR SIGN).  THE NEXT FEW "COMMENT"
--    LINES CONTAIN A DESCRIPTION OF THE VALUE TO BE SUBSTITUTED.
--    THE REMAINING "COMMENT" LINES, THE FIRST OF WHICH BEGINS WITH THE
--    WORDS "USED IN:  " (NO QUOTES), CONTAIN A LIST OF THE TEST FILES
--    (WITHOUT THE .TST EXTENSION) IN WHICH THE MACRO SYMBOL APPEARS.
--    EACH TEST FILE NAME IS PRECEDED BY ONE OR MORE BLANKS.
-- B. A LINE, WITHOUT THE COMMENT DELIMITER, CONSISTING OF THE 
--    IDENTIFIER (WITHOUT THE DOLLAR SIGN) OF THE MACRO SYMBOL,
--    FOLLOWED BY A SPACE OR TAB, FOLLOWED BY THE VALUE TO BE
--    SUBSTITUTED.  IN THE DISTRIBUTION FILE, A SAMPLE VALUE IS
--    PROVIDED; THIS VALUE MUST BE REPLACED BY A VALUE APPROPRIATE TO
--    THE IMPLEMENTATION.

-- DEFINITIONS ARE SEPARATED BY ONE OR MORE EMPTY LINES.
-- THE LIST OF DEFINITIONS BEGINS AFTER THE FOLLOWING EMPTY LINE.

-- $MAX_IN_LEN
-- AN INTEGER LITERAL GIVING THE MAXIMUM LENGTH PERMITTED BY THE 
-- COMPILER FOR A LINE OF ADA SOURCE CODE (NOT INCLUDING AN END-OF-LINE
-- CHARACTER).
-- USED IN:  A26007A
MAX_IN_LEN	60


-- $MAX_LEN_INT_BASED_LITERAL
-- A BASED INTEGER LITERAL (USING COLONS) WHOSE VALUE IS 2:11:, HAVING
-- ($MAX_IN_LEN - 5) ZEROES BETWEEN THE FIRST COLON AND THE FIRST 1.
-- USED IN:  C2A009A
MAX_LEN_INT_BASED_LITERAL	2:000000000000000000000000000000000000000000000000000000011:

-- $MAX_LEN_REAL_BASED_LITERAL
-- A BASED REAL LITERAL (USING COLONS) WHOSE VALUE IS 16:F.E:, HAVING
-- ($MAX_IN_LEN - 7) ZEROES BETWEEN THE FIRST COLON AND THE F.
-- USED IN:  C2A009A
MAX_LEN_REAL_BASED_LITERAL	16:00000000000000000000000000000000000000000000000000000F.E:

-- $MAX_STRING_LITERAL
-- A STRING LITERAL CONSISTING OF $MAX_IN_LEN CHARACTERS (INCLUDING THE
-- QUOTE CHARACTERS).
-- USED IN:  A26007A
MAX_STRING_LITERAL	"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"

-- $BIG_ID1
-- AN IDENTIFIER IN WHICH THE NUMBER OF CHARACTERS IS $MAX_IN_LEN.
-- THE MACROSUB PROGRAM WILL SUPPLY AN IDENTIFIER IN WHICH THE
-- LAST CHARACTER IS '1' AND ALL OTHERS ARE 'A'.
-- USED IN:  C23003A  C23003B  C23003C  B23003D  B23003E  C23003G
--           C23003H  C23003I  C23003J  C35502D  C35502F
BIG_ID1	AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1

-- $BIG_ID2
-- AN IDENTIFIER IN WHICH THE NUMBER OF CHARACTERS IS $MAX_IN_LEN,
-- DIFFERING FROM $BIG_ID1 ONLY IN THE LAST CHARACTER.  THE MACROSUB
-- PROGRAM WILL USE '2' AS THE LAST CHARACTER.
-- USED IN:  C23003A  C23003B  C23003C  B23003F  C23003G  C23003H
--           C23003I  C23003J  
BIG_ID2	AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2

-- $BIG_ID3
-- AN IDENTIFIER IN WHICH THE NUMBER OF CHARACTERS IS $MAX_IN_LEN.
-- MACROSUB WILL USE '3' AS THE "MIDDLE" CHARACTER; ALL OTHERS ARE 'A'.
-- USED IN:  C23003A  C23003B  C23003C  C23003G  C23003H  C23003I
--           C23003J
BIG_ID3	AAAAAAAAAAAAAAAAAAAAAAAAAAAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

-- $BIG_ID4
-- AN IDENTIFIER IN WHICH THE NUMBER OF CHARACTERS IS $MAX_IN_LEN,
-- DIFFERING FROM $BIG_ID3 ONLY IN THE MIDDLE CHARACTER.  MACROSUB
-- WILL USE '4' AS THE MIDDLE CHARACTER.
-- USED IN:  C23003A  C23003B  C23003C  C23003G  C23003H  C23003I
--           C23003J
BIG_ID4	AAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

-- $BIG_INT_LIT
-- AN INTEGER LITERAL WHOSE VALUE IS 298, BUT WHICH HAS
-- ($MAX_IN_LEN - 3) LEADING ZEROES.
-- USED IN:  C24003A
BIG_INT_LIT	000000000000000000000000000000000000000000000000000000000298

-- $BIG_REAL_LIT
-- A UNIVERSAL_REAL LITERAL WHOSE VALUE IS 690.0, BUT WHICH HAS
-- ($MAX_IN_LEN - 5) LEADING ZEROES.
-- USED IN:  C24003B  C24003C
BIG_REAL_LIT	0000000000000000000000000000000000000000000000000000000690.0

-- $BIG_STRING1
-- A STRING LITERAL (WITH QUOTES) WHOSE CATENATION WITH $BIG_STRING2
-- ($BIG_STRING1 & $BIG_STRING2) PRODUCES THE IMAGE OF $BIG_ID1.
-- USED IN:  C35502D  C35502F
BIG_STRING1	"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"

-- $BIG_STRING2
-- A STRING LITERAL (WITH QUOTES) WHOSE CATENATION WITH $BIG_STRING1
-- ($BIG_STRING1 & $BIG_STRING2) PRODUCES THE IMAGE OF $BIG_ID1.
-- USED IN:  C35502D  C35502F
BIG_STRING2	"AAAAAAAAAAAAAAAAAAAAAAAAAAAAA1"

-- $BLANKS
-- A SEQUENCE OF ($MAX_IN_LEN - 20) BLANKS.
-- USED IN:  B22001A  B22001B  B22001C  B22001D  B22001E  B22001F
--           B22001G  B22001I  B22001J  B22001K  B22001L  B22001M
--           B22001N
--      <       LIMITS OF SAMPLE SHOWN BY ANGLE BRACKETS           >
BLANKS	                                                            

-- $ACC_SIZE
-- AN INTEGER LITERAL WHOSE VALUE IS THE MINIMUM NUMBER OF BITS
-- SUFFICIENT TO HOLD ANY VALUE OF AN ACCESS TYPE.
-- USED IN:  AVAT135  CD2A81A  CD2A81B  CD2A81E  CD2A81F  CD2A83A  
--           CD2A83B  CD2A83C  CD2A83E  CD2A83F  CD2A83G  CD2A87A
ACC_SIZE	32

-- $ALIGNMENT
-- A VALUE THAT IS LEGITIMATE FOR USE IN A RECORD ALIGNMENT CLAUSE.
-- USED IN:  CD4041A
ALIGNMENT 4

-- $COUNT_LAST
-- AN INTEGER LITERAL WHOSE VALUE IS TEXT_IO.COUNT'LAST.
-- USED IN:  CE3002B
COUNT_LAST	32_767

-- $DEFAULT_MEM_SIZE
-- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.MEMORY_SIZE.
-- USED IN:  CD7006B  CD7006E
DEFAULT_MEM_SIZE	1048576

-- $DEFAULT_STOR_UNIT
-- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.STORAGE_UNIT.
-- USED IN:  CD7005B  ED7005D3M  CD7005E
DEFAULT_STOR_UNIT	8

-- $DEFAULT_SYS_NAME
-- THE VALUE OF THE CONSTANT SYSTEM.SYSTEM_NAME, IN UPPER CASE.
-- USED IN:  CD7004A  CD7004C  CD7004D
DEFAULT_SYS_NAME	VAX_VMS

-- $DELTA_DOC
-- A REAL LITERAL WHOSE VALUE IS SYSTEM.FINE_DELTA AS SPECIFIED IN THE
-- IMPLEMENTOR'S DOCUMENTATION.
-- USED IN:  CD7103D
DELTA_DOC	0.000000000931322574615478515625

-- $ENTRY_ADDRESS
-- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A TASK ENTRY
-- (I.E., FOR AN INTERRUPT) FOR THIS IMPLEMENTATION.
-- USED IN:  SPPRT13SP
ENTRY_ADDRESS  16#40#

-- $ENTRY_ADDRESS1
-- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A TASK ENTRY
-- (I.E., FOR AN INTERRUPT) FOR THIS IMPLEMENTATION.  THE ADDRESS
-- MUST BE DISTINCT FROM THAT USED IN $ENTRY_ADDRESS.
-- USED IN:  SPPRT13SP
ENTRY_ADDRESS1  16#80#

-- $ENTRY_ADDRESS2
-- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A TASK ENTRY
-- (I.E., FOR AN INTERRUPT) FOR THIS IMPLEMENTATION.  THE ADDRESS
-- MUST BE DISTINCT FROM THOSE USED IN $ENTRY_ADDRESS 
-- AND $ENTRY_ADDRESS1.
-- USED IN:  SPPRT13SP
ENTRY_ADDRESS2  16#100#

-- $FIELD_LAST
-- AN INTEGER LITERAL WHOSE VALUE IS TEXT_IO.FIELD'LAST.
-- USED IN:  CE3002C
FIELD_LAST	32_767

-- $FILE_TERMINATOR
-- A SEQUENCE OF ONE OR MORE CONTROL CHARACTERS USED TO REPRESENT THE
-- END OF FILE FOR FILE INPUT AND OUTPUT.
-- EXAMPLE:  ASCII.LF    OR    ASCII.CR & ASCII.SUB & ASCII.EOT
-- IF NO CONTROL CHARACTER EXISTS TO REPRESENT END OF FILE, THEN A
-- SUBSTITUTION OF ONE BLANK (' ') SHOULD BE MADE.
-- USED IN:  CE3607D
FILE_TERMINATOR	' '

-- $FIXED_NAME
-- THE NAME OF A PREDEFINED FIXED POINT TYPE OTHER THAN DURATION.
-- (IMPLEMENTATIONS WHICH HAVE NO SUCH TYPES SHOULD USE AN UNDEFINED
-- IDENTIFIER SUCH AS NO_SUCH_TYPE.)
-- USED IN:  AVAT015  B86001Y
FIXED_NAME	NO_SUCH_FIXED_TYPE

-- $FLOAT_NAME
-- THE NAME OF A PREDEFINED FLOATING POINT TYPE OTHER THAN FLOAT,
-- SHORT_FLOAT, OR LONG_FLOAT.  (IMPLEMENTATIONS WHICH HAVE NO SUCH
-- TYPES SHOULD USE AN UNDEFINED IDENTIFIER SUCH AS NO_SUCH_TYPE.)
-- USED IN:  AVAT013  C35713D  B86001Z
FLOAT_NAME	SHORT_SHORT_FLOAT

-- $FORM_STRING
-- A STRING LITERAL SPECIFYING THAT THE EXTERNAL FILE MEETS BOTH 
-- CONDITIONS: (1) THERE IS A VALUE OF TYPE TEXT_IO.COUNT THAT IS NOT
-- AN APPROPRIATE LINE-LENGTH FOR THE FILE, (2) THERE IS A VALUE 
-- OF TYPE TEXT_IO.COUNT THAT IS NOT AN APPROPRIATE PAGE-LENGTH 
-- FOR THE FILE.
-- IF IT IS NOT POSSIBLE TO SATISFY BOTH CONDITIONS, THEN SUBSTITUTE 
-- A STRING LITERAL SPECIFYING THAT THE EXTERNAL FILE SATISFIES ONE 
-- OF THE CONDITIONS.  IF IT IS NOT POSSIBLE TO SATISFY EITHER CONDITION,
-- THEN SUBSTITUE THE NULL STRING ("").
-- USED IN:  CE2203A  CE2403A  CE3304A
FORM_STRING	""

-- $FORM_STRING2
-- A STRING LITERAL SPECIFYING THAT THE CAPACITY OF THE FILE IS
-- RESTRICTED TO 4096 CHARACTERS OR LESS. IF THE IMPLEMENTATION
-- CANNOT RESTRICT FILE CAPACITY, $FORM_STRING2 SHOULD EQUAL
-- "CANNOT_RESTRICT_FILE_CAPACITY".
-- USED IN:  CE2203A  CE2403A
FORM_STRING2	"CANNOT_RESTRICT_FILE_CAPACITY"

-- $GREATER_THAN_DURATION
-- A REAL LITERAL WHOSE VALUE (NOT SUBJECT TO ROUND-OFF ERROR
-- IF POSSIBLE) LIES BETWEEN DURATION'BASE'LAST AND DURATION'LAST.  IF
-- NO SUCH VALUES EXIST, USE A VALUE IN DURATION'RANGE.
-- USED IN:  C96005B  
GREATER_THAN_DURATION	75_000.0

-- $GREATER_THAN_DURATION_BASE_LAST
-- A REAL LITERAL WHOSE VALUE IS GREATER THAN DURATION'BASE'LAST.
-- USED IN:  C96005C
GREATER_THAN_DURATION_BASE_LAST	131_073.0

-- $GREATER_THAN_FLOAT_BASE_LAST
-- A REAL LITERAL WHOSE VALUE IS GREATER THAN FLOAT'BASE'LAST.
-- USED IN:  C45242A
GREATER_THAN_FLOAT_BASE_LAST 1.80141E+38

-- $GREATER_THAN_FLOAT_SAFE_LARGE
-- A REAL LITERAL HAVING A VALUE WHICH IS GREATER THAN FLOAT'SAFE_LARGE,
-- BUT WITHIN THE RANGE OF THE BASE TYPE.
-- USED IN:  C45423A
GREATER_THAN_FLOAT_SAFE_LARGE  1.0E308

-- $GREATER_THAN_SHORT_FLOAT_SAFE_LARGE
-- A REAL LITERAL HAVING A VALUE WHICH IS GREATER THAN
-- SHORT_FLOAT'SAFE_LARGE, BUT WITHIN THE RANGE OF THE BASE TYPE.
-- USED IN:  C45423B
GREATER_THAN_SHORT_FLOAT_SAFE_LARGE  1.0E308
-- $HIGH_PRIORITY
-- AN INTEGER LITERAL WHOSE VALUE IS THE UPPER BOUND OF THE RANGE
-- FOR THE SUBTYPE SYSTEM.PRIORITY.
-- USED IN:  CD7007C
HIGH_PRIORITY	15

-- $ILLEGAL_EXTERNAL_FILE_NAME1
-- AN ILLEGAL EXTERNAL FILE NAME (E.G., TOO LONG, CONTAINING INVALID
-- CHARACTERS, CONTAINING WILD-CARD CHARACTERS, OR SPECIFYING A
-- NONEXISTENT DIRECTORY).
-- USED IN:  CE2102C  CE2102H  CE2103A  CE2103B  CE3102B  CE3107A
ILLEGAL_EXTERNAL_FILE_NAME1	\NODIRECTORY\FILENAME

-- $ILLEGAL_EXTERNAL_FILE_NAME2
-- AN ILLEGAL EXTERNAL FILE NAME, DIFFERENT FROM $EXTERNAL_FILE_NAME1.
-- USED IN:  CE2102C  CE2102H  CE2103A  CE2103B  CE3102B
ILLEGAL_EXTERNAL_FILE_NAME2	THIS-FILE-NAME-IS-TOO-LONG-FOR-MY-SYSTEM

-- $INAPPROPRIATE_LINE_LENGTH
-- A LITERAL OF TYPE COUNT THAT IS INAPPROPRIATE AS THE LINE-LENGTH
-- FOR THE EXTERNAL FILE.  IF THERE IS NO SUCH VALUE, THEN USE -1.
-- USED IN:  CE3304A
INAPPROPRIATE_LINE_LENGTH	-1

-- $INAPPROPRIATE_PAGE_LENGTH
-- A LITERAL OF TYPE COUNT THAT IS INAPPROPRIATE AS THE PAGE-LENGTH
-- FOR THE EXTERNAL FILE.  IF THERE IS NO SUCH VALUE, THEN USE -1.
-- USED IN:  CE3304A
INAPPROPRIATE_PAGE_LENGTH	-1

-- $INCLUDE_PRAGMA1
-- A LINE OF CODE WHICH SPECIFIES PRAGMA INCLUDE (OR AN
-- IMPLEMENTATION'S PRAGMA WHICH HAS THE EFFECT OF
-- COPYING SOURCE CODE FROM ANOTHER FILE) AND THE ARGUMENTS TO THIS 
-- PRAGMA.  THE FILE TO WHICH THE PRAGMA SHOULD REFER IS A28006D1.TST.
-- IF AN IMPLEMENTATION SUPPORTS NO SUCH PRAGMA, THEN USE 
-- "PRAGMA INCLUDE ("A28006D1.TST"); "
-- USED IN:  A28006D0M
INCLUDE_PRAGMA1	PRAGMA INCLUDE ("A28006D1.ADA")

-- $INCLUDE_PRAGMA2
-- A LINE OF CODE WHICH SPECIFIES PRAGMA INCLUDE (OR AN
-- IMPLEMENTATION'S PRAGMA WHICH HAS THE EFFECT OF
-- COPYING SOURCE CODE FROM ANOTHER FILE) AND THE ARGUMENTS TO THIS 
-- PRAGMA.  THE FILE TO WHICH THE PRAGMA SHOULD REFER IS B28006D1.TST.
-- IF AN IMPLEMENTATION SUPPORTS NO SUCH PRAGMA, THEN USE 
-- "PRAGMA INCLUDE ("B28006D1.TST"); "
-- USED IN:  B28006F0M
INCLUDE_PRAGMA2	PRAGMA INCLUDE ("B28006E1.ADA")

-- $INTEGER_FIRST
-- AN INTEGER LITERAL, WITH SIGN, WHOSE VALUE IS INTEGER'FIRST.
-- THE LITERAL MUST NOT INCLUDE UNDERSCORES OR LEADING OR TRAILING
-- BLANKS.
-- USED IN:  C35503F  B54B01B
INTEGER_FIRST	-32768

-- $INTEGER_LAST
-- AN INTEGER LITERAL WHOSE VALUE IS INTEGER'LAST.  THE LITERAL MUST
-- NOT INCLUDE UNDERSCORES OR LEADING OR TRAILING BLANKS.
-- USED IN:  C35503F  C45232A  B54B01B
INTEGER_LAST	32767

-- $INTEGER_LAST_PLUS_1
-- AN INTEGER LITERAL WHOSE VALUE IS INTEGER'LAST + 1.
-- USED IN:  C36105B  C45232A
INTEGER_LAST_PLUS_1	32_768

-- $INTERFACE_LANGUAGE
-- A NAME OF A LANGUAGE FOR THE PRAGMA INTERFACE THAT IS SUPPORTED
-- BY THE IMPLEMENTATION.  IF THE IMPLEMENTATION DOES NOT SUPPORT
-- THE INTERFACE PRAGMA THEN USE ANY IDENTIFER (E.G., NO_LANGUAGE).
-- USED IN:  BD9001A  AD9001B  ED9002A  AD9004A  BD9004B  CD9005A
--           CD9005B
INTERFACE_LANGUAGE	FORTRAN

-- $LESS_THAN_DURATION
-- A REAL LITERAL (WITH SIGN) WHOSE VALUE (NOT SUBJECT TO
-- ROUND-OFF ERROR IF POSSIBLE) LIES BETWEEN DURATION'BASE'FIRST AND
-- DURATION'FIRST.  IF NO SUCH VALUES EXIST, USE A VALUE IN 
-- DURATION'RANGE.
-- USED IN:  C96005B  
LESS_THAN_DURATION	-75_000.0

-- $LESS_THAN_DURATION_BASE_FIRST
-- A REAL LITERAL (WITH SIGN) WHOSE VALUE IS LESS THAN
-- DURATION'BASE'FIRST.
-- USED IN:  C96005C
LESS_THAN_DURATION_BASE_FIRST	-131_073.0

-- $LINE_TERMINATOR
-- A SEQUENCE OF ONE OR MORE CONTROL CHARACTERS USED TO REPRESENT THE
-- END OF LINE FOR FILE INPUT AND OUTPUT.
-- EXAMPLE:  ASCII.LF    OR    ASCII.CR & ASCII.LF
-- IF NO CONTROL CHARACTER EXISTS TO REPRESENT END OF LINE, THEN A
-- SUBSTITUTION OF ONE BLANK (' ') SHOULD BE MADE.
-- USED IN:  CE3607B
LINE_TERMINATOR	' '

-- $LOW_PRIORITY
-- AN INTEGER LITERAL WHOSE VALUE IS THE LOWER BOUND OF THE RANGE
-- FOR THE SUBTYPE SYSTEM.PRIORITY.
-- USED IN:  CD7007C
LOW_PRIORITY	0

-- $MACHINE_CODE_STATEMENT
-- A VALID MACHINE CODE STATEMENT AS SPECIFIED IN THE PACKAGE
-- MACHINE_CODE.  IF THE IMPLEMENTATION DOES NOT SUPPORT MACHINE
-- CODE THEN USE THE ADA NULL STATEMENT (I.E. NULL; ). 
-- USED IN:  AD8011A  BD8001A  BD8002A  BD8003A  BD8004A  BD8004B  
--           BD8004C  
MACHINE_CODE_STATEMENT	NULL;

-- $MACHINE_CODE_TYPE
-- ANY TYPE DECLARED IN THE PACKAGE MACHINE_CODE.  IF THE MACHINE_CODE
-- PACKAGE IS NOT DEFINED FOR THE IMPLEMENTATION THEN USE ANY UNDEFINED
-- TYPE NAME (E.G., NO_SUCH_TYPE)
-- USED IN:  BA1001B  BA1001C
MACHINE_CODE_TYPE	NO_SUCH_TYPE

-- $MANTISSA_DOC
-- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.MAX_MANTISSA AS SPECIFIED
-- IN THE IMPLEMENTOR'S DOCUMENTATION.
-- USED IN:  CD7103B
MANTISSA_DOC	31

-- $MAX_DIGITS
-- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.MAX_DIGITS.
-- USED IN:  CD7102B
MAX_DIGITS	33

-- $MAX_INT
-- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.MAX_INT.
-- THE LITERAL MUST NOT INCLUDE UNDERSCORES OR LEADING OR TRAILING 
-- BLANKS.
-- USED IN:  C35503D  C35503F  C4A007A  CD7101B
MAX_INT	2147483647

-- $MAX_INT_PLUS_1
-- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.MAX_INT + 1.
-- USED IN:  C45232A
MAX_INT_PLUS_1	2_147_483_648

-- $MIN_INT
-- AN INTEGER LITERAL, WITH SIGN, WHOSE VALUE IS SYSTEM.MIN_INT.
-- THE LITERAL MUST NOT CONTAIN UNDERSCORES OR LEADING OR TRAILING 
-- BLANKS.
-- USED IN:  C35503D  C35503F  CD7101B
MIN_INT	-2147483648

-- $NAME
-- THE NAME OF A PREDEFINED INTEGER TYPE OTHER THAN INTEGER,
-- SHORT_INTEGER, OR LONG_INTEGER.
-- (IMPLEMENTATIONS WHICH HAVE NO SUCH TYPES SHOULD USE AN UNDEFINED
-- IDENTIFIER SUCH AS   NO_SUCH_TYPE_AVAILABLE.)
-- USED IN:  AVAT007  C35404D  C45231D  B86001X  C86006E  CD7101G  
NAME	SHORT_SHORT_INTEGER

-- $NAME_LIST
-- A LIST OF THE ENUMERATION LITERALS IN THE TYPE SYSTEM.NAME, SEPARATED
-- BY COMMAS.
-- USED IN:  CD7003A
NAME_LIST	VAX_VMS, VAXELN

-- $NAME_SPECIFICATION1
-- THE FULL SPECIFICATION FOR THE FILENAME RETURNED FROM THE FUNCTION
-- LEGAL_FILE_NAME WHEN CALLED FROM TEST CE2120A.
-- USED IN:  CE2120A
NAME_SPECIFICATION1	DISK$AWC_2:[CROCKETTL.ACVC11.DEVELOPMENT]X2120A.;1

-- $NAME_SPECIFICATION2
-- THE FULL SPECIFICATION FOR THE FILENAME RETURNED FROM THE FUNCTION
-- LEGAL_FILE_NAME WHEN CALLED FROM TEST CE2120B.
-- USED IN:  CE2120B
NAME_SPECIFICATION2	DISK$AWC_2:[CROCKETTL.ACVC11.DEVELOPMENT]X2120B.;1

-- $NAME_SPECIFICATION3
-- THE FULL SPECIFICATION FOR THE FILENAME RETURNED FROM THE FUNCTION
-- LEGAL_FILE_NAME WHEN CALLED FOM TEST CE3119A.
-- USED IN:  CE3119A
NAME_SPECIFICATION3	DISK$AWC_2:[CROCKETTL.ACVC11.DEVELOPMENT]X2120C.;1

-- $NEG_BASED_INT
-- A BASED_INTEGER LITERAL (PREFERABLY BASE 8 OR 16) WHOSE HIGHEST ORDER
-- NON-ZERO BIT WOULD FALL IN THE SIGN BIT POSITION OF THE
-- REPRESENTATION FOR SYSTEM.MAX_INT, I.E., AN ATTEMPT TO WRITE A
-- NEGATIVE VALUED LITERAL SUCH AS -2 BY TAKING ADVANTAGE OF THE
-- BIT REPRESENTATION.
-- USED IN:  C24201A
NEG_BASED_INT	16#F000000E#

-- $NEW_MEM_SIZE
-- AN INTEGER LITERAL WHOSE VALUE IS A PERMITTED ARGUMENT FOR
-- PRAGMA MEMORY_SIZE, OTHER THAN $DEFAULT_MEM_SIZE.  IF THERE IS NO
-- OTHER VALUE, THEN USE $DEFAULT_MEM_SIZE.  IF THERE IS MORE THAN
-- ONE ALTERNATIVE, THEN THE PERTINENT TESTS SHOULD BE RUN ONCE FOR
-- EACH ALTERNATIVE.  IF THE NUMBER OF PERMITTED VALUES IS LARGE, THEN
-- SEVERAL VALUES SHOULD BE USED, COVERING A WIDE RANGE OF
-- POSSIBILITIES.
-- USED IN:  CD7006E
NEW_MEM_SIZE	65535

-- $NEW_STOR_UNIT
-- AN INTEGER LITERAL WHOSE VALUE IS A PERMITTED ARGUMENT FOR
-- PRAGMA STORAGE_UNIT, OTHER THAN $DEFAULT_STOR_UNIT.  IF THERE
-- IS NO OTHER PERMITTED VALUE, THEN USE THE VALUE OF
-- SYSTEM.STORAGE_UNIT.  IF THERE IS MORE THAN ONE ALTERNATIVE,
-- THEN THE PERTINENT TESTS SHOULD BE RUN ONCE FOR EACH ALTERNATIVE.
-- USED IN:  ED7005D1  CD7005E
NEW_STOR_UNIT	16

-- $NEW_SYS_NAME
-- A VALUE OF THE TYPE SYSTEM.NAME, OTHER THAN $DEFAULT_SYS_NAME.  IF
-- THERE IS ONLY ONE VALUE OF THE TYPE, THEN USE THAT VALUE.
-- NOTE: IF THERE ARE MORE THAN TWO VALUES OF THE TYPE, THEN THE
--       PERTINENT TESTS ARE TO BE RUN ONCE FOR EACH ALTERNATIVE.
-- USED IN:  CD7004C
NEW_SYS_NAME	OUR_ULTRIX_ADA

-- $PAGE_TERMINATOR
-- A SEQUENCE OF ONE OR MORE CONTROL CHARACTERS USED TO REPRESENT THE
-- END OF PAGE FOR FILE INPUT AND OUTPUT.
-- EXAMPLE:  ASCII.LF    OR    ASCII.CR & ASCII.FF
-- IF NO CONTROL CHARACTER EXISTS TO REPRESENT END OF PAGE, THEN A
-- SUBSTITUTION OF ONE BLANK (' ') SHOULD BE MADE.
-- USED IN:  CE3607C
PAGE_TERMINATOR	ASCII.FF

-- $RECORD_DEFINITION
-- THE RECORD TYPE DEFINITION (WITH FINAL SEMICOLON) FOR THE TYPE THAT 
-- WAS USED IN THE MACRO $RECORD_NAME, AS DECLARED IN PACKAGE 
-- MACHINE_CODE.  IF THE IMPLEMENTATION DOES NOT SUPPORT MACHINE CODE,
-- THEN USE "NEW INTEGER;"
-- USED IN:  BD8002A
RECORD_DEFINITION	RECORD  NULL; END RECORD;

-- $RECORD_NAME
-- A VALID RECORD TYPE NAME THAT IS DEFINED IN PACKAGE MACHINE_CODE.
-- IF THE IMPLEMENTATION DOES NOT SUPPORT MACHINE CODE THEN 
-- USE THE NAME "NO_SUCH_MACHINE_CODE_TYPE"
-- USED IN:  BD8002A
RECORD_NAME	NO_SUCH_MACHINE_CODE_TYPE

-- $TASK_SIZE
-- AN INTEGER LITERAL WHOSE VALUE IS THE NUMBER OF BITS REQUIRED TO
-- HOLD A TASK OBJECT.
-- USED IN:  AVAT137  CD2A91A  CD2A91B  CD2A91C  CD2A91D  CD2A91E
TASK_SIZE	128

-- $TASK_STORAGE_SIZE
-- THE NUMBER OF STORAGE UNITS REQUIRED FOR A TASK ACTIVATION.
-- USED IN:  A39005D  BD2C01D  BD2C02A  BD2C03A  BD2C14A  C87B62D  
--           CD1009K  CD1009T  CD1009U  CD1C03E  CD1C06A  CD2C11A  
--           CD2C11B  CD2C11D  
TASK_STORAGE_SIZE 1024

-- $TICK
-- A REAL LITERAL WHOSE VALUE IS SYSTEM.TICK AS SPECIFIED IN THE
-- IMPLEMENTOR'S DOCUMENTATION.
-- USED IN:  CD7104B
TICK	0.01

-- $VARIABLE_ADDRESS
-- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A VARIABLE FOR THIS 
-- IMPLEMENTATION.
-- USED IN:  SPPRT13SP
VARIABLE_ADDRESS  16#0020#

-- $VARIABLE_ADDRESS1
-- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A VARIABLE FOR THIS 
-- IMPLEMENTATION.  THE ADDRESS MUST BE DISTINCT FROM THAT USED IN
-- THE MACRO $VARIABLE_ADDRESS.
-- USED IN:  SPPRT13SP
VARIABLE_ADDRESS1  16#0024#

-- $VARIABLE_ADDRESS2
-- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A VARIABLE FOR THIS 
-- IMPLEMENTATION.  THE ADDRESS MUST BE DISTINCT FROM THOSE USED IN
-- THE MACROS $VARIABLE_ADDRESS AND $VARIABLE_ADDRESS1.
-- USED IN:  SPPRT13SP
VARIABLE_ADDRESS2  16#0028#

-- $YOUR_PRAGMA
-- AN IMPLEMENTATION DEFINED PRAGMA THAT IS PERMITTED AN IDENTIFIER
-- ARGUMENT.  IF THE IMPLEMENTATION DOESN'T SUPPORT SUCH PRAGMAS 
-- THEN USE THE NAME "NO_SUCH_PRAGMA" FOR THE MACRO. IF THERE
-- IS MORE THAN ONE SUCH PRAGMA, THEN THE PERTINENT TEST SHOULD
-- BE RUN ONCE FOR EACH ALTERNATIVE. IF THE NUMBER OF ALTERNATIVES
-- IS LARGE, THEN SEVERAL PRAGMAS SHOULD BE USED, COVERING A WIDE 
-- RANGE OF POSSIBILITIES. 
-- USED IN:  B28006C
YOUR_PRAGMA	EXPORT_OBJECT
