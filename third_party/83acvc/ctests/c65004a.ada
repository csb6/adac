-- C65004A.ADA

-- OBJECTIVE:
--     CHECK THAT A FUNCTION CAN PROPAGATE AN EXCEPTION OUT OF ITS
--     BODY WITHOUT RAISING "PROGRAM_ERROR".

-- HISTORY:
--     DHH 03/07/88 CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;
PROCEDURE C65004A IS

     SUBTYPE INT IS INTEGER RANGE 1.. 10;
     A,B,C : INT := 2;

     FUNCTION INTERNAL_PROPAGATE(X : INT) RETURN INT IS
          Y : INT;
     BEGIN
          Y := X * IDENT_INT(12);
          RETURN Y;
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               RAISE CONSTRAINT_ERROR;
          WHEN OTHERS =>
               FAILED("UNEXPECTED EXCEPTION RAISED");
     END INTERNAL_PROPAGATE;

     FUNCTION EXTERNAL_PROPAGATE(X : INT) RETURN INT IS
          Y : INT;
     BEGIN
          Y := X * IDENT_INT(12);
          RETURN Y;
     END EXTERNAL_PROPAGATE;
BEGIN

     TEST("C65004A", "CHECK THAT A FUNCTION CAN PROPAGATE AN " &
                     "EXCEPTION OUT OF ITS BODY WITHOUT RAISING " &
                     """PROGRAM_ERROR""");

     BEGIN
          A := INTERNAL_PROPAGATE(IDENT_INT(2));
          FAILED("CONSTRAINT ERROR NOT RAISED");
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED("CONSTRAINT ERROR NOT PROPAGATED - INTERNAL");
     END;

     BEGIN
          B := EXTERNAL_PROPAGATE(IDENT_INT(2));
          FAILED("CONSTRAINT ERROR NOT RAISED");
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED("CONSTRAINT ERROR NOT PROPAGATED - EXTERNAL");
     END;

     IF EQUAL(3,3) THEN
          C := IDENT_INT(A * B);
     ELSE
          C := IDENT_INT( A MOD B);
     END IF;
     RESULT;
END C65004A;
