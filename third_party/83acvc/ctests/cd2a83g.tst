-- CD2A83G.TST

-- OBJECTIVE:
--     CHECK THAT WHEN SIZE AND COLLECTION SIZE SPECIFICATIONS
--     ARE GIVEN FOR AN ACCESS TYPE WHOSE DESIGNATED TYPE
--     IS A TASK, THEN OPERATIONS ON THE TYPE ARE NOT AFFECTED
--     BY THE REPRESENTATION CLAUSES.

-- HISTORY:
--     JET 09/02/87 CREATED ORIGINAL TEST.
--     DHH 08/17/88 INSERTED DELAY STATEMENTS IN LOOPS.
--     DHH 04/11/89  REMOVED APPLICABILITY CRITERIA, CHANGED OPERATOR ON
--                   'SIZE CHECKS.

--     $ACC_SIZE IS THE SIZE IN BITS OF AN ACCESS VARIABLE WHOSE
--     DESIGNATED TYPE IS A TASK TYPE.

WITH REPORT;  USE REPORT;

PROCEDURE CD2A83G IS

     BASIC_SIZE : CONSTANT := $ACC_SIZE;
     COLL_SIZE : CONSTANT := 2048;

     I, J : INTEGER := 10;

     TASK TYPE CHECK_TASK IS
          ENTRY E1 (T : OUT INTEGER);
          ENTRY E2 (1 .. 3) (T : OUT INTEGER);
     END CHECK_TASK;

     TYPE CHECK_ACC IS ACCESS CHECK_TASK;
     FOR CHECK_ACC'STORAGE_SIZE USE COLL_SIZE;
     FOR CHECK_ACC'SIZE USE BASIC_SIZE;

     ACC_TASK : CHECK_ACC := NULL;

     TASK BODY CHECK_TASK IS
     BEGIN
          SELECT
               ACCEPT E1 (T : OUT INTEGER) DO
                    T := 0;
               END E1;
          OR
               ACCEPT E2(1) (T : OUT INTEGER) DO
                    T := 1;
               END E2;
          OR
               ACCEPT E2(2) (T : OUT INTEGER) DO
                    T := 2;
               END E2;
          OR
               ACCEPT E2(3) (T : OUT INTEGER) DO
                    T := 3;
               END E2;
          END SELECT;
     END CHECK_TASK;

BEGIN
     TEST ("CD2A83G", "CHECK THAT WHEN SIZE AND COLLECTION SIZE " &
                      "SPECIFICATIONS ARE " &
                      "GIVEN FOR AN ACCESS TYPE WHOSE DESIGNATED " &
                      "TYPE IS A TASK, THEN OPERATIONS ON VALUES " &
                      "OF SUCH A TYPE ARE NOT AFFECTED BY THE " &
                      "REPRESENTATION CLAUSE");

     IF CHECK_ACC'SIZE /= IDENT_INT (BASIC_SIZE) THEN
          FAILED ("INCORRECT VALUE OF CHECK_ACC'SIZE");
     END IF;

     IF CHECK_ACC'STORAGE_SIZE < IDENT_INT (COLL_SIZE) THEN
          FAILED ("INCORRECT VALUE OF CHECK_ACC'STORAGE_SIZE");
     END IF;

     ACC_TASK := NEW CHECK_TASK;
     IF ACC_TASK'CALLABLE THEN
          ACC_TASK.E1 (I);
          LOOP
               DELAY 1.0;
               EXIT WHEN ACC_TASK'TERMINATED;
          END LOOP;
     ELSE
          FAILED ("INCORRECT VALUE OF ACC_TASK'CALLABLE - 1");
     END IF;

     ACC_TASK := NEW CHECK_TASK;
     IF ACC_TASK'CALLABLE THEN
          ACC_TASK.E2(2) (J);
          LOOP
               DELAY 1.0;
               EXIT WHEN ACC_TASK'TERMINATED;
          END LOOP;
     ELSE
          FAILED ("INCORRECT VALUE OF ACC_TASK'CALLABLE - 2");
     END IF;

     IF I /= IDENT_INT (0) THEN
          FAILED ("INCORRECT ENTRY CALLED - 1");
     END IF;

     IF J /= IDENT_INT (2) THEN
          FAILED ("INCORRECT ENTRY CALLED - 2");
     END IF;

     RESULT;

END CD2A83G;
