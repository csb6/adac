-- CD2A83A.TST

-- OBJECTIVE:
--     CHECK THAT WHEN SIZE AND COLLECTION SIZE SPECIFICATIONS
--     ARE GIVEN FOR AN ACCESS TYPE, THEN OPERATIONS ON
--     VALUES OF SUCH A TYPE ARE NOT AFFECTED BY THE
--     REPRESENTATION CLAUSES.

-- HISTORY:
--     JET 09/01/87  CREATED ORIGINAL TEST.
--     DHH 04/11/89  CHANGED OPERATOR ON 'SIZE CHECKS AND REMOVED
--                   APPLICABILITY CRITERIA.

--     $ACC_SIZE IS THE SIZE IN BITS OF AN ACCESS VARIABLE WHOSE
--     DESIGNATED TYPE IS A STRING TYPE.

WITH REPORT;  USE REPORT;

PROCEDURE CD2A83A IS

     BASIC_SIZE : CONSTANT := $ACC_SIZE;
     COLL_SIZE : CONSTANT := 256;

     TYPE CHECK_ACC IS ACCESS STRING;

     FOR CHECK_ACC'STORAGE_SIZE USE COLL_SIZE;
     FOR CHECK_ACC'SIZE USE BASIC_SIZE;

     SUBTYPE SUB_CHECK IS CHECK_ACC (IDENT_INT(1) .. IDENT_INT(3));

     A0 : CHECK_ACC := NULL;
     A1 : CHECK_ACC := NULL;
     A2 : CHECK_ACC := NULL;
     A3 : CHECK_ACC := NULL;

     TYPE ARRAY_TYPE IS ARRAY (INTEGER RANGE 1 .. 3) OF CHECK_ACC;
     ACC_ARRAY : ARRAY_TYPE;

     TYPE REC_TYPE IS RECORD
          COMP1 : CHECK_ACC := NULL;
          COMP2 : CHECK_ACC := NULL;
          COMP3 : CHECK_ACC := NULL;
     END RECORD;
     ACC_REC : REC_TYPE;

     PROCEDURE PROC (PI1,  PI2  :        CHECK_ACC;
                     PIO1, PIO2 : IN OUT CHECK_ACC;
                     PO1        :    OUT CHECK_ACC) IS
     BEGIN
          IF PI1'SIZE < IDENT_INT (BASIC_SIZE) THEN
               FAILED ("INCORRECT VALUE FOR PI1'SIZE");
          END IF;

          IF NOT ((PI1 = PIO1) AND (PIO2 /= PI1)) THEN
               FAILED ("INCORRECT RESULTS FOR RELATIONAL " &
                       "OPERATORS - 4");
          END IF;

          IF (PI1 NOT IN SUB_CHECK) OR (PIO2 IN SUB_CHECK) THEN
               FAILED ("INCORRECT RESULTS FOR MEMBERSHIP " &
                       "OPERATORS - 4");
          END IF;

          IF NOT ((PI1.ALL  = IDENT_STR("RED"))  AND
                  (PI2.ALL  = IDENT_STR("BLUE")) AND
                  (PIO2.ALL = IDENT_STR("BLUE")) AND
                  (PIO1.ALL = IDENT_STR("RED"))) THEN
               FAILED ("INCORRECT ACCESS TO OBJECTS - 4");
          END IF;

          IF PI1 (3) /= IDENT_CHAR ('D') OR
             PI2 (2) /= IDENT_CHAR ('L') THEN
               FAILED ("INCORRECT ACCESS TO ARRAY INDICES - 4");
          END IF;

          IF PI1 (1 .. 3) /= IDENT_STR ("RED") OR
             PI2 (2 .. 3) /= IDENT_STR ("LU")  THEN
               FAILED ("INCORRECT ACCESS TO ARRAY SLICES - 4");
          END IF;

          IF NOT (PI1'FIRST = 1 AND PIO2'FIRST = 1) THEN
               FAILED ("INCORRECT VALUE OF ATTRIBUTE FIRST - 4");
          END IF;

          IF NOT (PI2'LAST = 4 AND PIO1'LAST = 3) THEN
               FAILED ("INCORRECT VALUE OF ATTRIBUTE LAST - 4");
          END IF;

          IF NOT (PI1 (PI1'RANGE) = IDENT_STR ("RED")     AND
                  PIO2 (PIO2'RANGE) = IDENT_STR ("BLUE")) THEN
               FAILED ("INCORRECT VALUE OF ATTRIBUTE RANGE - 4");
          END IF;

          IF NOT (PI1'LENGTH = 3 AND PIO2'LENGTH = 4) THEN
               FAILED ("INCORRECT VALUE OF ATTRIBUTE LENGTH - 4");
          END IF;

          PO1 := NEW STRING'(IDENT_STR ("GREEN"));

     END PROC;

BEGIN
     TEST ("CD2A83A", "CHECK THAT IF SIZE AND COLLECTION SIZE " &
                      "SPECIFICATIONS CAN BE GIVEN FOR AN ACCESS " &
                      "TYPE, THEN OPERATIONS ON VALUES OF SUCH " &
                      "A TYPE ARE NOT AFFECTED BY THE " &
                      "REPRESENTATION CLAUSES");

     IF CHECK_ACC'SIZE /= IDENT_INT (BASIC_SIZE) THEN
          FAILED ("INCORRECT VALUE FOR CHECK_ACC'SIZE");
     END IF;

     IF CHECK_ACC'STORAGE_SIZE < IDENT_INT (COLL_SIZE) THEN
          FAILED ("INCORRECT VALUE FOR CHECK_ACC'STORAGE_SIZE");
     END IF;

     IF A1'SIZE < IDENT_INT (BASIC_SIZE) THEN
          FAILED ("INCORRECT VALUE FOR A1'SIZE");
     END IF;

     A1 := NEW STRING (1 .. 3);
     A2 := NEW STRING'("BLUE");
     A3 := A1;

     A1.ALL := IDENT_STR("RED");

     IF NOT ((A1 = A3) AND (A1 /= A2)) THEN
          FAILED ("INCORRECT RESULTS FOR RELATIONAL OPERATORS - 1");
     END IF;

     IF (A1 NOT IN SUB_CHECK) OR (A2 IN SUB_CHECK) THEN
          FAILED ("INCORRECT RESULTS FOR MEMBERSHIP OPERATORS - 1");
     END IF;

     IF NOT ((A1.ALL = IDENT_STR ("RED"))  AND
             (A2.ALL = IDENT_STR ("BLUE")) AND
             (A3.ALL = IDENT_STR ("RED"))) THEN
          FAILED ("INCORRECT ACCESS TO OBJECTS - 1");
     END IF;

     IF A1 (3) /= IDENT_CHAR ('D') OR A2 (2) /= IDENT_CHAR ('L') THEN
          FAILED ("INCORRECT ACCESS TO ARRAY INDICES - 1");
     END IF;

     IF A1 (1 .. 3) /= IDENT_STR ("RED") OR
        A2 (2 .. 3) /= IDENT_STR ("LU")  THEN
          FAILED ("INCORRECT ACCESS TO ARRAY SLICES - 1");
     END IF;

     IF NOT (A1'FIRST = 1 AND A2'FIRST = 1) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE FIRST - 1");
     END IF;

     IF NOT (A1'LAST = 3 AND A2'LAST = 4) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE LAST - 1");
     END IF;

     IF NOT (A1 (A1'RANGE) = IDENT_STR ("RED")   AND
             A2 (A2'RANGE) = IDENT_STR ("BLUE")) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE RANGE - 1");
     END IF;

     IF NOT (A1'LENGTH = 3 AND A2'LENGTH = 4) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE LENGTH - 1");
     END IF;

     IF ACC_ARRAY(2)'SIZE <IDENT_INT (BASIC_SIZE) THEN
          FAILED ("INCORRECT VALUE FOR ACC_ARRAY(2)'SIZE");
     END IF;

     ACC_ARRAY(1) := NEW STRING (1 .. 3);
     ACC_ARRAY(2) := NEW STRING'("BLUE");
     ACC_ARRAY(3) := ACC_ARRAY (1);

     ACC_ARRAY(1).ALL := "RED";

     IF NOT ((ACC_ARRAY(1)  = ACC_ARRAY(3))  AND
             (ACC_ARRAY(1) /= ACC_ARRAY(2))) THEN
          FAILED ("INCORRECT RESULTS FOR RELATIONAL OPERATORS - 2");
     END IF;

     IF NOT ((ACC_ARRAY(1).ALL = IDENT_STR ("RED"))  AND
             (ACC_ARRAY(2).ALL = IDENT_STR ("BLUE")) AND
             (ACC_ARRAY(3).ALL = IDENT_STR ("RED"))) THEN
          FAILED ("INCORRECT ACCESS TO OBJECTS - 2");
     END IF;

     IF (ACC_ARRAY(1) NOT IN SUB_CHECK) OR
        (ACC_ARRAY(2) IN SUB_CHECK)     THEN
          FAILED ("INCORRECT RESULTS FOR MEMBERSHIP OPERATORS - 2");
     END IF;

     IF ACC_ARRAY(1)(3) /= IDENT_CHAR ('D') OR
        ACC_ARRAY(2)(2) /= IDENT_CHAR ('L') THEN
          FAILED ("INCORRECT ACCESS TO ARRAY INDICES - 2");
     END IF;

     IF ACC_ARRAY(1)(1 .. 3) /= IDENT_STR ("RED") OR
        ACC_ARRAY(2)(2 .. 3) /= IDENT_STR ("LU")  THEN
          FAILED ("INCORRECT ACCESS TO ARRAY SLICES - 2");
     END IF;

     IF NOT (ACC_ARRAY(1)'FIRST = 1 AND ACC_ARRAY(2)'FIRST(1) = 1) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE FIRST - 2");
     END IF;

     IF NOT (ACC_ARRAY(2)'LAST = 4 AND ACC_ARRAY(1)'LAST(1) = 3) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE LAST - 2");
     END IF;

     IF NOT (ACC_ARRAY(1)(ACC_ARRAY(1)'RANGE) = IDENT_STR ("RED") AND
             ACC_ARRAY(2)(ACC_ARRAY(2)'RANGE(1)) = IDENT_STR ("BLUE"))
     THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE RANGE - 2");
     END IF;

     IF NOT (ACC_ARRAY(1)'LENGTH = 3     AND
             ACC_ARRAY(2)'LENGTH(1) = 4) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE LENGTH - 2");
     END IF;

     IF ACC_REC.COMP3'SIZE <IDENT_INT (BASIC_SIZE) THEN
          FAILED ("INCORRECT VALUE FOR ACC_REC.COMP3'SIZE");
     END IF;

     ACC_REC.COMP1 := NEW STRING (1 .. 3);
     ACC_REC.COMP2 := NEW STRING'("BLUE");
     ACC_REC.COMP3 := ACC_REC.COMP1;

     ACC_REC.COMP3.ALL := IDENT_STR("RED");

     IF NOT ((ACC_REC.COMP1.ALL  = ACC_REC.COMP3.ALL)  AND
             (ACC_REC.COMP1.ALL /= ACC_REC.COMP2.ALL)) THEN
          FAILED ("INCORRECT RESULTS FOR RELATIONAL OPERATORS - 3");
     END IF;

     IF NOT ((ACC_REC.COMP1.ALL = IDENT_STR("RED"))  AND
             (ACC_REC.COMP2.ALL = IDENT_STR("BLUE")) AND
             (ACC_REC.COMP3.ALL = IDENT_STR("RED"))) THEN
          FAILED ("INCORRECT ACCESS TO OBJECTS - 3");
     END IF;

     IF (ACC_REC.COMP2 IN SUB_CHECK)     OR
        (ACC_REC.COMP3 NOT IN SUB_CHECK) THEN
          FAILED ("INCORRECT RESULTS FOR MEMBERSHIP OPERATORS - 3");
     END IF;

     IF ACC_REC.COMP1(3) /= IDENT_CHAR ('D') OR
        ACC_REC.COMP2(2) /= IDENT_CHAR ('L') THEN
          FAILED ("INCORRECT ACCESS TO ARRAY INDICES - 3");
     END IF;

     IF ACC_REC.COMP1(1 .. 3) /= IDENT_STR ("RED") OR
        ACC_REC.COMP2(2 .. 3) /= IDENT_STR ("LU")  THEN
          FAILED ("INCORRECT ACCESS TO ARRAY SLICES - 3");
     END IF;

     IF NOT (ACC_REC.COMP1'FIRST = 1 AND ACC_REC.COMP2'FIRST = 1) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE FIRST - 3");
     END IF;

     IF NOT (ACC_REC.COMP1'LAST = 3 AND ACC_REC.COMP2'LAST = 4) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE LAST - 3");
     END IF;

     IF NOT (ACC_REC.COMP1 (ACC_REC.COMP1'RANGE) = IDENT_STR ("RED") AND
             ACC_REC.COMP2 (ACC_REC.COMP2'RANGE) = IDENT_STR ("BLUE"))
     THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE RANGE - 3");
     END IF;

     IF NOT (ACC_REC.COMP1'LENGTH = 3 AND ACC_REC.COMP2'LENGTH = 4) THEN
          FAILED ("INCORRECT VALUE OF ATTRIBUTE LENGTH - 3");
     END IF;

     PROC (A1, NEW STRING'("BLUE"), A1, A2, A0);

     IF (A1.ALL /= IDENT_STR ("RED"))   OR
        (A2.ALL /= IDENT_STR ("BLUE"))  OR
        (A0.ALL /= IDENT_STR ("GREEN")) THEN
          FAILED ("INCORRECT RETURN VALUES FROM PROCEDURE");
     END IF;

     RESULT;

END CD2A83A;
