-- C35A03D.ADA

-- CHECK THAT FOR FIXED POINT TYPES THE MANTISSA ATTRIBUTE YIELDS THE
-- CORRECT VALUES.

-- CASE D: TYPES TYPICAL OF APPLICATIONS USING FIXED POINT ARITHMETIC.

-- WRG 7/28/86

WITH REPORT; USE REPORT;
WITH SYSTEM; USE SYSTEM;
PROCEDURE C35A03D IS

     PI      : CONSTANT := 3.14159_26535_89793_23846;
     TWO_PI  : CONSTANT := 2 * PI;
     HALF_PI : CONSTANT := PI / 2;

     MM : CONSTANT := MAX_MANTISSA;

     -- THE NAME OF EACH TYPE OR SUBTYPE ENDS WITH THAT TYPE'S
     -- 'MANTISSA VALUE.

     TYPE MICRO_ANGLE_ERROR_M15  IS
          DELTA 16.0  RANGE -(2.0 ** 19) .. 2.0 ** 19;
     TYPE TRACK_RANGE_M15        IS
          DELTA 0.125 RANGE -(2.0 ** 12) .. 2.0 ** 12;
     TYPE SECONDS_MM             IS
          DELTA 2.0 ** (8 - MM) RANGE -(2.0 ** 8) .. 2.0 ** 8;
     TYPE RANGE_CELL_MM          IS
          DELTA 2.0 ** (-5)
          RANGE -(2.0 ** (MM - 5) ) .. 2.0 ** (MM - 5);

     TYPE PIXEL_M10 IS DELTA 1.0 / 1024.0 RANGE 0.0 ..  1.0;
     TYPE RULER_M8  IS DELTA 1.0 / 16.0   RANGE 0.0 .. 12.0;

     TYPE HOURS_M16 IS DELTA   24.0 * 2.0 ** (-15) RANGE 0.0 ..   24.0;
     TYPE MILES_M16 IS DELTA 3000.0 * 2.0 ** (-15) RANGE 0.0 .. 3000.0;

     TYPE SYMMETRIC_DEGREES_M7  IS
          DELTA 2.0         RANGE -180.0 .. 180.0;
     TYPE NATURAL_DEGREES_M15   IS
          DELTA 2.0 ** (-6) RANGE    0.0 .. 360.0;
     TYPE SYMMETRIC_RADIANS_M16 IS
          DELTA     PI * 2.0 ** (-15) RANGE -PI .. PI;
     TYPE NATURAL_RADIANS_M8    IS
          DELTA TWO_PI * 2.0 ** ( -7) RANGE 0.0 .. TWO_PI;

     -------------------------------------------------------------------

     SUBTYPE ST_MILES_M8             IS MILES_M16
          DELTA 3000.0 * 2.0 ** (-15) RANGE 0.0 .. 10.0;
     SUBTYPE ST_NATURAL_DEGREES_M11  IS NATURAL_DEGREES_M15
          DELTA 0.25 RANGE 0.0 .. 360.0;
     SUBTYPE ST_SYMMETRIC_RADIANS_M8 IS SYMMETRIC_RADIANS_M16
          DELTA HALF_PI * 2.0 ** (-7) RANGE -HALF_PI .. HALF_PI;

BEGIN

     TEST ("C35A03D", "CHECK THAT FOR FIXED POINT TYPES THE MANTISSA " &
                      "ATTRIBUTE YIELDS THE CORRECT VALUES - TYPICAL " &
                      "TYPES");

     IF IDENT_INT (MICRO_ANGLE_ERROR_M15'MANTISSA) /= 15 THEN
          FAILED ("MICRO_ANGLE_ERROR_M15'MANTISSA =" &
                  INTEGER'IMAGE(MICRO_ANGLE_ERROR_M15'MANTISSA) );
     END IF;

     IF IDENT_INT (TRACK_RANGE_M15'MANTISSA) /= 15 THEN
          FAILED ("TRACK_RANGE_M15'MANTISSA =" &
                  INTEGER'IMAGE(TRACK_RANGE_M15'MANTISSA) );
     END IF;

     IF IDENT_INT (SECONDS_MM'MANTISSA) /= MM THEN
          FAILED ("SECONDS_MM'MANTISSA =" &
                  INTEGER'IMAGE(SECONDS_MM'MANTISSA) );
     END IF;

     IF IDENT_INT (RANGE_CELL_MM'MANTISSA) /= MM THEN
          FAILED ("RANGE_CELL_MM'MANTISSA =" &
                  INTEGER'IMAGE(RANGE_CELL_MM'MANTISSA) );
     END IF;

     IF IDENT_INT (PIXEL_M10'MANTISSA) /= 10 THEN
          FAILED ("PIXEL_M10'MANTISSA =" &
                  INTEGER'IMAGE(PIXEL_M10'MANTISSA) );
     END IF;

     IF IDENT_INT (RULER_M8'MANTISSA) /= 8 THEN
          FAILED ("RULER_M8'MANTISSA =" &
                  INTEGER'IMAGE(RULER_M8'MANTISSA) );
     END IF;

     IF IDENT_INT (HOURS_M16'MANTISSA) /= 16 THEN
          FAILED ("HOURS_M16'MANTISSA =" &
                  INTEGER'IMAGE(HOURS_M16'MANTISSA) );
     END IF;

     IF IDENT_INT (MILES_M16'MANTISSA) /= 16 THEN
          FAILED ("MILES_M16'MANTISSA =" &
                  INTEGER'IMAGE(MILES_M16'MANTISSA) );
     END IF;

     IF IDENT_INT (SYMMETRIC_DEGREES_M7'MANTISSA) /= 7 THEN
          FAILED ("SYMMETRIC_DEGREES_M7'MANTISSA =" &
                  INTEGER'IMAGE(SYMMETRIC_DEGREES_M7'MANTISSA) );
     END IF;

     IF IDENT_INT (NATURAL_DEGREES_M15'MANTISSA) /= 15 THEN
          FAILED ("NATURAL_DEGREES_M15'MANTISSA =" &
                  INTEGER'IMAGE(NATURAL_DEGREES_M15'MANTISSA) );
     END IF;

     IF IDENT_INT (SYMMETRIC_RADIANS_M16'MANTISSA) /= 16 THEN
          FAILED ("SYMMETRIC_RADIANS_M16'MANTISSA =" &
                  INTEGER'IMAGE(SYMMETRIC_RADIANS_M16'MANTISSA) );
     END IF;

     IF IDENT_INT (NATURAL_RADIANS_M8'MANTISSA) /= 8 THEN
          FAILED ("NATURAL_RADIANS_M8'MANTISSA =" &
                  INTEGER'IMAGE(NATURAL_RADIANS_M8'MANTISSA) );
     END IF;

     -------------------------------------------------------------------

     IF IDENT_INT (ST_MILES_M8'MANTISSA) /= 8 THEN
          IF ST_MILES_M8'MANTISSA = IDENT_INT (MILES_M16'MANTISSA) THEN
               FAILED ("ST_MILES_M8'MANTISSA = " &
                       "MILES_M16'MANTISSA =" &
                       INTEGER'IMAGE(ST_MILES_M8'MANTISSA) );
          ELSE
               FAILED ("ST_MILES_M8'MANTISSA =" &
                       INTEGER'IMAGE(ST_MILES_M8'MANTISSA) );
          END IF;
     END IF;

     IF IDENT_INT (ST_NATURAL_DEGREES_M11'MANTISSA) /= 11 THEN
          IF ST_NATURAL_DEGREES_M11'MANTISSA =
             IDENT_INT (NATURAL_DEGREES_M15'MANTISSA) THEN
               FAILED ("ST_NATURAL_DEGREES_M11'MANTISSA = " &
                       "NATURAL_DEGREES_M15'MANTISSA =" &
                       INTEGER'IMAGE(ST_NATURAL_DEGREES_M11'MANTISSA) );
          ELSE
               FAILED ("ST_NATURAL_DEGREES_M11'MANTISSA =" &
                       INTEGER'IMAGE(ST_NATURAL_DEGREES_M11'MANTISSA) );
          END IF;
     END IF;

     IF IDENT_INT (ST_SYMMETRIC_RADIANS_M8'MANTISSA) /= 8 THEN
          IF ST_SYMMETRIC_RADIANS_M8'MANTISSA =
             IDENT_INT (SYMMETRIC_RADIANS_M16'MANTISSA) THEN
               FAILED ("ST_SYMMETRIC_RADIANS_M8'MANTISSA = " &
                       "SYMMETRIC_RADIANS_M16'MANTISSA =" &
                       INTEGER'IMAGE(ST_SYMMETRIC_RADIANS_M8'MANTISSA));
          ELSE
               FAILED ("ST_SYMMETRIC_RADIANS_M8'MANTISSA =" &
                       INTEGER'IMAGE(ST_SYMMETRIC_RADIANS_M8'MANTISSA));
          END IF;
     END IF;

     RESULT;

END C35A03D;
