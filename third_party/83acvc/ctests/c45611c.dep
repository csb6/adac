--  C45611C.DEP

-- OBJECTIVE:
--     CHECK THAT EXPONENTIATION OF A LONG_INTEGER TO AN INTEGER VALUE
--     IS CORRECTLY EVALUATED.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE TO THOSE IMPLEMENTATIONS WHICH SUPPORT
--     LONG_INTEGER.

--     IF "LONG_INTEGER" IS NOT SUPPORTED, THEN THE DECLARATION OF
--     "CHECK_LONG" MUST BE REJECTED.

-- HISTORY:
--     HTG 09/23/86 CREATED ORIGINAL TEST.
--     DHH 01/13/88 ADDED APPLICABILITY CRITERIA AND STANDARD HEADER.

WITH REPORT; USE REPORT;

PROCEDURE C45611C IS

    CHECK_LONG : LONG_INTEGER;                      -- N/A => ERROR.

    I1,INT : LONG_INTEGER;

    FUNCTION IDENT (X : LONG_INTEGER) RETURN LONG_INTEGER IS
    BEGIN
         RETURN LONG_INTEGER (IDENT_INT (INTEGER (X)));
    END IDENT;

    BEGIN


         TEST ("C45611C", "CHECK THAT EXPONENTIATION OF A " &
                          "LONG_INTEGER VALUE IS CORRECTLY " &
                          "EVALUATED");

         I1 := IDENT(0) ** IDENT_INT(0);

         IF IDENT(I1) /= IDENT(1) THEN
              FAILED( "INCORRECT RESULT FOR '0**0'" );
         END IF;

         INT := "**" (IDENT(0),IDENT_INT(1));

         IF IDENT(INT) /= IDENT(0) THEN
              FAILED( "INCORRECT RESULT FOR '0**1'" );
         END IF;

         I1 := IDENT(6) ** IDENT_INT(0);

         IF IDENT(I1) /= IDENT(1) THEN
              FAILED( "INCORRECT RESULT FOR '6**0'" );
         END IF;

         INT := IDENT(156) ** IDENT_INT(1);

         IF IDENT(INT) /= IDENT(156) THEN
              FAILED( "INCORRECT RESULT FOR '156**1'" );
         END IF;

         I1 := IDENT(-3) ** IDENT_INT(0);

         IF IDENT(I1) /= IDENT(1) THEN
              FAILED( "INCORRECT RESULT FOR '(-3)**0'" );
         END IF;

         INT := "**" (IDENT(-7),IDENT_INT(1));

         IF IDENT(INT) /= IDENT(-7) THEN
              FAILED( "INCORRECT RESULT FOR '(-7)**1'" );
         END IF;

         I1 := "**" (IDENT(-1),IDENT_INT(2));

         IF IDENT(I1) /= IDENT(1) THEN
              FAILED( "INCORRECT RESULT FOR '(-1)**2'" );
         END IF;


         INT := IDENT(-1) ** IDENT_INT(3);

         IF IDENT(INT) /= IDENT(-1) THEN
              FAILED( "INCORRECT RESULT FOR '(-1)**3'" );
         END IF;

         INT := "**" (IDENT(0),IDENT_INT(2));

         IF IDENT(INT) /= IDENT(0) THEN
              FAILED( "INCORRECT RESULT FOR '0**2'" );
         END IF;

         INT := IDENT(0) ** IDENT_INT(10);

         IF IDENT(INT) /= IDENT(0) THEN
              FAILED( "INCORRECT RESULT FOR '0**10'" );
         END IF;

         INT := "**" (IDENT(6),IDENT_INT(2));

         IF IDENT(INT) /= IDENT(36) THEN
              FAILED( "INCORRECT RESULT FOR '6**2'" );
         END IF;

         INT := "**" (IDENT(2),IDENT_INT(2));

         IF IDENT(INT) /= IDENT(4) THEN
              FAILED( "INCORRECT RESULT FOR '2**2'" );
         END IF;

         I1 := "**" (IDENT(1),IDENT_INT(10));

         IF IDENT(I1) /= IDENT(1) THEN
              FAILED( "INCORRECT RESULT FOR '1**10'" );
         END IF;

         RESULT;

    END C45611C;
