-- C48005B.ADA

-- CHECK THAT AN ALLOCATOR OF THE FORM "NEW T X" ALLOCATES A NEW OBJECT
-- EACH TIME IT IS EXECUTED AND THAT IF X IS AN INDEX CONSTRAINT AND T
-- AN UNCONSTRAINED ARRAY TYPE, THE ALLOCATED OBJECT HAS THE INDEX
-- BOUNDS SPECIFIED BY X.

-- EG  08/10/84

WITH REPORT;

PROCEDURE C48005B IS

     USE REPORT;

BEGIN

     TEST("C48005B","CHECK THAT THE FORM 'NEW T X' ALLOCATES A " &
                    "NEW OBJECT AND THAT IF X IS AN INDEX "      &
                    "CONSTRAINT AND T AN UNCONSTRAINED ARRAY "   &
                    "TYPE, THE ALLOCATED OBJECT HAS THE INDEX "  &
                    "BOUND SPECIFIED BY X");

     DECLARE

          TYPE UA1 IS ARRAY(INTEGER RANGE <>) OF INTEGER;
          TYPE UA2 IS ARRAY(INTEGER RANGE <>, INTEGER RANGE <>)
                              OF INTEGER;

          TYPE A_UA1 IS ACCESS UA1;
          TYPE A_UA2 IS ACCESS UA2;

          V_A_UA1 : A_UA1;
          V_A_UA2 : A_UA2;

     BEGIN

          V_A_UA1 := NEW UA1(4 .. 7);
          IF ( V_A_UA1'FIRST /= IDENT_INT(4) OR
               V_A_UA1'LAST  /= IDENT_INT(7) ) THEN
               FAILED("WRONG ARRAY BOUNDS - V_A_UA1");
          END IF;

          V_A_UA2 := NEW UA2(2 .. 3, 4 .. 6);
          IF ( V_A_UA2'FIRST(1) /= IDENT_INT(2) OR
               V_A_UA2'LAST(1)  /= IDENT_INT(3) OR
               V_A_UA2'FIRST(2) /= IDENT_INT(4) OR
               V_A_UA2'LAST(2)  /= IDENT_INT(6) ) THEN
               FAILED("WRONG ARRAY BOUNDS - V_A_UA2");
          END IF;

     END;

     RESULT;

END C48005B;
