-- CE3107A.TST

-- OBJECTIVE:
--     CHECK THAT IS_OPEN RETURNS THE PROPER VALUES FOR FILES OF
--     TYPE TEXT_IO.

-- HISTORY:
--     DLD 08/10/82
--     SPS 11/09/82
--     JBG 03/24/83
--     EG  05/29/85
--     DWC 08/17/87  SPLIT OUT CASES WHICH DEPEND ON A TEXT FILE
--                   BEING CREATED OR SUCCESSFULLY OPENED.  PLACED
--                   CASES INTO CE3107B.ADA.

WITH REPORT; USE REPORT;
WITH TEXT_IO; USE TEXT_IO;

PROCEDURE CE3107A IS

     TEST_FILE_ONE : FILE_TYPE;
     TEST_FILE_TWO : FILE_TYPE;
     TEST_FILE_THREE : FILE_TYPE;
     VAL : BOOLEAN;

BEGIN

     TEST("CE3107A", "CHECK THAT IS_OPEN RETURNS THE PROPER " &
                     "VALUES FOR UNOPENED FILES OF TYPE TEXT_IO");

-- WHEN FILE IS DECLARED BUT NOT OPEN

     VAL := TRUE;
     VAL := IS_OPEN(TEST_FILE_ONE);
     IF VAL = TRUE THEN
          FAILED("FILE NOT OPEN BUT IS_OPEN RETURNS TRUE");
     END IF;

-- FOLLOWING UNSUCCESSFUL CREATE

     BEGIN
          VAL := TRUE;
          CREATE(TEST_FILE_TWO, OUT_FILE,
                 "$ILLEGAL_EXTERNAL_FILE_NAME1");
          FAILED("NAME_ERROR NOT RAISED - UNSUCCESSFUL CREATE");
     EXCEPTION
          WHEN NAME_ERROR =>
               VAL := IS_OPEN(TEST_FILE_TWO);
               IF VAL = TRUE THEN
                    FAILED("IS_OPEN GIVES TRUE AFTER AN " &
                           "UNSUCCESSFUL CREATE");
               END IF;
     END;

-- FOLLOWING UNSUCCESSFUL OPEN

     BEGIN
          VAL := FALSE;
          OPEN(TEST_FILE_TWO, IN_FILE, LEGAL_FILE_NAME);
          FAILED("NAME_ERROR NOT RAISED - " &
                 "UNSUCCESSFUL OPEN");
     EXCEPTION
          WHEN NAME_ERROR =>
               VAL := IS_OPEN(TEST_FILE_TWO);
               IF VAL = TRUE THEN
                    FAILED("IS_OPEN GIVES TRUE - " &
                           "UNSUCCESSFUL OPEN");
               END IF;
     END;

-- CLOSE FILE WHILE NOT OPEN

     BEGIN
          VAL := TRUE;
          CLOSE(TEST_FILE_THREE);  -- STATUS ERROR
          FAILED("STATUS_ERROR NOT RAISED - UNSUCCESSFUL CLOSE");
     EXCEPTION
          WHEN OTHERS =>
               VAL := IS_OPEN(TEST_FILE_THREE);
               IF VAL = TRUE THEN
                    FAILED("IS_OPEN GIVES TRUE - UNSUCCESSFUL  " &
                           "CLOSE");
               END IF;
     END;

     RESULT;

END CE3107A;
