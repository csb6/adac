-- C35802D.DEP

-- OBJECTIVE:
--     TESTS ON VALUES OF ATTRIBUTES.
--       (A) VALUE OF 'DIGITS.
--       (B) VALUE OF 'MANTISSA.
--       (C) VALUES OF 'SMALL, 'LARGE, AND 'EPSILON.
--       (D) VALUES OF 'EMAX, 'SAFE_EMAX.
--       (E) VALUES OF 'SAFE_SMALL AND 'SAFE_LARGE.
--     INCLUDES CHECK FOR GENERIC FORMAL TYPES.
--     FOR DIGITS = 8.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE TO IMPLEMENTATIONS WHICH
--     SUPPORT DIGITS = 8.
--
--     IF DIGITS = 8 IS NOT SUPPORTED, THEN THE DECLARATION OF
--     DN MUST BE REJECTED.

-- HISTORY:
--     BAW 09/05/80  CREATED ORIGINAL TEST.
--     JBG 10/29/82
--     RJW 08/22/86  ADDED CASES (D1) AND (E1).  ADDED CHECK FOR
--                   GENERIC FORMAL TYPES.
--     BCB 01/14/88  MODIFIED HEADER.

WITH REPORT; USE REPORT;
PROCEDURE C35802D IS

     TYPE DN IS DIGITS 8;                              -- N/A => ERROR.

BEGIN
     TEST( "C35802D", "CHECK VALUES OF FLOATING POINT ATTRIBUTES" );

     BEGIN -- (A1).

          COMMENT( "CHECK VALUE OF 'DIGITS AND " &
                   "'VALUE <= 'BASE'DIGITS" );

          IF DN'DIGITS /= 8 OR DN'DIGITS > DN'BASE'DIGITS THEN
               FAILED ( "VALUE OF 'DIGITS IS INCORRECT" );
          END IF;

     END;  -- (A1).

     BEGIN -- (B1).

          COMMENT( "CHECK VALUES OF 'MANTISSA AND " &
                   "VALUE <= 'BASE'MANTISSA" );

          IF DN'MANTISSA /= 28 OR DN'MANTISSA > DN'BASE'MANTISSA THEN
               FAILED ( "VALUE OF 'MANTISSA IS INCORRECT" );
          END IF;

     END;  -- (B1).

     BEGIN -- (C1).

          COMMENT( "CHECK VALUES OF 'SMALL, 'LARGE AND 'EPSILON" );

          IF DN'SMALL /= 16#0.8#E-28 THEN
               FAILED ( "THE VALUE OF 'SMALL IS INCORRECT" );
          END IF;

          IF DN'LARGE /= 16#0.FFFFFFF#E28 THEN
               FAILED ( "THE VALUE OF 'LARGE IS INCORRECT" );
          END IF;

          IF DN'EPSILON /= 16#0.2#E-6 THEN
               FAILED ( "THE VALUE OF 'EPSILON IS INCORRECT" );
          END IF;

          IF DN'EPSILON < DN'BASE'EPSILON THEN
               FAILED ( "'EPSILON IS LESS THAN 'BASE'EPSILON" );
          END IF;

     END;  -- (C1).

     BEGIN -- (D1).

          COMMENT ( "CHECK VALUES OF 'EMAX AND 'SAFE_EMAX" );

          IF DN'EMAX /= 4 * 28 THEN
               FAILED ( "THE VALUE OF 'EMAX IS INCORRECT" );
          END IF;

          IF DN'SAFE_EMAX /= DN'BASE'SAFE_EMAX THEN
               FAILED ( "THE VALUE OF 'SAFE_EMAX IS INCORRECT" );
          END IF;

          IF DN'BASE'EMAX > DN'SAFE_EMAX THEN
               FAILED ( "'BASE'EMAX IS GREATER THAN 'SAFE_EMAX" );
          END IF;

     END; -- (D1).

     BEGIN -- (E1).

          COMMENT ( "CHECK VALUES OF 'SAFE_SMALL AND 'SAFE_LARGE" );

          IF DN'SAFE_SMALL /= 2.0 ** (-DN'SAFE_EMAX - 1) THEN
               FAILED ( "INCORRECT VALUE FOR 'SAFE_SMALL" );
          END IF;

          IF DN'SAFE_LARGE /=
             (2.0 ** (DN'SAFE_EMAX - 1) -
              2.0 ** (DN'SAFE_EMAX - DN'BASE'MANTISSA)) +
             2.0 ** (DN'SAFE_EMAX - 1) THEN
               FAILED ( "INCORRECT VALUE FOR 'SAFE_LARGE" );
          END IF;

          IF DN'BASE'SMALL < DN'SAFE_SMALL THEN
               FAILED ( "'BASE'SMALL IS LESS THAN 'SAFE_SMALL" );
          END IF;

          IF DN'BASE'LARGE > DN'SAFE_LARGE THEN
               FAILED ( "'BASE'LARGE IS GREATER THAN 'SAFE_LARGE" );
          END IF;

     END; -- (E1).

-- TESTS FOR GENERIC FORMAL TYPES.

     DECLARE

          GENERIC
               TYPE T IS DIGITS <>;
          PROCEDURE P;

          PROCEDURE P IS
          BEGIN
               BEGIN -- (A2).

                    COMMENT( "CHECK VALUE OF 'DIGITS AND " &
                             "'VALUE <= 'BASE'DIGITS " &
                             "FOR A GENERIC FORMAL TYPE" );

                    IF T'DIGITS /= 8 OR T'DIGITS > T'BASE'DIGITS THEN
                         FAILED ( "VALUE OF 'DIGITS IS INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

               END;  -- (A2).

               BEGIN -- (B2).

                    COMMENT( "CHECK VALUES OF 'MANTISSA AND " &
                             "VALUE <= 'BASE'MANTISSA " &
                             "FOR A GENERIC FORMAL TYPE" );

                    IF T'MANTISSA /= 28 OR
                       T'MANTISSA > T'BASE'MANTISSA THEN
                         FAILED ( "VALUE OF 'MANTISSA IS INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

               END;  -- (B2).

               BEGIN -- (C2).

                    COMMENT( "CHECK VALUES OF 'SMALL, 'LARGE " &
                             "AND 'EPSILON FOR A GENERIC FORMAL TYPE" );

                    IF T'SMALL /= 16#0.8#E-28 THEN
                         FAILED ( "THE VALUE OF 'SMALL IS INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'LARGE /= 16#0.FFFFFFF#E28 THEN
                         FAILED ( "THE VALUE OF 'LARGE IS INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'EPSILON /= 16#0.2#E-6 THEN
                         FAILED ( "THE VALUE OF 'EPSILON IS " &
                                  "INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'EPSILON < T'BASE'EPSILON THEN
                         FAILED ( "'EPSILON IS LESS THAN " &
                                  "'BASE'EPSILON " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;


               END;  -- (C2).

               BEGIN -- (D2).

                    COMMENT ( "CHECK VALUES OF 'EMAX AND 'SAFE_EMAX " &
                              "FOR A GENERIC FORMAL TYPE" );

                    IF T'EMAX /= 4 * 28 THEN
                         FAILED ( "THE VALUE OF 'EMAX IS INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'SAFE_EMAX /= T'BASE'SAFE_EMAX THEN
                         FAILED ( "THE VALUE OF 'SAFE_EMAX IS " &
                                  "INCORRECT " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'BASE'EMAX > T'SAFE_EMAX THEN
                         FAILED ( "'BASE'EMAX IS GREATER THAN " &
                                  "'SAFE_EMAX " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

               END; -- (D2).

               BEGIN -- (E2).

                    COMMENT ( "CHECK VALUES OF 'SAFE_SMALL " &
                              "AND 'SAFE_LARGE " &
                              "FOR A GENERIC FORMAL TYPE" );

                    IF T'SAFE_SMALL /= 2.0 ** (-T'SAFE_EMAX - 1) THEN
                         FAILED ( "INCORRECT VALUE FOR 'SAFE_SMALL " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'SAFE_LARGE /=
                       (2.0 ** (T'SAFE_EMAX - 1) -
                        2.0 ** (T'SAFE_EMAX - T'BASE'MANTISSA)) +
                       2.0 ** (T'SAFE_EMAX - 1) THEN
                         FAILED ( "INCORRECT VALUE FOR 'SAFE_LARGE " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'BASE'SMALL < T'SAFE_SMALL THEN
                         FAILED ( "'BASE'SMALL IS LESS THAN " &
                                  "'SAFE_SMALL " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

                    IF T'BASE'LARGE > T'SAFE_LARGE THEN
                         FAILED ( "'BASE'LARGE IS GREATER THAN " &
                                  "'SAFE_LARGE " &
                                  "FOR A GENERIC FORMAL TYPE" );
                    END IF;

               END; -- (E2).

          END P;

          PROCEDURE NP IS NEW P (DN);
     BEGIN
          NP;
     END;

     RESULT;
END C35802D;
