-- C35A07N.ADA

-- CHECK THAT FOR FIXED POINT TYPES THE FIRST AND LAST ATTRIBUTES YIELD
-- CORRECT VALUES.

-- CASE N: BASIC TYPES THAT FIT THE CHARACTERISTICS OF DURATION'BASE,
--         FOR GENERICS.

-- WRG 8/26/86

WITH REPORT; USE REPORT;
PROCEDURE C35A07N IS

     -- THE NAME OF EACH TYPE OR SUBTYPE ENDS WITH THAT TYPE'S
     -- 'MANTISSA VALUE.

     TYPE LEFT_OUT_M1       IS DELTA 0.25  RANGE -0.5 .. 0.5;
     TYPE LEFT_EDGE_M1      IS DELTA 0.5   RANGE -1.0 .. 1.0;
     TYPE RIGHT_EDGE_M1     IS DELTA 1.0   RANGE -2.0 .. 2.0;
     TYPE RIGHT_OUT_M1      IS DELTA 2.0   RANGE -4.0 .. 4.0;
     TYPE MIDDLE_M2         IS DELTA 0.5   RANGE -2.0 .. 2.0;
     TYPE MIDDLE_M3         IS DELTA 0.5   RANGE  0.0 .. 2.5;
     TYPE MIDDLE_M15        IS DELTA 2.0 **(-6) RANGE  -512.0 ..  512.0;
     TYPE MIDDLE_M16        IS DELTA 2.0 **(-6) RANGE -1024.0 .. 1024.0;
     TYPE LIKE_DURATION_M23 IS DELTA 0.020 RANGE -86_400.0 .. 86_400.0;
     TYPE DECIMAL_M18       IS DELTA 0.1   RANGE -10_000.0 .. 10_000.0;
     TYPE DECIMAL_M4        IS DELTA 100.0 RANGE   -1000.0 ..   1000.0;
          -- LARGEST MODEL NUMBER IS 960.0.

     -------------------------------------------------------------------

     SUBTYPE ST_LEFT_EDGE_M6 IS MIDDLE_M15
          DELTA 2.0 ** (-6) RANGE IDENT_INT (1) * (-1.0) .. 1.0;
     SUBTYPE ST_MIDDLE_M14   IS MIDDLE_M16
          DELTA 2.0 ** (-5) RANGE -512.0 .. IDENT_INT (1) * 512.0;
     SUBTYPE ST_MIDDLE_M2    IS LIKE_DURATION_M23
          DELTA 0.5 RANGE -2.0 .. 2.0;
     SUBTYPE ST_MIDDLE_M3    IS LIKE_DURATION_M23
          DELTA 0.5 RANGE  0.0 .. 2.5;
     SUBTYPE ST_DECIMAL_M7   IS DECIMAL_M18
          DELTA  10.0 RANGE -1000.0 .. 1000.0;
          -- LARGEST MODEL NUMBER IS 1016.0.
     SUBTYPE ST_DECIMAL_M3   IS DECIMAL_M4
          DELTA 100.0 RANGE  -500.0 ..  500.0;
          -- LARGEST MODEL NUMBER IS 448.0.
     SUBTYPE ST_MIDDLE_M15   IS MIDDLE_M15
          RANGE 6.0 .. 3.0;

     -------------------------------------------------------------------

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE INEXACT_CHECK (NAME : STRING);

     PROCEDURE INEXACT_CHECK (NAME : STRING) IS
     BEGIN
          IF T'FIRST > -T'LARGE THEN
               FAILED (NAME & "'FIRST > -" & NAME & "'LARGE");
          END IF;

          IF T'LAST  <  T'LARGE THEN
               FAILED (NAME & "'LAST  <  " & NAME & "'LARGE");
          END IF;
     END INEXACT_CHECK;

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE EXACT_CHECK (NAME : STRING; FIRST, LAST : T );

     PROCEDURE EXACT_CHECK (NAME : STRING; FIRST, LAST : T ) IS
     BEGIN
          IF T'FIRST /= IDENT_INT (1) * FIRST THEN
               FAILED ("WRONG GENERIC 'FIRST FOR " & NAME);
          END IF;
          IF T'LAST  /= IDENT_INT (1) * LAST  THEN
               FAILED ("WRONG GENERIC 'LAST  FOR " & NAME);
          END IF;
     END EXACT_CHECK;

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE NULL_CHECK (NAME : STRING);

     PROCEDURE NULL_CHECK (NAME : STRING) IS
     BEGIN
          IF T'FIRST /= IDENT_INT (1) * 6.0 THEN
               FAILED ("WRONG GENERIC 'FIRST FOR " & NAME);
          END IF;
          IF T'LAST  /= IDENT_INT (1) * 3.0 THEN
               FAILED ("WRONG GENERIC 'LAST  FOR " & NAME);
          END IF;
     END NULL_CHECK;

     -------------------------------------------------------------------

     PROCEDURE CHECK_LEFT_OUT_M1   IS NEW INEXACT_CHECK (LEFT_OUT_M1  );
     PROCEDURE CHECK_LEFT_EDGE_M1  IS NEW INEXACT_CHECK (LEFT_EDGE_M1 );
     PROCEDURE CHECK_RIGHT_EDGE_M1 IS NEW INEXACT_CHECK (RIGHT_EDGE_M1);
     PROCEDURE CHECK_RIGHT_OUT_M1  IS NEW INEXACT_CHECK (RIGHT_OUT_M1 );
     PROCEDURE CHECK_MIDDLE_M2     IS NEW INEXACT_CHECK (MIDDLE_M2    );
     PROCEDURE CHECK_MIDDLE_M3     IS NEW   EXACT_CHECK (MIDDLE_M3    );
     PROCEDURE CHECK_MIDDLE_M15    IS NEW INEXACT_CHECK (MIDDLE_M15   );
     PROCEDURE CHECK_MIDDLE_M16    IS NEW INEXACT_CHECK (MIDDLE_M16   );
     PROCEDURE CHECK_LIKE_DURATION_M23
                                 IS NEW EXACT_CHECK (LIKE_DURATION_M23);
     PROCEDURE CHECK_DECIMAL_M18   IS NEW   EXACT_CHECK (DECIMAL_M18  );
     PROCEDURE CHECK_DECIMAL_M4    IS NEW INEXACT_CHECK (DECIMAL_M4   );
     PROCEDURE CHECK_ST_LEFT_EDGE_M6
                                 IS NEW INEXACT_CHECK (ST_LEFT_EDGE_M6);
     PROCEDURE CHECK_ST_MIDDLE_M14 IS NEW INEXACT_CHECK (ST_MIDDLE_M14);
     PROCEDURE CHECK_ST_MIDDLE_M2  IS NEW INEXACT_CHECK (ST_MIDDLE_M2 );
     PROCEDURE CHECK_ST_MIDDLE_M3  IS NEW   EXACT_CHECK (ST_MIDDLE_M3 );
     PROCEDURE CHECK_ST_DECIMAL_M7 IS NEW   EXACT_CHECK (ST_DECIMAL_M7);
     PROCEDURE CHECK_ST_DECIMAL_M3 IS NEW INEXACT_CHECK (ST_DECIMAL_M3);
     PROCEDURE CHECK_ST_MIDDLE_M15 IS NEW    NULL_CHECK (ST_MIDDLE_M15);

BEGIN

     TEST ("C35A07N", "CHECK THAT FOR FIXED POINT TYPES THE FIRST " &
                      "AND LAST ATTRIBUTES YIELD CORRECT VALUES - " &
                      "BASIC TYPES, GENERICS");

     -------------------------------------------------------------------

     CHECK_LEFT_OUT_M1       ("LEFT_OUT_M1");
     CHECK_LEFT_EDGE_M1      ("LEFT_EDGE_M1");
     CHECK_RIGHT_EDGE_M1     ("RIGHT_EDGE_M1");
     CHECK_RIGHT_OUT_M1      ("RIGHT_OUT_M1");
     CHECK_MIDDLE_M2         ("MIDDLE_M2");
     CHECK_MIDDLE_M3         ("MIDDLE_M3", 0.0, 2.5);
     CHECK_MIDDLE_M15        ("MIDDLE_M15");
     CHECK_MIDDLE_M16        ("MIDDLE_M16");
     CHECK_LIKE_DURATION_M23 ("LIKE_DURATION_M23", -86_400.0, 86_400.0);
     CHECK_DECIMAL_M18       ("DECIMAL_M18", -10_000.0, 10_000.0);
     CHECK_DECIMAL_M4        ("DECIMAL_M4");
     CHECK_ST_LEFT_EDGE_M6   ("ST_LEFT_EDGE_M6");
     CHECK_ST_MIDDLE_M14     ("ST_MIDDLE_M14");
     CHECK_ST_MIDDLE_M2      ("ST_MIDDLE_M2");
     CHECK_ST_MIDDLE_M3      ("ST_MIDDLE_M3", 0.0, 2.5);
     CHECK_ST_DECIMAL_M7     ("ST_DECIMAL_M7", -1000.0, 1000.0);
     CHECK_ST_DECIMAL_M3     ("ST_DECIMAL_M3");
     CHECK_ST_MIDDLE_M15     ("ST_MIDDLE_M15");

     RESULT;

END C35A07N;
