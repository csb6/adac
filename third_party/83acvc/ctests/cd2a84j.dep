-- CD2A84J.DEP

-- OBJECTIVE:
--     CHECK THAT IF SIZE AND COLLECTION SIZE SPECIFICATIONS ARE
--     GIVEN FOR ACCESS TYPES, THEN SUCH A TYPE WITH THE SMALLEST
--     APPROPRIATE SIZE FOR AN UNSIGNED REPRESENTATION CAN BE PASSED
--     AS AN ACTUAL PARAMETER TO A GENERIC PROCEDURE.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS THAT SUPPORT
--     8 BIT ACCESS VALUES WHEN A STORAGE_SIZE SPECIFICATION IS NO
--     GREATER THAN 256 STORAGE_UNITS.

--     IF SUCH SPECIFICATIONS FOR ACCESS TYPES ARE NOT SUPPORTED,
--     THEN THE SIZE CLAUSE FOR "BASIC_ACC" MUST BE REJECTED.

-- HISTORY:
--     JET 09/03/87  CREATED ORIGINAL TEST.
--     JET 01/20/88  FIXED COLLECTION_SIZE CONDITIONAL.
--     DHH 11/29/88  CORRECTED 'RANGE TEST AND ADDED PARAMETER PASSING
--                   TEST.
--     DHH 04/26/89  CHANGED OPERATORS ON 'SIZE TESTS.

WITH SYSTEM;
WITH REPORT;  USE REPORT;
PROCEDURE CD2A84J IS

     TYPE BASIC_ACC IS ACCESS STRING;
     BASIC_SIZE : CONSTANT := 8;
     COLL_SIZE : CONSTANT := 256;

     FOR BASIC_ACC'STORAGE_SIZE USE COLL_SIZE;

     FOR BASIC_ACC'SIZE USE BASIC_SIZE;            -- N/A => ERROR.

BEGIN

     TEST ("CD2A84J", "CHECK THAT IF SIZE AND COLLECTION SIZE " &
                      "SPECIFICATIONS ARE GIVEN FOR ACCESS " &
                      "TYPES, THEN SUCH A TYPE WITH THE SMALLEST " &
                      "APPROPRIATE SIZE FOR AN UNSIGNED " &
                      "REPRESENTATION CAN BE PASSED AS AN ACTUAL " &
                      "PARAMETER TO A GENERIC PROCEDURE");

     DECLARE -- TYPE DECLARATION WITHIN GENERIC PROCEDURE.

          STR : BASIC_ACC := NEW STRING(1 ..3);

          GENERIC
               TYPE GPARM IS ACCESS STRING;
          PROCEDURE GENPROC(A1 : IN OUT GPARM);

          PROCEDURE GENPROC(A1 : IN OUT GPARM) IS

               SUBTYPE SUB_CHECK IS
                    GPARM (IDENT_INT(1) .. IDENT_INT(3));

               A2 : GPARM := NULL;
               A3 : GPARM := NULL;

          BEGIN -- GENPROC.

               IF GPARM'SIZE /= IDENT_INT (BASIC_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR GPARM'SIZE");
               END IF;

               IF GPARM'STORAGE_SIZE < IDENT_INT (COLL_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR GPARM'STORAGE_SIZE");
               END IF;

               A2 := NEW STRING'("BLUE");
               A3 := A1;

               A1.ALL := IDENT_STR ("RED");

               IF NOT ((A1 = A3) AND (A1 /= A2)) THEN
                    FAILED ("INCORRECT RESULTS FOR RELATIONAL " &
                            "OPERATORS");
               END IF;

               IF (A1 NOT IN SUB_CHECK) OR (A2 IN SUB_CHECK) THEN
                    FAILED ("INCORRECT RESULTS FOR MEMBERSHIP " &
                            "OPERATORS");
               END IF;

               IF NOT ((A1.ALL = IDENT_STR ("RED"))  AND
                       (A2.ALL = IDENT_STR ("BLUE")) AND
                       (A3.ALL = IDENT_STR ("RED"))) THEN
                    FAILED ("INCORRECT ACCESS TO OBJECTS");
               END IF;

               IF A1 (3) /= IDENT_CHAR ('D') OR
                  A2 (2) /= IDENT_CHAR ('L') THEN
                    FAILED ("INCORRECT ACCESS TO ARRAY INDICES");
               END IF;

               IF A1 (1 .. 3) /= IDENT_STR ("RED") OR
                  A2 (2 .. 3) /= IDENT_STR ("LU")  THEN
                    FAILED ("INCORRECT ACCESS TO ARRAY SLICES");
               END IF;

               IF NOT (A1'FIRST = 1 AND A2'FIRST = 1) THEN
                    FAILED ("INCORRECT VALUE OF ATTRIBUTE FIRST");
               END IF;

               IF NOT (A1'LAST = 3 AND A2'LAST = 4) THEN
                    FAILED ("INCORRECT VALUE OF ATTRIBUTE LAST");
               END IF;

               IF 1 NOT IN A1'RANGE OR 0 IN A1'RANGE OR
                  3 NOT IN A1'RANGE OR 4 IN A1'RANGE OR
                  A2(A2'RANGE) /= IDENT_STR("BLUE") THEN
                    FAILED ("INCORRECT VALUE OF ATTRIBUTE RANGE");
               END IF;

               IF NOT (A1'LENGTH = 3 AND A2'LENGTH = 4) THEN
                    FAILED ("INCORRECT VALUE OF ATTRIBUTE LENGTH");
               END IF;

          END GENPROC;

          PROCEDURE NEWPROC IS NEW GENPROC (BASIC_ACC);

     BEGIN

          NEWPROC(STR);

     END;

     RESULT;

END CD2A84J;
