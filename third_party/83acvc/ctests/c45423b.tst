-- C45423B.TST

-- OBJECTIVE:
--     FOR PREDEFINED TYPE SHORT_FLOAT, CHECK WHETHER NUMERIC_ERROR OR
--     CONSTRAINT_ERROR IS RAISED FOR UNARY '+' OR '-' WHEN THE OPERAND
--     VALUE LIES OUTSIDE THE RANGE OF SAFE NUMBERS BUT WITHIN THE
--     RANGE OF THE BASE TYPE.

-- MACRO SUBSTITUTION:
--     $GREATER_THAN_SHORT_FLOAT_SAFE_LARGE IS A REAL LITERAL WHOSE
--     VALUE IS GREATER THAN SHORT_FLOAT'SAFE_LARGE BUT IS WITHIN THE
--     RANGE OF THE BASE TYPE.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE TO IMPLEMENTATIONS THAT SUPPORT THE
--     PREDEFINED FLOATING POINT TYPE SHORT_FLOAT.  IF SHORT_FLOAT IS
--     NOT SUPPORTED, THEN THE DECLARATION OF VARIABLE A MUST BE
--     REJECTED.

-- HISTORY:
--     JET 01/26/88  CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;

PROCEDURE C45423B IS

     A : SHORT_FLOAT;                         -- N/A => ERROR.

     FUNCTION IDENT (X : SHORT_FLOAT) RETURN SHORT_FLOAT IS
     BEGIN
          RETURN X * SHORT_FLOAT(IDENT_INT(1));
     END IDENT;

BEGIN
     TEST ("C45423B", "FOR PREDEFINED TYPE SHORT_FLOAT, CHECK THAT " &
                      "NUMERIC_ERROR OR CONSTRAINT_ERROR IS RAISED " &
                      "FOR UNARY '+' OR '-' WHEN THE OPERAND " &
                      "VALUE LIES OUTSIDE THE RANGE OF SAFE NUMBERS " &
                      "BUT WITHIN THE RANGE OF THE BASE TYPE");

     IF NOT SHORT_FLOAT'MACHINE_OVERFLOWS THEN
          NOT_APPLICABLE ("MACHINE_OVERFLOWS IS FALSE");
     ELSE
          BEGIN
               IF -IDENT ($GREATER_THAN_SHORT_FLOAT_SAFE_LARGE)
               NOT IN SHORT_FLOAT THEN
                    COMMENT("NO EXCEPTION RAISED FOR " &
                            "-$GREATER_THAN_SHORT_FLOAT_SAFE_LARGE " &
                            "NOT IN SHORT_FLOAT");
               END IF;
          EXCEPTION
               WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
                    COMMENT ("EXCEPTION RAISED BY " &
                             "-$GREATER_THAN_SHORT_FLOAT_SAFE_LARGE");
               WHEN OTHERS =>
                    FAILED ("UNEXPECTED EXCEPTION RAISED BY " &
                            "-$GREATER_THAN_SHORT_FLOAT_SAFE_LARGE");
          END;

          BEGIN
               IF +IDENT ($GREATER_THAN_SHORT_FLOAT_SAFE_LARGE)
               NOT IN SHORT_FLOAT THEN
                    COMMENT("NO EXCEPTION RAISED FOR " &
                            "+$GREATER_THAN_SHORT_FLOAT_SAFE_LARGE " &
                            "NOT IN SHORT_FLOAT");
               END IF;
          EXCEPTION
               WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
                    COMMENT ("EXCEPTION RAISED BY " &
                             "+$GREATER_THAN_SHORT_FLOAT_SAFE_LARGE");
               WHEN OTHERS =>
                    FAILED ("UNEXPECTED EXCEPTION RAISED BY " &
                            "+$GREATER_THAN_SHORT_FLOAT_SAFE_LARGE");
          END;
     END IF;

     RESULT;

END C45423B;
