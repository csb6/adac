-- CE2111F.ADA

-- OBJECTIVE:
--     CHECK THAT A SUCCESSFUL RESET POSITIONS THE FILE CORRECTLY
--     TO THE START OF THE FILE FOR SEQUENTIAL IO.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS WHICH SUPPORT
--     RESET FOR SEQUENTIAL FILES.

-- HISTORY:
--     JLH 08/03/87 CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;
WITH SEQUENTIAL_IO;

PROCEDURE CE2111F IS

     PACKAGE SEQ_IO IS NEW SEQUENTIAL_IO (INTEGER);
          USE SEQ_IO;
     TEST_FILE_ONE : SEQ_IO.FILE_TYPE;
     DATUM : INTEGER;
     INCOMPLETE : EXCEPTION;

BEGIN
     TEST ("CE2111F", "CHECK THAT SUCCESSFUL RESET POSITIONS THE " &
                      "FILE CORRECTLY");

-- CREATE AND INITIALIZE TEST FILE

     BEGIN
          CREATE (TEST_FILE_ONE, OUT_FILE, LEGAL_FILE_NAME);
     EXCEPTION
          WHEN USE_ERROR =>
               NOT_APPLICABLE ("USE_ERROR RAISED ON CREATE");
               RAISE INCOMPLETE;
          WHEN NAME_ERROR =>
               NOT_APPLICABLE ("NAME_ERROR RAISED ON CREATE");
               RAISE INCOMPLETE;
     END;

     WRITE (TEST_FILE_ONE, 5);
     WRITE (TEST_FILE_ONE, 6);

-- CHECK THAT RESET POSITIONS INDEX CORRECTLY FOR OUT_FILE

     BEGIN
          RESET (TEST_FILE_ONE);
     EXCEPTION
          WHEN USE_ERROR =>
               NOT_APPLICABLE ("RESET NOT SUPPORTED FOR OUT_FILE");
               RAISE INCOMPLETE;
     END;

-- WRITE MORE DATA

     WRITE (TEST_FILE_ONE, 2);
     CLOSE (TEST_FILE_ONE);

-- NOW CHECK TO SEE THAT RESET WORKED FOR OUT_FILE

     BEGIN
          OPEN (TEST_FILE_ONE, IN_FILE, LEGAL_FILE_NAME);
     EXCEPTION
          WHEN USE_ERROR =>
               NOT_APPLICABLE ("SEQ_IO NOT SUPPORTED FOR IN_FILE OPEN");
               RAISE INCOMPLETE;
     END;

     READ (TEST_FILE_ONE, DATUM);

     IF DATUM /= 2 THEN
          FAILED ("RESET INCORRECTLY POSITIONED FILE FOR OUT_FILE");
     END IF;


-- RESET IN_FILE

     BEGIN
          RESET (TEST_FILE_ONE);
     EXCEPTION
          WHEN USE_ERROR =>
               NOT_APPLICABLE ("RESET NOT SUPPORTED FOR IN_FILE");
               RAISE INCOMPLETE;
     END;

-- VALIDATE IN_FILE RESET

     READ (TEST_FILE_ONE, DATUM);

     IF DATUM /= 2 THEN
          FAILED ("RESET INCORRECTLY POSITIONED FILE FOR IN_FILE");
     END IF;

-- DELETE TEST FILE

     BEGIN
          DELETE (TEST_FILE_ONE);
     EXCEPTION
          WHEN USE_ERROR =>
               NULL;
     END;

     RESULT;

EXCEPTION
     WHEN INCOMPLETE =>
          RESULT;

END CE2111F;
