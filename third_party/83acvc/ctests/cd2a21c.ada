-- CD2A21C.ADA

-- OBJECTIVE:
--     CHECK THAT A SIZE SPECIFICATION CAN BE GIVEN FOR AN ENUMERATION
--     TYPE:
--          IN THE VISIBLE OR PRIVATE PART OF A PACKAGE FOR A TYPE
--            DECLARED IN THE VISIBLE PART;
--          FOR A DERIVED ENUMERATION TYPE;
--          FOR A DERIVED PRIVATE TYPE WHOSE FULL DECLARATION IS AS
--            AN ENUMERATION TYPE.

-- HISTORY:
--     PWB 06/17/87  CREATED ORIGINAL TEST.
--     DHH 04/17/89  CHANGED EXTENSION FROM '.DEP' TO '.ADA', CHANGED
--                   OPERATORS ON 'SIZE TESTS, AND ADDED CHECK ON
--                   REPRESENTATION CLAUSE.

WITH REPORT; USE REPORT;
WITH LENGTH_CHECK;                      -- CONTAINS A CALL TO 'FAILED'.
PROCEDURE CD2A21C IS

     TYPE BASIC_ENUM IS (A, B, C, D, E);
     SPECIFIED_SIZE : CONSTANT := BASIC_ENUM'SIZE;

     MINIMUM_SIZE : INTEGER := IDENT_INT(SPECIFIED_SIZE);
     TYPE CHECK_ENUM IS (A0, B0, C0, D0, E0, F0, G0);

     FOR CHECK_ENUM'SIZE USE SPECIFIED_SIZE;

     TYPE DERIVED_ENUM IS NEW BASIC_ENUM;
     FOR DERIVED_ENUM'SIZE USE SPECIFIED_SIZE;

     PACKAGE P IS
          TYPE ENUM_IN_P IS (A1, B1, C1, D1, E1, F1, G1);
          FOR ENUM_IN_P'SIZE USE SPECIFIED_SIZE;
          TYPE PRIVATE_ENUM IS PRIVATE;
          TYPE ALT_ENUM_IN_P IS (A2, B2, C2, D2, E2, F2, G2);
     PRIVATE
          TYPE PRIVATE_ENUM IS (A3, B3, C3, D3, E3, F3, G3);
          FOR ALT_ENUM_IN_P'SIZE USE SPECIFIED_SIZE;
          PROCEDURE CHECK_3 IS NEW LENGTH_CHECK (PRIVATE_ENUM);
     END P;

     TYPE DERIVED_PRIVATE_ENUM IS NEW P.PRIVATE_ENUM;
     FOR DERIVED_PRIVATE_ENUM'SIZE USE SPECIFIED_SIZE;

     PACKAGE BODY P IS
     BEGIN
          CHECK_3 (C3, SPECIFIED_SIZE, "PRIVATE_ENUM");
     END P;
     USE P;

     PROCEDURE CHECK_1 IS NEW LENGTH_CHECK (CHECK_ENUM);
     PROCEDURE CHECK_2 IS NEW LENGTH_CHECK (DERIVED_ENUM);
     PROCEDURE CHECK_4 IS NEW LENGTH_CHECK (ENUM_IN_P);
     PROCEDURE CHECK_5 IS NEW LENGTH_CHECK (ALT_ENUM_IN_P);

BEGIN

     TEST("CD2A21C", "CHECK THAT 'SIZE SPECIFICATIONS CAN BE GIVEN " &
                     "IN THE VISIBLE OR PRIVATE PART OF A PACKAGE " &
                     "FOR ENUMERATION TYPES DECLARED IN VISIBLE THE " &
                     "PART, AND FOR DERIVED ENUMERATION " &
                     "TYPES AND PRIVATE TYPES WHOSE FULL DECLARATION " &
                     "IS AS AN ENUMERATION TYPE");

     CHECK_1 (C0, SPECIFIED_SIZE, "CHECK_ENUM");
     CHECK_2 (C,  SPECIFIED_SIZE, "DERIVED_ENUM");
     CHECK_4 (C1, SPECIFIED_SIZE, "ENUM_IN_P");
     CHECK_5 (C2, SPECIFIED_SIZE, "ALT_ENUM_IN_P");

     IF CHECK_ENUM'SIZE /= MINIMUM_SIZE THEN
          FAILED ("CHECK_ENUM'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(CHECK_ENUM'SIZE));
     END IF;

     IF DERIVED_ENUM'SIZE /= MINIMUM_SIZE THEN
          FAILED ("DERIVED_ENUM'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(DERIVED_ENUM'SIZE));
     END IF;

     IF ENUM_IN_P'SIZE /= MINIMUM_SIZE THEN
          FAILED ("ENUM_IN_P'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(ENUM_IN_P'SIZE));
     END IF;

     IF ALT_ENUM_IN_P'SIZE /= MINIMUM_SIZE THEN
          FAILED ("ALT_ENUM_IN_P'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(ALT_ENUM_IN_P'SIZE));
     END IF;

     IF DERIVED_PRIVATE_ENUM'SIZE /= MINIMUM_SIZE THEN

          FAILED ("DERIVED_PRIVATE_ENUM'SIZE SHOULD NOT BE GREATER " &
                  "THAN " & INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(DERIVED_PRIVATE_ENUM'SIZE));
     END IF;

     RESULT;

END CD2A21C;
