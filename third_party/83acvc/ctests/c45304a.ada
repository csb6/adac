-- C45304A.ADA

-- OBJECTIVE:
--     CHECK THAT NUMERIC_ERROR OR CONSTRAINT_ERROR IS RAISED BY
--     "+" AND "-" FOR PREDEFINED INTEGER WHEN THE RESULT IS OUTSIDE
--     THE RANGE OF THE BASE TYPE.

-- HISTORY:
--     TBN 10/06/86  CREATED ORIGINAL TEST.
--     JET 12/29/87  FURTHER DEFEATED OPTIMIZATION.

WITH REPORT; USE REPORT;
PROCEDURE C45304A IS

BEGIN
     TEST ("C45304A", "CHECK THAT NUMERIC_ERROR OR CONSTRAINT_ERROR " &
                      "IS RAISED BY ""+"" AND ""-"" FOR PREDEFINED " &
                      "INTEGER WHEN THE RESULT IS OUTSIDE THE RANGE " &
                      "OF THE BASE TYPE");

     DECLARE
          B : INTEGER := INTEGER'LAST;
     BEGIN
          IF EQUAL (IDENT_INT(B)+1, 0) THEN
               FAILED ("NO EXCEPTION FOR ADDITION -- ZERO RESULT");
          ELSE
               FAILED ("NO EXCEPTION FOR ADDITION -- NONZERO RESULT");
          END IF;

     EXCEPTION
          WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("UNEXPECTED EXCEPTION RAISED FOR ADDITION");
     END;

     DECLARE
          B : INTEGER := INTEGER'FIRST;
     BEGIN
          IF EQUAL (IDENT_INT(B)-1, 0) THEN
               FAILED ("NO EXCEPTION FOR SUBTRACTION -- ZERO RESULT");
          ELSE
               FAILED ("NO EXCEPTION FOR SUBTRACTION -- " &
                       "NONZERO RESULT");
          END IF;

     EXCEPTION
          WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("UNEXPECTED EXCEPTION RAISED FOR SUBTRACTION");
     END;

     RESULT;
END C45304A;
