-- C35A03Q.ADA

-- CHECK THAT FOR FIXED POINT TYPES THE MANTISSA ATTRIBUTE YIELDS THE
-- CORRECT VALUES.

-- CASE Q: TYPES TYPICAL OF APPLICATIONS USING FIXED POINT ARITHMETIC,
--         FOR GENERICS.

-- WRG 7/31/86

WITH REPORT; USE REPORT;
WITH SYSTEM; USE SYSTEM;
PROCEDURE C35A03Q IS

     PI      : CONSTANT := 3.14159_26535_89793_23846;
     TWO_PI  : CONSTANT := 2 * PI;
     HALF_PI : CONSTANT := PI / 2;

     MM : CONSTANT := MAX_MANTISSA;

     -- THE NAME OF EACH TYPE OR SUBTYPE ENDS WITH THAT TYPE'S
     -- 'MANTISSA VALUE.

     TYPE MICRO_ANGLE_ERROR_M15  IS
          DELTA 16.0  RANGE -(2.0 ** 19) .. 2.0 ** 19;
     TYPE TRACK_RANGE_M15        IS
          DELTA 0.125 RANGE -(2.0 ** 12) .. 2.0 ** 12;
     TYPE SECONDS_MM             IS
          DELTA 2.0 ** (8 - MM) RANGE -(2.0 ** 8) .. 2.0 ** 8;
     TYPE RANGE_CELL_MM          IS
          DELTA 2.0 ** (-5)
          RANGE -(2.0 ** (MM - 5) ) .. 2.0 ** (MM - 5);

     TYPE PIXEL_M10 IS DELTA 1.0 / 1024.0 RANGE 0.0 ..  1.0;
     TYPE RULER_M8  IS DELTA 1.0 / 16.0   RANGE 0.0 .. 12.0;

     TYPE HOURS_M16 IS DELTA   24.0 * 2.0 ** (-15) RANGE 0.0 ..   24.0;
     TYPE MILES_M16 IS DELTA 3000.0 * 2.0 ** (-15) RANGE 0.0 .. 3000.0;

     TYPE SYMMETRIC_DEGREES_M7  IS
          DELTA 2.0         RANGE -180.0 .. 180.0;
     TYPE NATURAL_DEGREES_M15   IS
          DELTA 2.0 ** (-6) RANGE    0.0 .. 360.0;
     TYPE SYMMETRIC_RADIANS_M16 IS
          DELTA     PI * 2.0 ** (-15) RANGE -PI .. PI;
     TYPE NATURAL_RADIANS_M8    IS
          DELTA TWO_PI * 2.0 ** ( -7) RANGE 0.0 .. TWO_PI;

     -------------------------------------------------------------------

     SUBTYPE ST_MILES_M8             IS MILES_M16
          DELTA 3000.0 * 2.0 ** (-15) RANGE 0.0 .. 10.0;
     SUBTYPE ST_NATURAL_DEGREES_M11  IS NATURAL_DEGREES_M15
          DELTA 0.25 RANGE 0.0 .. 360.0;
     SUBTYPE ST_SYMMETRIC_RADIANS_M8 IS SYMMETRIC_RADIANS_M16
          DELTA HALF_PI * 2.0 ** (-7) RANGE -HALF_PI .. HALF_PI;

     -------------------------------------------------------------------

     GENERIC
          TYPE T IS DELTA <>;
     FUNCTION F RETURN INTEGER;

     FUNCTION F RETURN INTEGER IS
     BEGIN
          RETURN IDENT_INT (T'MANTISSA);
     END F;

     -------------------------------------------------------------------

     FUNCTION F_MICRO_ANGLE_ERROR_M15  IS NEW F(MICRO_ANGLE_ERROR_M15 );
     FUNCTION F_TRACK_RANGE_M15        IS NEW F(TRACK_RANGE_M15       );
     FUNCTION F_SECONDS_MM             IS NEW F(SECONDS_MM            );
     FUNCTION F_RANGE_CELL_MM          IS NEW F(RANGE_CELL_MM         );
     FUNCTION F_PIXEL_M10              IS NEW F(PIXEL_M10             );
     FUNCTION F_RULER_M8               IS NEW F(RULER_M8              );
     FUNCTION F_HOURS_M16              IS NEW F(HOURS_M16             );
     FUNCTION F_MILES_M16              IS NEW F(MILES_M16             );
     FUNCTION F_SYMMETRIC_DEGREES_M7   IS NEW F(SYMMETRIC_DEGREES_M7  );
     FUNCTION F_NATURAL_DEGREES_M15    IS NEW F(NATURAL_DEGREES_M15   );
     FUNCTION F_SYMMETRIC_RADIANS_M16  IS NEW F(SYMMETRIC_RADIANS_M16 );
     FUNCTION F_NATURAL_RADIANS_M8     IS NEW F(NATURAL_RADIANS_M8    );
     FUNCTION F_ST_MILES_M8            IS NEW F(ST_MILES_M8           );
     FUNCTION F_ST_NATURAL_DEGREES_M11 IS NEW F(ST_NATURAL_DEGREES_M11);
     FUNCTION F_ST_SYMMETRIC_RADIANS_M8
                                      IS NEW F(ST_SYMMETRIC_RADIANS_M8);

BEGIN

     TEST ("C35A03Q", "CHECK THAT FOR FIXED POINT TYPES THE MANTISSA " &
                      "ATTRIBUTE YIELDS THE CORRECT VALUES - TYPICAL " &
                      "TYPES, GENERICS");

     IF F_MICRO_ANGLE_ERROR_M15 /= 15 THEN
          FAILED ("GENERIC 'MANTISSA FOR MICRO_ANGLE_ERROR_M15 =" &
                  INTEGER'IMAGE(F_MICRO_ANGLE_ERROR_M15) );
     END IF;

     IF F_TRACK_RANGE_M15 /= 15 THEN
          FAILED ("GENERIC 'MANTISSA FOR TRACK_RANGE_M15 =" &
                  INTEGER'IMAGE(F_TRACK_RANGE_M15) );
     END IF;

     IF F_SECONDS_MM /= MM THEN
          FAILED ("GENERIC 'MANTISSA FOR SECONDS_MM =" &
                  INTEGER'IMAGE(F_SECONDS_MM) );
     END IF;

     IF F_RANGE_CELL_MM /= MM THEN
          FAILED ("GENERIC 'MANTISSA FOR RANGE_CELL_MM =" &
                  INTEGER'IMAGE(F_RANGE_CELL_MM) );
     END IF;

     IF F_PIXEL_M10 /= 10 THEN
          FAILED ("GENERIC 'MANTISSA FOR PIXEL_M10 =" &
                  INTEGER'IMAGE(F_PIXEL_M10) );
     END IF;

     IF F_RULER_M8 /= 8 THEN
          FAILED ("GENERIC 'MANTISSA FOR RULER_M8 =" &
                  INTEGER'IMAGE(F_RULER_M8) );
     END IF;

     IF F_HOURS_M16 /= 16 THEN
          FAILED ("GENERIC 'MANTISSA FOR HOURS_M16 =" &
                  INTEGER'IMAGE(F_HOURS_M16) );
     END IF;

     IF F_MILES_M16 /= 16 THEN
          FAILED ("GENERIC 'MANTISSA FOR MILES_M16 =" &
                  INTEGER'IMAGE(F_MILES_M16) );
     END IF;

     IF F_SYMMETRIC_DEGREES_M7 /= 7 THEN
          FAILED ("GENERIC 'MANTISSA FOR SYMMETRIC_DEGREES_M7 =" &
                  INTEGER'IMAGE(F_SYMMETRIC_DEGREES_M7) );
     END IF;

     IF F_NATURAL_DEGREES_M15 /= 15 THEN
          FAILED ("GENERIC 'MANTISSA FOR NATURAL_DEGREES_M15 =" &
                  INTEGER'IMAGE(F_NATURAL_DEGREES_M15) );
     END IF;

     IF F_SYMMETRIC_RADIANS_M16 /= 16 THEN
          FAILED ("GENERIC 'MANTISSA FOR SYMMETRIC_RADIANS_M16 =" &
                  INTEGER'IMAGE(F_SYMMETRIC_RADIANS_M16) );
     END IF;

     IF F_NATURAL_RADIANS_M8 /= 8 THEN
          FAILED ("GENERIC 'MANTISSA FOR NATURAL_RADIANS_M8 =" &
                  INTEGER'IMAGE(F_NATURAL_RADIANS_M8) );
     END IF;

     -------------------------------------------------------------------

     IF F_ST_MILES_M8 /= 8 THEN
          FAILED ("GENERIC 'MANTISSA FOR ST_MILES_M8 =" &
                  INTEGER'IMAGE(F_ST_MILES_M8) );
     END IF;

     IF F_ST_NATURAL_DEGREES_M11 /= 11 THEN
          FAILED ("GENERIC 'MANTISSA FOR ST_NATURAL_DEGREES_M11 =" &
                  INTEGER'IMAGE(F_ST_NATURAL_DEGREES_M11) );
     END IF;

     IF F_ST_SYMMETRIC_RADIANS_M8 /= 8 THEN
          FAILED ("GENERIC 'MANTISSA FOR ST_SYMMETRIC_RADIANS_M8 =" &
                  INTEGER'IMAGE(F_ST_SYMMETRIC_RADIANS_M8) );
     END IF;

     RESULT;

END C35A03Q;
