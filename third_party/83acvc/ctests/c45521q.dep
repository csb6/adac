-- C45521Q.DEP

-- OBJECTIVE:
--     TESTS FOR MULTIPLYING OPERATORS.

--       (A) A*B, WITH A, B, A*B ALL MODEL NUMBERS.
--       (B) A*B, WITH A, B MODEL NUMBERS, A*B NOT.
--       (C) A*B, WITH A MODEL NUMBER, B AND A*B NOT.
--       (D) A*B, WITH A, B AND A*B ALL MODEL NUMBERS BUT IN
--           DIFFERENT SUBTYPES.
--       (E) A*B, WITH A, B MODEL NUMBERS, A*B NOT, BUT IN
--           DIFFERENT SUBTYPES.
--       (F) A*B, A MODEL NUMBER, B AND A*B NOT, BUT IN
--           DIFFERENT SUBTYPES.
--       (G) A/B, WITH A, B, A/B ALL MODEL NUMBERS.
--       (H) A/B, WITH A, B MODEL NUMBERS, A/B NOT.
--       (I) A/B, WITH A MODEL NUMBER, B AND A/B NOT.
--       (J) A/B, WITH A, B AND A/B ALL MODEL NUMBERS BUT IN
--           DIFFERENT SUBTYPES.
--       (K) A/B, WITH A, B MODEL NUMBERS, A/B NOT, BUT IN
--           DIFFERENT SUBTYPES.
--       (L) A/B, A MODEL NUMBER, B AND A/B NOT, BUT IN
--           DIFFERENT SUBTYPES.
--     THIS TEST IS TO BE REPEATED FOR 'DIGITS = 5 .. 30.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS WHICH SUPPORT A
--     VALUE OF DIGITS GREATER THAN OR EQUAL TO 21.

--     IF 'DIGITS 21' IS NOT SUPPORTED, THEN THE DECLARATION OF 'TYPE F'
--     MUST BE REJECTED.

-- HISTORY:
--     BAW 09/17/80 CREATED ORIGINAL TEST.
--     JBG 11/11/82
--     JBG 09/13/83
--     JBG 12/06/84
--     JBG 06/05/85
--     DHH 01/11/88 ADDED APPLICABILITY CRITERIA AND STANDARD HEADER.

WITH REPORT; USE REPORT;
PROCEDURE C45521Q IS

      N: CONSTANT INTEGER := 21;
      TYPE F IS DIGITS N;            -- MANTISSA BITS: 71  N/A => ERROR.
      SUBTYPE F1 IS F DIGITS N - 1;     -- MANTISSA BITS: 68
      SUBTYPE F2 IS F DIGITS  N - 2;    -- MANTISSA BITS: 65

BEGIN TEST ("C45521Q", "CHECK FLOATING MULTIPLY AND DIVIDE OPERATORS");

      DECLARE  -- (A)

            A : F := 1.0;
            B : F := 1.0;
            C : F := 1.0;
            X : F := 1.0;
            Y : F := 1.0;
            Z : F := 1.0;

      BEGIN COMMENT ("(A) CHECK *, A, B, A*B ALL MODEL NUMBERS");

            IF EQUAL (2,2) THEN
                A := 2#1.1#;
                B := 16#1.000000000000000008#;
                C := 0.0;
                X := 513.0 * 2.0 ** 54;
                Y := 511.0;
                Z := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A * B;
                 Z := X * Y;
            END IF;

            IF (C /= 16#1.80000000000000000C#)
            OR (Z /= 16#0.FFFFC#E18) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(A)

      DECLARE   -- (B)

            A : F := 1.0;
            B : F := 1.0;
            C : F := 1.0;

      BEGIN COMMENT ("(B) CHECK *; A, B MODEL NUMBERS; A*B NOT");

            IF EQUAL (2,2) THEN
                 A := 16#3.FFFFFFFFFFFFFFFC#E2;
                 B := 16#4.0000000000000004#E2;
                 C := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A * B;
            END IF;

            IF (C < 16#0.FFFFFFFFFFFFFFFFFE#E5)
            OR (C > 16#1.0#E5) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(B)

      DECLARE   -- (C)

             A : F := 1.0;
             B : F := 1.0;
             C : F := 1.0;

      BEGIN COMMENT ("(C) CHECK *; A MODEL NUMBER; B, A*B NOT");

            IF EQUAL (2,2) THEN
                 A := 2#1.1#;
                      -- 1.0 TO 1.0 + EPS ON NEXT LINE
                 B := 16#1.000000000000000002#;
                 C := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A * B;
            END IF;

            IF (C < 2#1.1#)
            OR (C > 16#1.800000000000000008#) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(C)

      DECLARE   -- (D)

            A : F1 := 1.0;
            B : F2 := 1.0;

      BEGIN COMMENT ("(D) CHECK *; A, B, A*B ALL MODEL NUMBERS; FOR " &
                 "FLOATING POINT WITH DIFFERENT SUBTYPES");

            IF EQUAL (2,2) THEN
                 A := 16#1.00000000000000002#;
                 B := 16#1.E#;
            END IF;

            IF A * B /= 16#1.E0000000000000003C# THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(D)

      DECLARE   -- (E)

            A : F1 := 1.0;
            B : F2 := 1.0;
            C : F1 := 1.0;

      BEGIN COMMENT ("(E) CHECK *; A, B MODEL NUMBERS; A*B NOT; " &
                "DIFFERENT SUBTYPES");

            IF EQUAL (2,2) THEN
                 A := 16#1.00000000000000002#;
                 B := 16#1.FFFFFFFFFFFFFFFF#;
            END IF;

            IF A*B < 16#1.FFFFFFFFFFFFFFFF3C#
            OR A*B > 16#1.FFFFFFFFFFFFFFFF4# THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(E)

      DECLARE   -- (F)

            A : F1 := 1.0;
            B : F2 := 1.0;
            C : F1 := 1.0;

      BEGIN COMMENT ("(F) CHECK *; A MODEL NUMBER; B, A*B NOT; " &
                "DIFFERENT SUBTYPES");

            IF EQUAL (2,2) THEN
                 A := 16#1.8#;
                 B := 16#0.AAAAAAAAAAAAAAAAAAAAAAAAA#;
                 C := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A * B;   -- B'S MANTISSA IS F2 BITS LONG
            END IF;

            IF (C < 16#0.FFFFFFFFFFFFFFFFC#)
            OR (C > 16#1.00000000000000008#) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(F)

      DECLARE   -- (G)

            A : F := 1.0;
            B : F := 1.0;
            C : F := 1.0;
            X : F := 1.0;
            Y : F := 1.0;
            Z : F := 1.0;

      BEGIN COMMENT ("(G) CHECK /; A, B, A/B ALL MODEL NUMBERS");

            IF EQUAL (2,2) THEN
                 A := 16#1.80000000000000000C#;
                 B := 16#1.8#;
                 C := 0.0;
                 X := 16#0.FFFF#E17;
                 Y := 16#0.101#E3;
                 Z := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A / B;
                 Z := X / Y;
            END IF;

            IF (C /= 16#1.000000000000000008#)
            OR (Z /= 16#0.FF#E15) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(G)

      DECLARE   -- (H)

            A : F := 1.0;
            B : F := 1.0;
            C : F := 1.0;

      BEGIN COMMENT ("(H) CHECK /; A, B MODEL NUMBERS; A/B NOT");

            IF EQUAL (2,2) THEN
                 A := 16#0.FFFFFFFFFFFFFFFFFE#;
                 B := 16#0.FFFFFFFFFFFFFFFFFC#;
                 C := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A / B;
            END IF;

            IF (C < 1.0)
            OR (C > 16#1.000000000000000004#) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(H)

      DECLARE   -- (I)

            A : F := 1.0;
            B : F := 1.0;
            C : F := 1.0;

      BEGIN COMMENT ("(I) CHECK /; A MODEL NUMBER; B, A/B NOT");

            IF EQUAL (2,2) THEN
                 A := 16#1.FFFFFFFFFFFFFFFFFC#;
                 B := 16#1.000000000000000002#;
                 C := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A / B;
            END IF;

            IF (C < 16#1.FFFFFFFFFFFFFFFFF#)
            OR (C > 16#1.FFFFFFFFFFFFFFFFFC#) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(I)

      DECLARE   -- (J)

            A : F1 := 1.0;
            B : F2 := 1.0;
            C : F2 := 1.0;
            X : F1 := 1.0;
            Y : F2 := 1.0;
            Z : F2 := 1.0;

      BEGIN COMMENT ("(J) CHECK /; A, B, A/B ALL MODEL NUMBERS; " &
                 "DIFFERENT SUBTYPES");

            IF EQUAL (2,2) THEN
                 A := 16#1.E000000000000003C#;
                 B := 16#1.E#;
                 C := 0.0;
                 X := 16#0.FFFC#E14;
                 Y := 16#0.81#E2;
                 Z := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A / B;
                 Z := X / Y;
            END IF;

            IF (C /= 16#1.0000000000000002#)
            OR (Z /= 16#0.1FC#E13) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(J)

      DECLARE   -- (K)

            A : F1 := 1.0;
            B : F2 := 1.0;
            C : F1 := 1.0;

      BEGIN COMMENT ("(K) CHECK /; A, B MODEL NUMBERS; A/B NOT; " &
                "DIFFERENT SUBTYPES");

            IF EQUAL (2,2) THEN
                 A := 16#1.E0000000000000038#;
                 B := 16#1.E#;
                 C := 0.0;
            END IF;

            IF EQUAL (1,1) THEN
                 C := A / B;
            END IF;

            IF (C < 1.0)
            OR (C > 16#1.0000000000000002#) THEN
                 FAILED("THE RESULT IS INCORRECT");
            END IF;

      END;  --(K)

      RESULT;

END C45521Q;
