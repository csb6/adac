-- C48009A.ADA

-- FOR ALLOCATORS OF THE FORM "NEW T'(X)", CHECK THAT CONSTRAINT_ERROR
-- IS RAISED IF T IS A SCALAR SUBTYPE AND X IS OUTSIDE THE RANGE OF T,
-- OR IS WITHIN T'S RANGE AND OUTSIDE OF THE RANGE OF VALUES PERMITTED
-- FOR OBJECTS DESIGNATED BY VALUES OF THE ALLOCATOR'S BASE TYPE.

-- RM  01/08/80
-- NL  10/13/81
-- SPS 10/26/82
-- JBG 03/02/83
-- EG  07/05/84

WITH REPORT;

PROCEDURE  C48009A  IS

     USE REPORT;

BEGIN

     TEST( "C48009A" , "FOR ALLOCATORS OF THE FORM 'NEW T'(X)', CHECK" &
                       " THAT CONSTRAINT_ERROR IS RAISED WHEN" &
                       " APPROPRIATE - SCALAR TYPES");
     DECLARE        -- A1

          SUBTYPE  TA  IS  INTEGER RANGE 1..7;
          TYPE ATA IS ACCESS TA;
          VA : ATA;

     BEGIN

          VA  :=  NEW TA'( 0 );
          FAILED ("NO EXCEPTION RAISED - 1");

     EXCEPTION

          WHEN  CONSTRAINT_ERROR  =>  NULL;
          WHEN  OTHERS      =>  FAILED ( "WRONG EXCEPTION RAISED - 1" );

     END;  -- A1

     DECLARE        -- A2

          SUBTYPE T1_7 IS INTEGER RANGE 1..7;
          TYPE AT2_6 IS ACCESS INTEGER RANGE 2..6;
          VAT2_6 : AT2_6;

     BEGIN

          BEGIN

               VAT2_6 := NEW T1_7'(1);
               FAILED ("NO EXCEPTION RAISED - 2");

          EXCEPTION

               WHEN CONSTRAINT_ERROR => NULL;
               WHEN OTHERS => 
                    FAILED ("WRONG EXCEPTION RAISED - 2");

          END;

          BEGIN

               VAT2_6 := NEW T1_7'(7);
               FAILED ("NO EXCEPTION RAISED - 3");

          EXCEPTION

               WHEN CONSTRAINT_ERROR => NULL;
               WHEN OTHERS =>
                    FAILED ("WRONG EXCEPTION RAISED - 3");

          END;

     END; -- A2

     RESULT;

END C48009A;
