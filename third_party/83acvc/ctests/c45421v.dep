-- C45421V.DEP

-- OBJECTIVE:
--     TEST UNARY PLUS AND UNARY MINUS.
--       (A) +A = A FOR MODEL NUMBERS.
--       (B) A = -(-A) FOR MODEL NUMBERS.
--     THIS TEST IS TO BE REPEATED FOR 'DIGITS = 5 .. 29.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS WHICH SUPPORT A
--     VALUE OF DIGITS GREATER THAN OR EQUAL TO 26.

--     IF 'DIGITS 26' IS NOT SUPPORTED, THEN THE DECLARATION OF 'TYPE F'
--     MUST BE REJECTED.

-- HISTORY:
--     BAW 09/17/80 CREATED ORIGINAL TEST.
--     JBG 11/11/82
--     JBG 10/12/86 ADD CODE TO ENSURE OPS ARE CHECKED AT RUN-TIME FOR
--              OPTIMIZING COMPILERS; REMOVE -B FROM TEST NAME.
--     DHH 01/11/88 ADDED APPLICABILITY CRITERIA AND STANDARD HEADER.

WITH REPORT;
PROCEDURE C45421V IS

     USE REPORT;

     TYPE F IS DIGITS 26;                             -- N/A => ERROR.

              -- F'LARGE
     A : F := 16#0.FFFFFFFFFFFFFFFFFFFFFF#E88;
     B : F := 0.0;
     C : F := +A;
     D : F := -A;
     E : F := -D;

BEGIN TEST ("C45421V", "CHECK FLOATING UNARY + AND -");

      BEGIN COMMENT("CHECK +A IS EQUAL TO A FOR ALL " &
                 " FLOATING POINT VALUES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED
                 A := 0.0;
            END IF;

            IF EQUAL (2,2) THEN
                 B := + A;
            END IF;

            IF A /= B OR C /= A THEN
                 FAILED("+A IS NOT EQUAL TO A FOR FLOATING POINT");
            END IF;

      END;  --(A)

      BEGIN COMMENT ("CHECK -(-A) IS EQUAL TO A FOR ALL " &
                 " MODEL NUMBERS (FLOATING POINT)");

            IF EQUAL (1,1) THEN
                 B := -A;
            END IF;

            IF EQUAL (2,2) THEN
                 B := -B;
            END IF;

            IF A /= B OR A /= E THEN
                 FAILED("-(-A) IS NOT EQUAL TO A FOR FLOATING POINT");
            END IF;

      END;  --(B)

      RESULT;

END C45421V;
