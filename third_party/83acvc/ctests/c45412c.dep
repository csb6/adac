-- C45412C.DEP

-- OBJECTIVE:
--     CHECK THAT NUMERIC_ERROR OR CONSTRAINT_ERROR IS RAISED BY
--     UNARY "-" IF THE RANGE OF LONG_INTEGER INDICATES A NONSYMMETRIC
--     RANGE OF VALUES.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS THAT SUPPORT
--     THE PREDEFINED LONG_INTEGER TYPE.

--     IF THE TYPE LONG_INTEGER IS NOT SUPPORTED, THEN THE DECLARATION
--     OF "A" MUST BE REJECTED.

-- HISTORY:
--     JET 07/11/88  CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;

PROCEDURE C45412C IS

     A : LONG_INTEGER;                         -- N/A => ERROR.

     FUNCTION IDENT (X : LONG_INTEGER) RETURN LONG_INTEGER IS
     BEGIN
          RETURN X * LONG_INTEGER(IDENT_INT(1));
     END IDENT;

     FUNCTION EQUAL (X,Y : LONG_INTEGER) RETURN BOOLEAN IS
     BEGIN
          RETURN X = IDENT(Y);
     END EQUAL;

BEGIN
     TEST ("C45412C", "CHECK THAT NUMERIC_ERROR OR CONSTRAINT_ERROR " &
                      "IS RAISED BY UNARY ""-"" IF THE RANGE OF " &
                      "LONG_INTEGER INDICATES A NONSYMMETRIC RANGE " &
                      "OF VALUES");

     IF LONG_INTEGER'FIRST + LONG_INTEGER'LAST /= IDENT(0) THEN
          BEGIN
               A := -LONG_INTEGER'FIRST;

               FAILED ("NO EXCEPTION RAISED BY UNARY ""-"" " &
                       "ON LONG_INTEGER'FIRST");

               IF NOT EQUAL (A,A) THEN
                    COMMENT ("DON'T OPTIMIZE 'A'");
               END IF;
          EXCEPTION
               WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
                    NULL;
               WHEN OTHERS =>
                    FAILED ("WRONG EXCEPTION RAISED BY UNARY ""-"" " &
                            "ON LONG_INTEGER'FIRST");
          END;
     ELSE
          COMMENT ("PREDEFINED LONG_INTEGER BASE TYPE IS SYMMETRIC");
     END IF;

     RESULT;

END C45412C;
