-- CE3402E.ADA

-- OBJECTIVE:
--     CHECK THAT NEW_LINE RAISES CONSTRAINT_ERROR IF SPACING IS
--     ZERO, NEGATIVE, OR GREATER THAN COUNT'LAST WHEN COUNT'LAST
--     IS LESS THAN COUNT'BASE'LAST.

-- HISTORY:
--     ABW 08/26/82
--     SPS 09/16/82
--     JBG 08/30/83
--     DWC 08/19/87  ADDED COUNT'LAST CASE.

WITH REPORT;
USE REPORT;
WITH TEXT_IO;
USE TEXT_IO;

PROCEDURE CE3402E IS

     FILE : FILE_TYPE;

BEGIN

     TEST ("CE3402E" , "CHECK THAT NEW_LINE RAISES CONSTRAINT_ERROR " &
                       "IF SPACING IS ZERO, NEGATIVE, OR GREATER " &
                       "THAN COUNT'LAST WHEN COUNT'LAST IS LESS " &
                       "THAN COUNT'BASE'LAST");

     BEGIN
          NEW_LINE (FILE,POSITIVE_COUNT(IDENT_INT(0)));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR ZERO");
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED FOR ZERO");
     END;

     BEGIN
          NEW_LINE (FILE,POSITIVE_COUNT(IDENT_INT(-2)));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR NEGATIVE NUMBER");
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED FOR NEGATIVE NUMBER");
     END;

     BEGIN
          IF COUNT'LAST < COUNT'BASE'LAST THEN
               NEW_LINE (FILE, COUNT'LAST + 1);
               FAILED ("CONSTRAINT_ERROR NOT RAISED FOR " &
                       "COUNT'LAST + 1");
          END IF;
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED FOR COUNT'LAST + 1");
     END;

     BEGIN
          CREATE (FILE);
     EXCEPTION
          WHEN USE_ERROR =>
               NULL;
     END;

     BEGIN
          NEW_LINE (FILE,POSITIVE_COUNT(IDENT_INT(0)));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR ZERO");
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED FOR ZERO");
     END;

     BEGIN
          NEW_LINE (FILE,POSITIVE_COUNT(IDENT_INT(-2)));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR NEGATIVE NUMBER");
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED FOR NEGATIVE NUMBER");
     END;

     BEGIN
          IF COUNT'LAST < COUNT'BASE'LAST THEN
               NEW_LINE (FILE, COUNT'LAST + 1);
               FAILED ("CONSTRAINT_ERROR NOT RAISED FOR " &
                       "COUNT'LAST + 1");
          END IF;
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED FOR COUNT'LAST + 1");
     END;

     BEGIN
          DELETE (FILE);
     EXCEPTION
          WHEN OTHERS =>
               NULL;
     END;

     RESULT;

END CE3402E;
