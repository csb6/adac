-- C86006C.DEP

-- OBJECTIVE:
--     CHECK THAT THE IDENTIFIER "LONG_INTEGER" IS DECLARED IN THE
--     PACKAGE "STANDARD", ALONG WITH THE OPERATORS OF THE TYPE
--     LONG_INTEGER.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO THOSE IMPLEMENTATIONS WHICH
--     SUPPORT "LONG_INTEGER".

--     IF LONG_INTEGER IS NOT SUPPORTED THEN THE DECLARATION OF THE
--     VARIABLE "SUPPORT" MUST BE REJECTED.

-- HISTORY:
--     DHH 06/14/88 CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;
PROCEDURE C86006C IS

     SUPPORT : LONG_INTEGER := -4;                     -- N/A => ERROR.

     A, B : STANDARD.LONG_INTEGER := -2;
     C, D : STANDARD.LONG_INTEGER := 2;
     E, F : STANDARD.LONG_INTEGER := 0;
     G : STANDARD.LONG_INTEGER := 14;
     H : STANDARD.LONG_INTEGER := 5;

     FUNCTION IDENT_L_INT(X : LONG_INTEGER) RETURN LONG_INTEGER IS
     BEGIN
          IF EQUAL(3,3) THEN
               RETURN X;
          ELSE
               RETURN 0;
          END IF;
     END IDENT_L_INT;

BEGIN

     TEST("C86006C", "CHECK THAT THE IDENTIFIER ""LONG_INTEGER"" " &
                     "IS DECLARED IN THE PACKAGE ""STANDARD"", " &
                     "ALONG WITH THE OPERATORS OF THE TYPE " &
                     "LONG_INTEGER");

     IF STANDARD."="(A,C) THEN
          FAILED("STANDARD.= FAILED");
     END IF;

     IF STANDARD."/="(C,D) THEN
          FAILED("STANDARD./= FAILED");
     END IF;

     IF STANDARD."<"(C,A) THEN
          FAILED("STANDARD.< FAILED");
     END IF;

     IF STANDARD."<="(D,B) THEN
          FAILED("STANDARD.<= FAILED");
     END IF;

     IF STANDARD.">"(A,E) THEN
          FAILED("STANDARD.> FAILED");
     END IF;

     IF STANDARD.">="(B,F) THEN
          FAILED("STANDARD.>= FAILED");
     END IF;

     IF STANDARD."+"(A,B) /= IDENT_L_INT(SUPPORT) THEN
          FAILED("STANDARD.+ FAILED");
     END IF;

     IF STANDARD."-"(A,C) /= IDENT_L_INT(SUPPORT) THEN
          FAILED("STANDARD.- FAILED");
     END IF;

     IF STANDARD."ABS"(A) /= C THEN
          FAILED("STANDARD.ABS FAILED");
     END IF;

     IF STANDARD."/"(C,A) /= IDENT_L_INT(-1) THEN
          FAILED("STANDARD./ FAILED");
     END IF;
-----------------------------------------------------------------------

     IF STANDARD."+"(A) /= IDENT_L_INT(-2) THEN
          FAILED("STANDARD.UNARY + FAILED");
     END IF;

     IF STANDARD."-"(B) /= IDENT_L_INT(2) THEN
          FAILED("STANDARD.UNARY - FAILED");
     END IF;
-----------------------------------------------------------------------

     IF STANDARD."REM"(IDENT_L_INT(G),IDENT_L_INT(H))
                                                  /=IDENT_L_INT(4) THEN
          FAILED("STANDARD.REM(++=+) FAILED");
     END IF;

     IF STANDARD."REM"(IDENT_L_INT(G),IDENT_L_INT(-H))
                                                  /=IDENT_L_INT(4) THEN
          FAILED("STANDARD.REM(+-=+ FAILED");
     END IF;

     IF STANDARD."REM"(IDENT_L_INT(-G),IDENT_L_INT(H))

                                            /=IDENT_L_INT(SUPPORT) THEN
          FAILED("STANDARD.REM(-+=-) FAILED");
     END IF;

     IF STANDARD."REM"(IDENT_L_INT(-G),IDENT_L_INT(-H))
                                            /=IDENT_L_INT(SUPPORT) THEN
          FAILED("STANDARD.REM(--=-) FAILED");
     END IF;
-----------------------------------------------------------------------

     IF STANDARD."MOD"(IDENT_L_INT(G),IDENT_L_INT(H))
                                                  /=IDENT_L_INT(4) THEN
          FAILED("STANDARD.MOD FAILED");
     END IF;

     IF STANDARD."MOD"(IDENT_L_INT(G),IDENT_L_INT(-H))
                                                 /=IDENT_L_INT(-1) THEN
          FAILED("STANDARD.MOD FAILED");
     END IF;

     IF STANDARD."MOD"(IDENT_L_INT(-G),IDENT_L_INT(H))
                                                  /=IDENT_L_INT(1) THEN
          FAILED("STANDARD.MOD FAILED");
     END IF;

     IF STANDARD."MOD"(IDENT_L_INT(-G),IDENT_L_INT(-H))
                                            /=IDENT_L_INT(SUPPORT) THEN
          FAILED("STANDARD.MOD FAILED");
     END IF;
-----------------------------------------------------------------------

     IF STANDARD."**"(E,2) /= IDENT_L_INT(0) THEN
          FAILED("STANDARD.** FAILED");
     END IF;

     RESULT;

END C86006C;
