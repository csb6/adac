-- C45614A.ADA

-- CHECK THAT CONSTRAINT_ERROR IS RAISED IF THE EXPONENT VALUE IN 
-- AN INTEGER EXPONENTIATION IS NEGATIVE.
-- CHECK BOTH STATIC AND NONSTATIC EXPONENT VALUES.

-- AH  9/29/86

WITH REPORT; USE REPORT;
PROCEDURE C45614A IS
     INT : INTEGER :=1;
     RES : INTEGER;
BEGIN
     TEST ("C45614A", "CONSTRAINT_ERROR IS RAISED FOR INTEGERS " & 
                      "HAVING A NEGATIVE EXPONENT");

     DECLARE
          E1 : CONSTANT INTEGER := -5;
     BEGIN
          RES := INT ** E1;
          FAILED ("CONSTRAINT_ERROR NOT RAISED - E1A");

     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("CONSTRAINT_ERROR NOT RAISED - E1B");
     END;

     DECLARE
          E2 : INTEGER := 5;
     BEGIN
          RES := INT ** (-E2);
          FAILED ("CONSTRAINT_ERROR NOT RAISED - E2A");

     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("CONSTRAINT_ERROR NOT RAISED - E2B");
     END;

     DECLARE
          E3 : INTEGER;
     BEGIN
          E3 := IDENT_INT(-5);
          RES := INT ** E3;
          FAILED ("CONSTRAINT_ERROR NOT RAISED - E3A");

     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("CONSTRAINT_ERROR NOT RAISED - E3B");
     END;

     DECLARE
     BEGIN
          RES := INT ** IDENT_INT(-5);
          FAILED ("CONSTRAINT_ERROR NOT RAISED - E4A");

     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("CONSTRAINT_ERROR NOT RAISED - E4B");
     END;

     RES := IDENT_INT(2);
     RES := IDENT_INT(RES);
     RESULT;
END C45614A;
