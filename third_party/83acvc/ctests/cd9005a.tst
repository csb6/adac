-- CD9005A.TST

-- OBJECTIVE:
--     CHECK THAT AN INTERFACE PRAGMA BEHAVES CORRECTLY WHEN USED FOR
--     A LIBRARY PROCEDURE.

-- MACRO SUBSTITUTION:
--     $INTERFACE_LANGUAGE IS AN IDENTIFIER FOR A LANGUAGE FOR WHICH
--     PRAGMA INTERFACE IS DEFINED.  IF PRAGMA INTERFACE IS NOT
--     SUPPORTED, THEN ANY IDENTIFIER MAY BE SUBSTITUTED.

--     ALSO, AN EXTERNAL PROCEDURE NAMED "PROC10" WHICH ACCEPTS A
--     PARAMETER WITH INTEGER VALUE 5 AND RETURNS IT WITH A VALUE
--     OF 10 MUST BE SEPARATELY WRITTEN IN THE ABOVE LANGUAGE AND
--     THEN COMPILED AND LINKED WITH THIS PROCEDURE ACCORDING TO THE
--     METHODS REQUIRED BY THE IMPLEMENTATION.
--     THE FOLLOWING EXAMPLE IS IN FORTRAN:
--            SUBROUTINE PROC10 (I)
--              I = I + 5
--            END

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE TO IMPLEMENTATIONS THAT SUPPORT PRAGMA
--     INTERFACE.  IF PRAGMA INTERFACE IS NOT SUPPORTED THEN THE
--     PROCEDURE CD9005A_TEST MUST BE REJECTED BECAUSE THE BODY OF
--     TEST_PROC IS MISSING.

-- HISTORY:
--     JET 09/23/88  CREATED ORIGINAL TEST.

PROCEDURE CD9005A_TEST IS
     PROCEDURE TEST_PROC;
     PRAGMA INTERFACE($INTERFACE_LANGUAGE, TEST_PROC);
BEGIN
     TEST_PROC;
END CD9005A_TEST;                                    -- N/A => ERROR.

PROCEDURE PROC10 (X : IN OUT INTEGER);
PRAGMA INTERFACE ($INTERFACE_LANGUAGE, PROC10);

WITH PROC10;
WITH REPORT; USE REPORT;
PROCEDURE CD9005A IS

     I : INTEGER := 5;

BEGIN
     TEST ("CD9005A", "CHECK THAT AN INTERFACE PRAGMA BEHAVES " &
                      "CORRECTLY WHEN USED FOR A LIBRARY PROCEDURE");

     PROC10(I);
     IF I /= 10 THEN
          FAILED("INCORRECT RETURN VALUE OF PROCEDURE PARAMETER :" &
                 INTEGER'IMAGE(I));
     END IF;

     RESULT;
END CD9005A;
