-- C35A07Q.ADA

-- OBJECTIVE:
--      CHECK THAT FOR FIXED POINT TYPES THE FIRST AND LAST ATTRIBUTES
--      YIELD CORRECT VALUES.

--      CASE Q: TYPES TYPICAL OF APPLICATIONS USING FIXED POINT
--      ARITHMETIC, FOR GENERICS.

-- HISTORY:
--      WRG  8/26/86  CREATED ORIGINAL TEST.
--      RJW 10/13/88  ENTERED TEST INTO ACVC.

WITH REPORT; USE REPORT;
WITH SYSTEM; USE SYSTEM;
PROCEDURE C35A07Q IS

     PI      : CONSTANT := 3.14159_26535_89793_23846;
     TWO_PI  : CONSTANT := 2 * PI;
     HALF_PI : CONSTANT := PI / 2;

     MM : CONSTANT := MAX_MANTISSA;

     -- THE NAME OF EACH TYPE OR SUBTYPE ENDS WITH THAT TYPE'S
     -- 'MANTISSA VALUE.

     TYPE MICRO_ANGLE_ERROR_M15  IS
          DELTA 16.0  RANGE -(2.0 ** 19) .. 2.0 ** 19;
     TYPE TRACK_RANGE_M15        IS
          DELTA 0.125 RANGE -(2.0 ** 12) .. 2.0 ** 12;
     TYPE SECONDS_MM             IS
          DELTA 2.0 ** (8 - MM) RANGE -(2.0 ** 8) .. 2.0 ** 8;
     TYPE RANGE_CELL_MM          IS
          DELTA 2.0 ** (-5)
          RANGE -(2.0 ** (MM - 5) ) .. 2.0 ** (MM - 5);

     TYPE PIXEL_M10 IS DELTA 1.0 / 1024.0 RANGE 0.0 ..  1.0;
     TYPE RULER_M8  IS DELTA 1.0 / 16.0   RANGE 0.0 .. 12.0;

     TYPE HOURS_M16 IS DELTA   24.0 * 2.0 ** (-15) RANGE 0.0 ..   24.0;
     TYPE MILES_M16 IS DELTA 3000.0 * 2.0 ** (-15) RANGE 0.0 .. 3000.0;

     TYPE SYMMETRIC_DEGREES_M7  IS
          DELTA 2.0         RANGE -180.0 .. 180.0;
     TYPE NATURAL_DEGREES_M15   IS
          DELTA 2.0 ** (-6) RANGE    0.0 .. 360.0;
     TYPE SYMMETRIC_RADIANS_M16 IS
          DELTA     PI * 2.0 ** (-15) RANGE -PI .. PI;
               -- 'SMALL = 2.0 ** (-14) = 0.00006_10351_5625.
     TYPE NATURAL_RADIANS_M8    IS
          DELTA TWO_PI * 2.0 ** ( -7) RANGE 0.0 .. TWO_PI;
               -- 'SMALL = 2.0 ** ( -5) = 0.03125.

     -------------------------------------------------------------------

     SUBTYPE ST_MILES_M8             IS MILES_M16
          DELTA 3000.0 * 2.0 ** (-15) RANGE 0.0 .. 10.0;
     SUBTYPE ST_NATURAL_DEGREES_M11  IS NATURAL_DEGREES_M15
          DELTA 0.25 RANGE 0.0 .. 360.0;
     SUBTYPE ST_SYMMETRIC_RADIANS_M8 IS SYMMETRIC_RADIANS_M16
          DELTA HALF_PI * 2.0 ** (-7) RANGE -HALF_PI .. HALF_PI;
               -- 'SMALL = 2.0 ** ( -7) = 0.00781_25.

     -------------------------------------------------------------------

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE INEXACT_CHECK (NAME : STRING);

     PROCEDURE INEXACT_CHECK (NAME : STRING) IS
     BEGIN
          IF T'FIRST > -T'LARGE THEN
               FAILED (NAME & "'FIRST > -" & NAME & "'LARGE");
          END IF;

          IF T'LAST  <  T'LARGE THEN
               FAILED (NAME & "'LAST  <  " & NAME & "'LARGE");
          END IF;
     END INEXACT_CHECK;

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE EXACT_CHECK (NAME : STRING; FIRST, LAST : T );

     PROCEDURE EXACT_CHECK (NAME : STRING; FIRST, LAST : T ) IS
     BEGIN
          IF T'FIRST /= IDENT_INT (1) * FIRST THEN
               FAILED ("WRONG GENERIC 'FIRST FOR " & NAME);
          END IF;

          IF T'LAST /= IDENT_INT (1) * LAST THEN
               FAILED ("WRONG GENERIC 'LAST FOR " & NAME);
          END IF;
     END EXACT_CHECK;

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE RANGE_CHECK (NAME : STRING; L : T );

     PROCEDURE RANGE_CHECK (NAME : STRING; L : T ) IS
     BEGIN
          IF T'FIRST NOT IN -(L + T'SMALL) .. -L THEN
               FAILED ("GENERIC 'FIRST FOR " & NAME & " NOT IN RANGE");
          END IF;

          IF T'LAST  NOT IN  L .. L + T'SMALL THEN
               FAILED ("GENERIC 'LAST  FOR " & NAME & " NOT IN RANGE");
          END IF;
     END RANGE_CHECK;

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE EXACT_LEFT_INEXACT_RIGHT (NAME : STRING; L : T);

     PROCEDURE EXACT_LEFT_INEXACT_RIGHT (NAME : STRING; L : T )IS
     BEGIN
          IF T'FIRST /= IDENT_INT (1) * L THEN
               FAILED ("WRONG GENERIC 'FIRST FOR " & NAME);
          END IF;

          IF T'LAST  <  T'LARGE THEN
               FAILED (NAME & "'LAST  <  " & NAME & "'LARGE");
          END IF;
     END EXACT_LEFT_INEXACT_RIGHT;

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE EXACT_LEFT_RANGE_RIGHT (NAME : STRING; FIRST, L : T);

     PROCEDURE EXACT_LEFT_RANGE_RIGHT (NAME : STRING; FIRST, L : T )
     IS
     BEGIN
          IF T'FIRST /= IDENT_INT (1) * FIRST THEN
               FAILED ("WRONG GENERIC 'FIRST FOR " & NAME);
          END IF;

          IF T'LAST  NOT IN  L .. L + T'SMALL THEN
               FAILED ("GENERIC 'LAST  FOR " & NAME & " NOT IN RANGE");
          END IF;
     END EXACT_LEFT_RANGE_RIGHT;

     -------------------------------------------------------------------

     PROCEDURE CHECK_MICRO_ANGLE_ERROR_M15
                         IS NEW INEXACT_CHECK (MICRO_ANGLE_ERROR_M15  );
     PROCEDURE CHECK_TRACK_RANGE_M15
                         IS NEW INEXACT_CHECK (TRACK_RANGE_M15        );
     PROCEDURE CHECK_SECONDS_MM    IS NEW INEXACT_CHECK (SECONDS_MM   );
     PROCEDURE CHECK_RANGE_CELL_MM IS NEW INEXACT_CHECK (RANGE_CELL_MM);
     PROCEDURE CHECK_PIXEL_M10
                         IS NEW EXACT_LEFT_INEXACT_RIGHT(PIXEL_M10    );
     PROCEDURE CHECK_RULER_M8      IS NEW   EXACT_CHECK (RULER_M8     );
     PROCEDURE CHECK_HOURS_M16     IS NEW   EXACT_CHECK (HOURS_M16    );
     PROCEDURE CHECK_MILES_M16     IS NEW   EXACT_CHECK (MILES_M16    );
     PROCEDURE CHECK_SYMMETRIC_DEGREES_M7
                         IS NEW   EXACT_CHECK (SYMMETRIC_DEGREES_M7   );
     PROCEDURE CHECK_NATURAL_DEGREES_M15
                         IS NEW   EXACT_CHECK (NATURAL_DEGREES_M15    );
     PROCEDURE CHECK_SYMMETRIC_RADIANS_M16
                         IS NEW   RANGE_CHECK (SYMMETRIC_RADIANS_M16  );
     PROCEDURE CHECK_NATURAL_RADIANS_M8
                IS NEW EXACT_LEFT_RANGE_RIGHT (NATURAL_RADIANS_M8     );
     PROCEDURE CHECK_ST_MILES_M8   IS NEW   EXACT_CHECK (ST_MILES_M8  );
     PROCEDURE CHECK_ST_NATURAL_DEGREES_M11
                         IS NEW   EXACT_CHECK (ST_NATURAL_DEGREES_M11 );
     PROCEDURE CHECK_ST_SYMMETRIC_RADIANS_M8
                         IS NEW   RANGE_CHECK (ST_SYMMETRIC_RADIANS_M8);


BEGIN

     TEST ("C35A07Q", "CHECK THAT FOR FIXED POINT TYPES THE FIRST " &
                      "AND LAST ATTRIBUTES YIELD CORRECT VALUES - " &
                      "TYPICAL TYPES, GENERICS");

     CHECK_MICRO_ANGLE_ERROR_M15("MICRO_ANGLE_ERROR_M15");
     CHECK_TRACK_RANGE_M15      ("TRACK_RANGE_M15");
     CHECK_SECONDS_MM           ("SECONDS_MM");
     CHECK_RANGE_CELL_MM        ("RANGE_CELL_MM");
     CHECK_PIXEL_M10            ("PIXEL_M10", 0.0);
     CHECK_RULER_M8             ("RULER_M8",  0.0, 12.0);
     CHECK_HOURS_M16            ("HOURS_M16", 0.0, 24.0);
     CHECK_MILES_M16            ("MILES_M16", 0.0, 3000.0);
     CHECK_SYMMETRIC_DEGREES_M7 ("SYMMETRIC_DEGREES_M7", -180.0, 180.0);
     CHECK_NATURAL_DEGREES_M15  ("NATURAL_DEGREES_M15", 0.0, 360.0);
     CHECK_SYMMETRIC_RADIANS_M16("SYMMETRIC_RADIANS_M16",
                                 3.14154_05273_4375);
          -- PI IS IN 3.0 + 2319 * 'SMALL .. 3.0 + 2320 * 'SMALL.
     CHECK_NATURAL_RADIANS_M8   ("NATURAL_RADIANS_M8", 0.0, 6.28125);
          -- TWO_PI IS IN 201 * 'SMALL .. 202 * 'SMALL.
     CHECK_ST_MILES_M8          ("ST_MILES_M8", 0.0, 10.0);
     CHECK_ST_NATURAL_DEGREES_M11
                                ("ST_NATURAL_DEGREES_M11", 0.0, 360.0);
     CHECK_ST_SYMMETRIC_RADIANS_M8 ("ST_SYMMETRIC_RADIANS_M8",
                                    1.57031_25);
          -- HALF_PI IS IN 201 * 'SMALL .. 202 * 'SMALL.

     RESULT;

END C35A07Q;
