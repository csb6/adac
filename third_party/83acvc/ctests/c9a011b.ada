-- C9A011B.ADA

-- OBJECTIVE:
--     CHECK THAT "TASKING_ERROR" IS RAISED BY A TIMED ENTRY CALL IF
--     THE CALLED TASK IS ABORTED BEFORE THE DELAY EXPIRES BUT NOT
--     WHEN THE CALL IS FIRST EXECUTED.

-- HISTORY:
--     DHH 06/14/88 CREATED ORIGINAL TEST.

WITH SYSTEM; USE SYSTEM;
WITH REPORT; USE REPORT;
PROCEDURE C9A011B IS

     TASK TIMED_ENTRY IS
          ENTRY WAIT_AROUND;
     END TIMED_ENTRY;

     TASK OWNER IS
          ENTRY START;
          ENTRY SELF_ABORT;
     END OWNER;

     TASK BODY TIMED_ENTRY IS
     BEGIN
          SELECT
               OWNER.SELF_ABORT;
          OR
               DELAY 60.0;
          END SELECT;
          FAILED("NO EXCEPTION RAISED");

          ACCEPT WAIT_AROUND;
     EXCEPTION
          WHEN TASKING_ERROR =>
               ACCEPT WAIT_AROUND;
          WHEN OTHERS =>
               FAILED("WRONG EXCEPTION RAISED");
               ACCEPT WAIT_AROUND;
     END TIMED_ENTRY;

     TASK BODY OWNER IS
     BEGIN
          ACCEPT START DO
               WHILE SELF_ABORT'COUNT = 0 LOOP
                    DELAY 1.0;
               END LOOP;
          END START;

          ABORT OWNER;

          ACCEPT SELF_ABORT;

     END OWNER;

BEGIN

     TEST("C9A011B", "CHECK THAT ""TASKING_ERROR"" IS RAISED BY A " &
                     "TIMED ENTRY CALL IF THE CALLED TASK IS " &
                     "ABORTED BEFORE THE DELAY EXPIRES BUT NOT " &
                     "WHEN THE CALL IS FIRST EXECUTED");

     OWNER.START;
     DELAY 5.0;

     IF TIMED_ENTRY'CALLABLE THEN
          TIMED_ENTRY.WAIT_AROUND;
     ELSE
          FAILED("TASK ABORTED WHEN TASKING ERROR IS RAISED");
     END IF;

     RESULT;

EXCEPTION
     WHEN OTHERS =>
          FAILED("EXCEPTION RAISED OUTSIDE OF TASK");
          RESULT;

END C9A011B;
