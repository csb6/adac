-- CE3102C.ADA

-- OBJECTIVE:
--     CHECK WHETHER CREATE AND OPEN RAISE USE_ERROR WHEN AN EXISTING
--     FILE IS NAMED AND OUT_FILE IS SPECIFIED.  CHECK WHETHER CREATE
--     RAISES USE_ERROR WHEN AN EXISTING FILE IS NAMED AND IN_FILE IS
--     SPECIFIED.

-- HISTORY:
--     BCB 09/28/88  CREATED ORIGINAL TEST BY RENAMING AND
--                   REVISING EE3102C.ADA

WITH TEXT_IO; USE TEXT_IO;
WITH REPORT; USE REPORT;

PROCEDURE CE3102C IS

     FILE1 : FILE_TYPE;
     FILE2 : FILE_TYPE;
     FILE3 : FILE_TYPE;
     INCOMPLETE : EXCEPTION;

BEGIN

     TEST ("CE3102C", "CHECK WHETHER CREATE AND OPEN RAISE USE_ERROR " &
                      "WHEN A FILE EXISTS AND MODE IS OUT_FILE");

     BEGIN
          CREATE (FILE1, NAME => "X3102C");
     EXCEPTION
          WHEN USE_ERROR =>
               NOT_APPLICABLE ("USE_ERROR RAISED ON CREATE");
               RAISE INCOMPLETE;
          WHEN NAME_ERROR =>
               NOT_APPLICABLE ("NAME_ERROR RAISED ON CREATE");
               RAISE INCOMPLETE;
          WHEN OTHERS =>
               FAILED ("UNEXPECTED EXCEPTION RAISED ON CREATE");
               RAISE INCOMPLETE;
     END;
     PUT (FILE1, "STRING");
     CLOSE (FILE1);

     CREATE (FILE2, NAME => "Y3102C");
     PUT (FILE2, "STRING");
     CLOSE (FILE2);

     CREATE (FILE3, NAME => "Z3102C");
     PUT (FILE3, "STRING");
     CLOSE (FILE3);

     BEGIN
          OPEN (FILE1, OUT_FILE, "X3102C");
          COMMENT ("OPENING EXISTING FILE IN OUT_FILE MODE IS ALLOWED");
          BEGIN
               DELETE (FILE1);
          EXCEPTION
               WHEN USE_ERROR =>
                    NULL;
          END;
     EXCEPTION
          WHEN USE_ERROR =>
               COMMENT ("CAN'T OPEN EXISTING FILE IN OUT_FILE MODE");
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED - OPEN");
     END;

     BEGIN
          CREATE (FILE2, OUT_FILE, "Y3102C");
          COMMENT ("CREATE FOR EXISTING FILE ALLOWED -- OUT_FILE");
          BEGIN
               DELETE (FILE2);
          EXCEPTION
               WHEN USE_ERROR =>
                    NULL;
          END;
     EXCEPTION
          WHEN USE_ERROR =>
               COMMENT ("CREATE FOR EXISTING FILE NOT ALLOWED -- " &
                        "OUT_FILE");
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED - CREATE-OUT_FILE");
     END;

     BEGIN
          CREATE (FILE3, IN_FILE, "Z3102C");
          COMMENT ("CREATE FOR EXISTING FILE ALLOWED -- IN_FILE");
          BEGIN
               DELETE (FILE3);
          EXCEPTION
               WHEN USE_ERROR =>
                    NULL;
          END;
     EXCEPTION
          WHEN USE_ERROR =>
               COMMENT ("CREATE FOR EXISTING FILE NOT ALLOWED -- " &
                        "IN_FILE");
          WHEN OTHERS =>
               FAILED ("OTHER EXCEPTION RAISED - CREATE-IN_FILE");
     END;

     RESULT;

EXCEPTION
     WHEN INCOMPLETE =>
          RESULT;

END CE3102C;
