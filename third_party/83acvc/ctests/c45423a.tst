-- C45423A.TST

-- OBJECTIVE:
--     FOR PREDEFINED TYPE FLOAT, CHECK WHETHER NUMERIC_ERROR OR
--     CONSTRAINT_ERROR IS RAISED FOR UNARY '+' OR '-' WHEN THE OPERAND
--     VALUE LIES OUTSIDE THE RANGE OF SAFE NUMBERS BUT WITHIN THE
--     RANGE OF THE BASE TYPE.

-- MACRO SUBSTITUTION:
--     $GREATER_THAN_FLOAT_SAFE_LARGE IS A REAL LITERAL WHOSE VALUE IS
--     GREATER THAN FLOAT'SAFE_LARGE BUT IS WITHIN THE RANGE OF THE
--     BASE TYPE.

-- HISTORY:
--     JET 01/26/88  CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;

PROCEDURE C45423A IS

     A : FLOAT;

     FUNCTION IDENT (X : FLOAT) RETURN FLOAT IS
     BEGIN
          RETURN X * FLOAT(IDENT_INT(1));
     END IDENT;

BEGIN
     TEST ("C45423A", "FOR PREDEFINED TYPE FLOAT, CHECK THAT " &
                      "NUMERIC_ERROR OR CONSTRAINT_ERROR IS RAISED " &
                      "FOR UNARY '+' OR '-' WHEN THE OPERAND " &
                      "VALUE LIES OUTSIDE THE RANGE OF SAFE NUMBERS " &
                      "BUT WITHIN THE RANGE OF THE BASE TYPE");

     IF NOT FLOAT'MACHINE_OVERFLOWS THEN
          NOT_APPLICABLE ("MACHINE_OVERFLOWS IS FALSE");
     ELSE
          BEGIN
               IF -IDENT ($GREATER_THAN_FLOAT_SAFE_LARGE)
               NOT IN FLOAT THEN
                    COMMENT("NO EXCEPTION RAISED FOR " &
                            "-$GREATER_THAN_FLOAT_SAFE_LARGE " &
                            "NOT IN FLOAT");
               END IF;
          EXCEPTION
               WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
                    COMMENT ("EXCEPTION RAISED BY " &
                             "-$GREATER_THAN_FLOAT_SAFE_LARGE");
               WHEN OTHERS =>
                    FAILED ("UNEXPECTED EXCEPTION RAISED BY " &
                            "-$GREATER_THAN_FLOAT_SAFE_LARGE");
          END;

          BEGIN
               IF +IDENT ($GREATER_THAN_FLOAT_SAFE_LARGE)
               NOT IN FLOAT THEN
                    COMMENT("NO EXCEPTION RAISED FOR " &
                            "+$GREATER_THAN_FLOAT_SAFE_LARGE " &
                            "NOT IN FLOAT");
               END IF;
          EXCEPTION
               WHEN NUMERIC_ERROR | CONSTRAINT_ERROR =>
                    COMMENT ("EXCEPTION RAISED BY " &
                             "+$GREATER_THAN_FLOAT_SAFE_LARGE");
               WHEN OTHERS =>
                    FAILED ("UNEXPECTED EXCEPTION RAISED BY " &
                            "+$GREATER_THAN_FLOAT_SAFE_LARGE");
          END;
     END IF;

     RESULT;

END C45423A;
