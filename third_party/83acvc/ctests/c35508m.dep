-- C35508M.DEP

-- OBJECTIVE:
--     CHECK THAT 'POS' AND 'VAL' YIELD THE CORRECT RESULTS WHEN THE
--     PREFIX IS A BOOLEAN TYPE WITH AN ENUMERATION REPRESENTATION
--     CLAUSE.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE TO IMPLEMENTATIONS WHICH SUPPORT
--     ENUMERATION REPRESENTATION CLAUSES.
--
--     IF ENUMERATION REPRESENTATION CLAUSES ARE NOT SUPPORTED, THEN
--     THE REPRESENTATION CLAUSE FOR NEWBOOL MUST BE REJECTED.

-- HISTORY:
--     RJW 03/19/86  CREATED ORIGINAL TEST.
--     BCB 01/04/88  MODIFIED HEADER.

WITH REPORT; USE REPORT;

PROCEDURE C35508M IS

     TYPE NEWBOOL  IS  NEW BOOLEAN;
     FOR NEWBOOL USE ( FALSE => 24, TRUE => 32 );  -- N/A => ERROR.
     F : NEWBOOL := TRUE;
     T : NEWBOOL := FALSE;

BEGIN
     TEST ("C35508M", "CHECK THAT 'POS' AND 'VAL' YIELD THE " &
                      "CORRECT RESULTS WHEN THE PREFIX IS A " &
                      "BOOLEAN TYPE WITH AN ENUMERATION " &
                      "REPRESENTATION CLAUSE" );

     IF EQUAL (3,3) THEN
          F := FALSE;
          T := TRUE;
     END IF;
     BEGIN
          IF NEWBOOL'POS (F) /= 0 THEN
               FAILED ( "WRONG POS FOR 'FALSE'" );
          END IF;
          IF NEWBOOL'POS (T) /= 1 THEN
               FAILED ( "WRONG POS FOR 'TRUE'" );
          END IF;

          IF NEWBOOL'VAL (IDENT_INT(0)) /= FALSE THEN
               FAILED ( "WRONG VAL FOR '0'" );
          END IF;
          IF NEWBOOL'VAL (IDENT_INT(1)) /= TRUE THEN
               FAILED ( "WRONG VAL FOR '1'" );
          END IF;
     END;

     BEGIN
          IF NEWBOOL'VAL (IDENT_INT(-1)) = TRUE THEN
               FAILED ("'VAL OF -1 WRAPPED AROUND TO TRUE");
          END IF;
          FAILED ( "NO EXCEPTION RAISED FOR VAL OF '-1'" );
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ( "WRONG EXCEPTION RAISED FOR VAL OF '-1'" );
     END;

     BEGIN
          IF NEWBOOL'VAL (IDENT_INT(2)) = FALSE THEN
               FAILED ("'VAL OF 2 WRAPPED AROUND TO FALSE");
          END IF;
          FAILED ( "NO EXCEPTION RAISED FOR VAL OF '2'" );
     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ( "WRONG EXCEPTION RAISED FOR VAL OF '2'" );
     END;

     RESULT;
END C35508M;
