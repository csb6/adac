-- C87B37E.ADA

-- CHECK THAT AN IMPLICIT CONVERSION FROM UNIVERSAL  INTEGER
-- IS NOT APPLIED IF THERE IS A LEGAL INTERPRETATION WITHOUT
-- THE IMPLICIT CONVERSION. 

-- SELECTION WITH .ALL

-- RFB 04/09/84
-- EG  05/31/84

WITH REPORT; USE REPORT;

PROCEDURE C87B37E IS

     FUNCTION "<" (L, R : INTEGER) RETURN INTEGER IS
     BEGIN
          RETURN 4;
     END "<";

     PROCEDURE CHECK (B : BOOLEAN; S : STRING) IS
     BEGIN
          IF NOT B THEN 
               FAILED(S); 
          END IF;
     END;

BEGIN

     TEST ("C87B37E","CHECK THAT IMPLICIT CONVERSIONS ARE ONLY USED " &
                     "WHEN NECESSARY FOR UNIVERSAL INTEGER");

     DECLARE        -- CASES INVOLVING .ALL

          TYPE ACC1 IS ACCESS STRING(1 .. 2);

          TYPE NEW_STR IS NEW STRING;
          TYPE ACC2 IS ACCESS NEW_STR(1 .. 2);

          WHICH_FUNCI  : INTEGER;
          WHICH_FUNC1A : STRING (1 .. 2);
          WHICH_FUNC2A : NEW_STR(1 .. 2);

          FUNCTION F (B : BOOLEAN) RETURN ACC1 IS
          BEGIN
               WHICH_FUNCI := 1;
               RETURN NEW STRING'("11");
          END;

          FUNCTION F (X : INTEGER) RETURN ACC1 IS
          BEGIN
               WHICH_FUNCI := 2;
               RETURN NEW STRING'("22");
          END;

          FUNCTION F (X : INTEGER) RETURN ACC2 IS
          BEGIN
               WHICH_FUNCI := 3;
               RETURN NEW NEW_STR'("33");
          END;

     BEGIN

          WHICH_FUNC1A := F(5 < 5).ALL;      -- NO IMPLICIT CONVERSION
          CHECK(WHICH_FUNC1A = "11", "CALLED WRONG F : DEACCESS #1");

          WHICH_FUNC2A := F(5 < 5).ALL;      -- IMPLICIT CONVERSION
          CHECK(WHICH_FUNC2A = "33", "CALLED WRONG F : DEACCESS #2");

          WHICH_FUNCI := -1;
          F(5 < 5).ALL := "44";              -- NO IMPLICIT CONVERSION
          CHECK(WHICH_FUNCI = 1, "CALLED WRONG F : DEACCESS #3");

     END;

     RESULT;

END C87B37E;
