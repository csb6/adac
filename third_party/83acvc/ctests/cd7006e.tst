-- CD7006E.TST

-- OBJECTIVE:
--     CHECK THAT THE PRAGMA 'MEMORY_SIZE' IS IGNORED IF IT
--     IS NOT AT THE BEGINNING OF A COMPILATION.
--     MORE SPECIFICALLY:
--          THE PROGRAM IS ACCEPTED,
--          THE VALUE OF 'SYSTEM.MEMORY_SIZE' IS UNCHANGED.

-- APPLICABILITY CRITERIA:
--     IF THE IMPLEMENTATION IMPOSES ANY ADDITIONAL LIMITIATIONS ON THE
--     USE OF THE PRAGMA, THEN APPLICABILITY IS DETERMINED ON A CASE
--     BY CASE BASIS.  THE IMPLEMENTATION MUST ATTEMPT TO COMPILE AND
--     EXECUTE THE TEST.

-- MACRO SUBSTITUTION:
--     THE MACRO NEW_MEM_SIZE IS AN INTEGER LITERAL SUPPORTED BY THE
--     PRAGMA 'MEMORY_SIZE', OTHER THAN THE DEFAULT VALUE.
--     THIS SUBSTITUTION IS MADE IN THE PRAGMA STATEMENT BELOW.

--     THE MACRO DEFAULT_MEM_SIZE IS THE DEFAULT VALUE OF THE
--     CONSTANT 'SYSTEM.MEMORY_SIZE'.
--     THIS SUBSTITUTION IS MADE IN THE CHECK FOR INEQUALITY OF
--     'SYSTEM.MEMORY_SIZE'.

-- HISTORY:
--     VCL  09/22/87  CREATED ORIGINAL TEST.

PACKAGE CD7006E_PACK IS
     X : CONSTANT := 7;
END CD7006E_PACK;

WITH REPORT; USE REPORT;
PACKAGE BODY CD7006E_PACK IS
BEGIN
     TEST ("CD7006E", "THE PRAGMA 'MEMORY_SIZE' IS IGNORED IF IT " &
                      "IS NOT AT THE BEGINNING OF A COMPILATION");
END CD7006E_PACK;

PRAGMA MEMORY_SIZE ($NEW_MEM_SIZE);

WITH SYSTEM;
WITH CD7006E_PACK;
WITH REPORT; USE REPORT;
PROCEDURE CD7006E IS
     Y : INTEGER := CD7006E_PACK.X;
BEGIN
     IF $DEFAULT_MEM_SIZE /= SYSTEM.MEMORY_SIZE THEN
          FAILED ("VALUE OF 'SYSTEM.MEMORY_SIZE' DOES NOT MATCH " &
                  "$DEFAULT_MEM_SIZE");
     END IF;

     RESULT;
END CD7006E;
