-- C35508N.DEP

-- OBJECTIVE:
--     CHECK THAT 'POS' AND 'VAL' YIELD THE CORRECT RESULTS WHEN THE
--     PREFIX IS A FORMAL DISCRETE TYPE WHOSE ACTUAL PARAMETER IS A
--     BOOLEAN TYPE WITH AN ENUMERATION REPRESENTATION CLAUSE.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE TO IMPLEMENTATIONS WHICH SUPPORT
--     ENUMERATION REPRESENTATION CLAUSES.
--
--     IF ENUMERATION REPRESENTATION CLAUSES ARE NOT SUPPORTED, THEN
--     THE REPRESENTATION CLAUSE FOR NEWBOOL MUST BE REJECTED.

-- HISTORY:
--     RJW 03/24/86  CREATED ORIGINAL TEST.
--     BCB 01/04/88  MODIFIED HEADER.

WITH REPORT; USE REPORT;

PROCEDURE C35508N IS

     TYPE NEWBOOL  IS  NEW BOOLEAN;
     FOR NEWBOOL USE ( FALSE => 24, TRUE => 32 );  -- N/A => ERROR.

BEGIN
     TEST ("C35508N", "CHECK THAT 'POS' AND 'VAL' YIELD THE " &
                      "CORRECT RESULTS WHEN THE PREFIX IS A " &
                      "FORMAL DISCRETE TYPE WHOSE ACTUAL PARAMETER " &
                      "IS A BOOLEAN TYPE WITH AN ENUMERATION " &
                      "REPRESENTATION CLAUSE" );

     DECLARE
          GENERIC
               TYPE BOOL IS (<>);
          PROCEDURE P (B : BOOL; I : INTEGER);

          PROCEDURE P (B : BOOL; I : INTEGER) IS
               SUBTYPE SBOOL IS BOOL
               RANGE BOOL'VAL (IDENT_INT(0)) .. BOOL'VAL (IDENT_INT(0));
          BEGIN
               IF BOOL'POS (B) /= I THEN
                    FAILED ( "WRONG POS FOR " &
                              BOOL'IMAGE (B) & " - 1" );
               END IF;
               IF BOOL'VAL (I) /= B THEN
                    FAILED ( "WRONG VAL FOR " &
                              INTEGER'IMAGE (I) & " - 1" );
               END IF;

               IF SBOOL'POS (B) /= I THEN
                    FAILED ( "WRONG POS FOR " &
                              BOOL'IMAGE (B) & " - 2" );
               END IF;

               IF SBOOL'VAL (I) /= B THEN
                    FAILED ( "WRONG VAL FOR " &
                              INTEGER'IMAGE (I) & " - 2" );
               END IF;
          END P;

          GENERIC
               TYPE BOOL IS (<>);
          PROCEDURE Q (B : BOOL; I : INTEGER);

          PROCEDURE Q (B : BOOL; I : INTEGER) IS
               SUBTYPE SBOOL IS BOOL
               RANGE BOOL'VAL (IDENT_INT(0)) .. BOOL'VAL (IDENT_INT(0));
          BEGIN
               BEGIN
                    IF BOOL'VAL (I) = B THEN
                         FAILED("BOOL'VAL OF " & INTEGER'IMAGE (I) &
                                " = " & BOOL'IMAGE (B) );

                    END IF;
                    FAILED ( "NO EXCEPTION RAISED FOR VAL OF " &
                              INTEGER'IMAGE (I) );
               EXCEPTION
                    WHEN CONSTRAINT_ERROR =>
                         NULL;
                    WHEN OTHERS =>
                         FAILED ( "WRONG EXCEPTION RAISED FOR VAL " &
                                  "OF " & INTEGER'IMAGE (I) );
               END;

               BEGIN
                    IF SBOOL'VAL (I) = B THEN
                         FAILED("SBOOL'VAL OF " & INTEGER'IMAGE (I) &
                                " = " & BOOL'IMAGE (B) );
                    END IF;
                    FAILED ( "NO EXCEPTION RAISED FOR VAL OF " &
                              INTEGER'IMAGE (I) & " WITH SBOOL" );
               EXCEPTION
                    WHEN CONSTRAINT_ERROR =>
                         NULL;
                    WHEN OTHERS =>
                         FAILED ( "WRONG EXCEPTION RAISED FOR VAL " &
                                  "OF " & INTEGER'IMAGE (I) &
                                  " WITH SBOOL" );
               END;
          END Q;

          PROCEDURE NP IS NEW P ( BOOL => NEWBOOL );
          PROCEDURE NQ IS NEW Q ( BOOL => NEWBOOL );
     BEGIN
          NP ( FALSE , 0 );
          NP ( TRUE , 1 );
          NQ ( FALSE , -1 );
          NQ ( TRUE , 2 );
     END;

     RESULT;
END C35508N;
