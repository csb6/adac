-- C87B37F.ADA

-- CHECK THAT AN IMPLICIT CONVERSION FROM UNIVERSAL INTEGER
-- IS NOT APPLIED IF THERE IS A LEGAL INTERPRETATION WITHOUT
-- THE IMPLICIT CONVERSION. 

-- DEFAULT PARAMETERS VS. INDEXING.

-- RFB 04/09/84
-- EG  05/31/84

WITH REPORT; USE REPORT;

PROCEDURE C87B37F IS

     PROCEDURE CHECK (B : BOOLEAN; S : STRING) IS
     BEGIN
          IF NOT B THEN 
               FAILED(S); 
          END IF;
     END;

BEGIN

     TEST ("C87B37F","CHECK THAT IMPLICIT CONVERSIONS ARE ONLY USED " &
                     "WHEN NECESSARY FOR UNIVERSAL INTEGER");

     DECLARE        -- CASES INVOLVING DEFAULT VS EXPLICIT PARAMETERS

          TYPE BOOL_BOOL IS ARRAY (BOOLEAN) OF BOOLEAN;
          TYPE INT_BOOL  IS ARRAY (INTEGER RANGE 0 .. 1) OF BOOLEAN;

          WHICH_FUNC1 : BOOLEAN;
          WHICH_FUNC2 : BOOL_BOOL;
          HOW_FUNC  : INTEGER;

          FUNCTION F (X : INTEGER := -1) RETURN BOOL_BOOL IS
          BEGIN
               HOW_FUNC := X;
               RETURN (OTHERS=>TRUE);
          END;

          FUNCTION F (X : INTEGER) RETURN BOOLEAN IS
          BEGIN
               HOW_FUNC := X;
               RETURN TRUE;
          END;

          FUNCTION ">" (X, Y : INTEGER) RETURN INTEGER IS
          BEGIN
               RETURN 6;
          END;

     BEGIN

          HOW_FUNC := 0;
          WHICH_FUNC1 := F(5 > 5); -- NO IMPLICIT CONVERSION; 5>5 IS
                                   -- INDEX; F'S ACTUAL PARAM DEFAULTS
                                   -- TO -1.
          CHECK(HOW_FUNC = -1, "CALLED F WRONG : DEFAULT #1");

          HOW_FUNC := 0;
          WHICH_FUNC2 := F(5 > 5); -- IMPLICIT CONVERSION; 5>5 IS PARAM
                                   -- TO F.
          CHECK(HOW_FUNC = 6,  "CALLED F WRONG : DEFAULT #2");

     END;

     RESULT;

END C87B37F;
