-- C45622A.ADA

-- OBJECTIVE:
--     FOR EXPONENTIATION OF FLOATING POINT TYPES, CHECK THAT
--     NUMERIC_ERROR (OR CONSTRAINT_ERROR) IS RAISED IF
--     MACHINE_OVERFLOWS IS TRUE AND THE RESULT IS OUTSIDE THE RANGE OF
--     THE BASE TYPE.  THIS TESTS DIGITS 5.

-- HISTORY:
--     BCB 02/09/88  CREATED ORIGINAL TEST.

WITH REPORT; USE REPORT;

PROCEDURE C45622A IS

     TYPE FLT IS DIGITS 5;

     F : FLT;

     FUNCTION EQUAL_FLT (ONE, TWO : FLT) RETURN BOOLEAN IS
     BEGIN
          RETURN ONE = TWO * FLT (IDENT_INT(1));
     END EQUAL_FLT;

BEGIN
     TEST ("C45622A", "FOR EXPONENTIATION OF FLOATING POINT TYPES, " &
                      "CHECK THAT NUMERIC_ERROR (OR CONSTRAINT_ERROR)" &
                      " IS RAISED IF MACHINE_OVERFLOWS IS TRUE AND " &
                      "THE RESULT IS OUTSIDE THE RANGE OF THE BASE " &
                      "TYPE.  THIS TESTS DIGITS 5");

     IF FLT'MACHINE_OVERFLOWS THEN
          BEGIN
               F := (FLT'BASE'LAST)**IDENT_INT (2);
               FAILED ("NEITHER NUMERIC_ERROR OR CONSTRAINT_ERROR " &
                       "WAS RAISED FOR EXPONENTIATION");
               IF NOT EQUAL_FLT(F,F) THEN
                    COMMENT ("DON'T OPTIMIZE F");
               END IF;
          EXCEPTION
               WHEN NUMERIC_ERROR =>
                    COMMENT ("NUMERIC_ERROR WAS RAISED FOR " &
                             "EXPONENTIATION");
               WHEN CONSTRAINT_ERROR =>
                    COMMENT ("CONSTRAINT_ERROR WAS RAISED FOR " &
                             "EXPONENTIATION");
               WHEN OTHERS =>
                    FAILED ("AN EXCEPTION OTHER THAN NUMERIC_ERROR " &
                            "OR CONSTRAINT_ERROR WAS RAISED FOR " &
                            "EXPONENTIATION");
          END;
     ELSE
          NOT_APPLICABLE ("THIS TEST IS NOT APPLICABLE DUE TO " &
                          "MACHINE_OVERFLOWS BEING FALSE");
     END IF;

     RESULT;
END C45622A;
