-- C4A006A.ADA

-- CHECK THAT CONSTRAINT_ERROR IS RAISED FOR A UNIVERSAL_INTEGER 
-- EXPRESSION CONTAINING AN EXPONENTIATION OPERATOR IF THE EXPONENT
-- HAS A NEGATIVE VALUE.

-- BAW 9/29/80
-- SPS 4/7/82
-- TBN 10/23/85     RENAMED FROM B4A006A-B.ADA. REVISED TO CHECK FOR
--                  CONSTRAINT_ERROR WHEN EXPONENT IS NEGATIVE IN
--                  A NONSTATIC CONTEXT.

WITH REPORT; USE REPORT;
PROCEDURE C4A006A IS

BEGIN 
     TEST ("C4A006A", "CHECK THAT A NEGATIVE EXPONENT IN " &
                      "UNIVERSAL_INTEGER EXPONENTIATION RAISES " &
                      "CONSTRAINT_ERROR");

     DECLARE
          B : BOOLEAN;
     BEGIN

          B := (1 ** IDENT_INT(-1)) = 1;
          FAILED ("EXCEPTION NOT RAISED");
          IF NOT B THEN
               FAILED ("(1 ** (-1)) /= 1");
          END IF;

     EXCEPTION
          WHEN CONSTRAINT_ERROR =>
               NULL;
          WHEN OTHERS =>
               FAILED ("WRONG EXCEPTION RAISED");
     END;     

     RESULT;
END C4A006A;
