-- C45621Y.DEP

-- OBJECTIVE:
--     CHECK ** AS FOLLOWS:
--     (A) X**0 = 1.0 FOR ALL X.
--     (B) X**1 = X FOR MODEL NUMBERS.
--     (C) X**(-1) IS IN SAME MODEL INTERVAL AS 1.0/X.
--     (D) X**N IS WITHIN A FACTOR OF (1.0+N*'EPSILON).
--     (E) X**N FOR LARGE N IS ACCEPTED.
--     (F) 2.0**-I IS ACCURATE FOR 1..30
--     TO BE REPEATED FOR 'DIGITS = 5 .. 30
--     MODIFY BY ADDING 1'S TO F_LARGE AND ZEROS TO EPS

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS WHICH SUPPORT A
--     VALUE OF DIGITS GREATER THAN OR EQUAL TO 29.

--     IF 'DIGITS 29' IS NOT SUPPORTED, THEN THE DECLARATION OF 'TYPE F'
--     MUST BE REJECTED.

-- HISTORY:
--     BAW 09/17/80 CREATED ORIGINAL TEST.
--     JBG 11/01/80
--     DHH 10/20/87 SHORTENED LINES CONTAINING MORE THAN 72 CHARACTERS.

WITH REPORT;
PROCEDURE C45621Y IS

     USE REPORT;

     TYPE F IS DIGITS 29;                       -- N/A => ERROR.

     ZERO, ONE, HUNDRED, FIVE : INTEGER := 10;
     TENTH     : F := 0.0;
     MIN_TENTH : F := 0.0;
     F_ONE     : F := 0.0;
     F_LARGE   : F := 0.0;
     TEN       : F := 0.0;
     MIN_TEN   : F := 0.0;
     D         : F := 0.0;
     D5        : F := 0.0;
     D100      : F := 0.0;
     EPS       : F := 0.0;
BEGIN
     TEST("C45621Y", "CHECK FLOATING EXPONENTIATION");

     IF EQUAL (2,2) THEN
          ZERO    := 0;
          ONE     := 1;
          HUNDRED := 100;
          FIVE    := 5;
          TENTH   := 0.1;
          D       := 1.01;
     END IF;

     IF EQUAL (1,1) THEN
          MIN_TENTH := -TENTH;
          F_ONE     := 1.0;
          F_LARGE   := 16#0.FFFFFFFFFFFFFFFFFFFFFFFF8#E97;  -- F'LARGE
          TEN       := TENTH ** (-ONE);
          MIN_TEN   := MIN_TENTH ** (-ONE);
          D5        := D ** 5;
          D100      := D ** 100;
          EPS       := 16#0.1#E-23;     -- F'EPSILON
     END IF;

     IF TENTH ** ZERO /= 1.0 OR MIN_TENTH ** ZERO /= 1.0 THEN
          FAILED( "X ** 0 /= 1.0" );
     END IF;  --(A)

     IF F_ONE ** ONE /= 1.0 OR
              F_LARGE ** ONE /= 16#0.FFFFFFFFFFFFFFFFFFFFFFFF8#E97 THEN
          FAILED( "X ** 1 /= X" );
     END IF;  --(B)

     IF ABS(TEN-10.0) > 11.0 * EPS OR
        ABS(MIN_TEN+10.0) > 11.0 * EPS THEN
          FAILED( "X ** (-1) TOO FAR FROM 1.0/X" );
     END IF;  --(C)

     IF ABS(D5 - 1.0510100501) > 10.0 * EPS THEN
          FAILED( "X ** N NOT ACCURATE ENOUGH" );
     END IF; --(D)

     IF ABS(D100 - 2.7048131) > 0.01 THEN
          FAILED( "X ** 100 NOT ACCURATE ENOUGH" );
     END IF; --(E)

     DECLARE
        TYPE TABLE IS ARRAY(1..30) OF F;

        MATRIX : TABLE :=
                (0.5,
                 0.25,
                 0.125,
                 0.062_5,
                 0.031_25,
                 0.015_625,
                 0.007_812_5,
                 0.003_906_25,
                 0.001_953_125,
                 0.000_976_562_5,
                 0.000_488_281_25,
                 0.000_244_140_625,
                 0.000_122_070_312_5,
                 0.000_061_035_156_25,
                 0.000_030_517_578_125,
                 0.000_015_258_789_062_5,
                 0.000_007_629_394_531_25,
                 0.000_003_814_697_265_625,
                 0.000_001_907_348_632_812_5,
                 0.000_000_953_674_316_406_25,
                 0.000_000_476_837_158_203_125,
                 0.000_000_238_418_579_101_562_5,
                 0.000_000_119_209_289_550_781_25,
                 0.000_000_059_604_644_775_390_625,
                 0.000_000_029_802_322_387_695_312_5,
                 0.000_000_014_901_161_193_847_656_25,
                 0.000_000_007_450_580_596_923_828_125,
                 0.000_000_003_725_290_298_461_914_062_5,
                 0.000_000_001_862_645_149_230_957_031_25,
                 0.000_000_000_931_322_574_615_478_515_625);

         I : INTEGER := 1;
         EQUAL : BOOLEAN := TRUE;

     BEGIN

         WHILE I <= 30 AND EQUAL LOOP
               IF MATRIX(I) /= F(2.0) ** (-I)
               THEN FAILED("NOT ALL NEGATIVE POWERS ARE REPRESENTED " &
                           " EXACTLY ");
                    EQUAL := FALSE;
               ELSE I := I+1;
               END IF;
         END LOOP;

     END;    --(F)

     RESULT;
END C45621Y;
