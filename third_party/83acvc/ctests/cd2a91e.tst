-- CD2A91E.TST

-- OBJECTIVE:
--     CHECK THAT IF A SIZE CLAUSE IS GIVEN FOR A
--     TASK TYPE, THEN OPERATIONS ON VALUES OF SUCH A TYPE ARE
--     NOT AFFECTED BY THE REPRESENTATION CLAUSE WHEN THE TYPE IS
--     PASSED AS A GENERIC ACTUAL PARAMETER.

-- MACRO SUBSTITUTION:
--     $TASK_SIZE IS THE NUMBER OF BITS NEEDED BY THE IMPLEMENTATION TO
--     HOLD ANY POSSIBLE OBJECT OF THE TASK TYPE "BASIC_TYPE".

-- HISTORY:
--     BCB 09/10/87  CREATED ORIGINAL TEST.
--     RJW 05/12/89  MODIFIED CHECKS INVOLVING 'SIZE ATTRIBUTE.
--                   REMOVED APPLICABILTY CRITERIA.

WITH REPORT; USE REPORT;
PROCEDURE CD2A91E IS

     BASIC_SIZE : CONSTANT := $TASK_SIZE;
     B : BOOLEAN;

     TASK TYPE BASIC_TYPE IS
          ENTRY HERE(NUM : IN OUT INTEGER);
     END BASIC_TYPE;

     FOR BASIC_TYPE'SIZE USE BASIC_SIZE;

     TASK BODY BASIC_TYPE IS
     BEGIN
          SELECT
               ACCEPT HERE(NUM : IN OUT INTEGER) DO
                    NUM := IDENT_INT (0);
               END HERE;
          OR
               TERMINATE;
          END SELECT;
     END BASIC_TYPE;

BEGIN

     TEST ("CD2A91E", "CHECK THAT IF A SIZE CLAUSE  " &
                      "IS GIVEN FOR A TASK TYPE, THEN " &
                      "OPERATIONS ON VALUES OF SUCH A TYPE ARE NOT " &
                      "AFFECTED BY THE REPRESENTATION CLAUSE WHEN " &
                      "THE TYPE IS PASSED AS A GENERIC ACTUAL " &
                      "PARAMETER");

     DECLARE

          GENERIC

               TYPE GENERAL_PURPOSE IS LIMITED PRIVATE;

          FUNCTION FUNC RETURN BOOLEAN;

          FUNCTION FUNC RETURN BOOLEAN IS

               TYPE REC_TYPE IS RECORD
                    COMPF : GENERAL_PURPOSE;
               END RECORD;

               TYPE ARRAY_TYPE IS ARRAY (0 .. 3) OF GENERAL_PURPOSE;

               CHREC : REC_TYPE;

               CHARRAY : ARRAY_TYPE;

               CHECK_TASK : GENERAL_PURPOSE;

               CHECK_PARAM : GENERAL_PURPOSE;

               VAL : INTEGER := 1;

               PROCEDURE PROC (CP : GENERAL_PURPOSE;
                               CV : IN OUT INTEGER) IS

               BEGIN

                    IF CP'SIZE < IDENT_INT (BASIC_SIZE) THEN
                         FAILED ("INCORRECT VALUE FOR CP'SIZE");
                    END IF;

               END PROC;

          BEGIN -- FUNC.

               PROC (CHECK_PARAM,VAL);

               IF GENERAL_PURPOSE'SIZE /= IDENT_INT (BASIC_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR GENERAL_PURPOSE'SIZE");
               END IF;

               IF CHECK_TASK'SIZE < IDENT_INT (BASIC_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR CHECK_TASK'SIZE");
               END IF;

               IF CHARRAY (1)'SIZE < IDENT_INT (BASIC_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR CHARRAY (1)'SIZE");
               END IF;

               IF CHREC.COMPF'SIZE < IDENT_INT (BASIC_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR CHREC.COMPF'SIZE");
               END IF;

               RETURN TRUE;

          END FUNC;

          FUNCTION NEWFUNC IS NEW FUNC(BASIC_TYPE);

          BEGIN
               B := NEWFUNC;
          END;

     RESULT;
END CD2A91E;
