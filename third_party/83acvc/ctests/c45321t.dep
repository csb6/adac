-- C45321T.DEP

-- OBJECTIVE:
--     TESTS ON ADDING OPERATORS AS 12 SUBTESTS.
--       (A) THE OPERATOR +, A, B, AND A+B ALL MODEL NUMBERS.
--       (B) THE OPERATOR +, A, B MODEL NUMBERS A+B NOT.
--       (C) THE OPERATOR +, A MODEL NUMBER, B, A+B NOT.
--       (D) THE OPERATOR +, A, B, AND A+B ALL MODEL NUMBERS OF
--           DIFFERENT SUBTYPES.
--       (E) THE OPERATOR +, A, B MODEL NUMBERS A+B NOT, WITH
--           DIFFERENT SUBTYPES.
--       (F) THE OPERATOR +, A MODEL NUMBER, B, A+B NOT, WITH
--           DIFFERENT SUBTYPES.
--       (G) THE OPERATOR -, A, B, AND A-B ALL MODEL NUMBERS.
--       (H) THE OPERATOR -, A, B MODEL NUMBERS A-B NOT.
--       (I) THE OPERATOR -, A MODEL NUMBER, B, A-B NOT.
--       (J) THE OPERATOR -, A, B, AND A-B ALL MODEL NUMBERS OF
--           DIFFERENT SUBTYPES.
--       (K) THE OPERATOR -, A, B MODEL NUMBERS A-B NOT, WITH
--           DIFFERENT SUBTYPES.
--       (L) THE OPERATOR -, A MODEL NUMBER, B, A-B NOT, WITH
--           DIFFERENT SUBTYPES.
--      THIS TEST IS TO BE REPEATED FOR 'DIGITS = 5 .. 29.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS WHICH SUPPORT A
--     VALUE OF DIGITS GREATER THAN OR EQUAL TO 24.

--     IF 'DIGITS 24' IS NOT SUPPORTED, THEN THE DECLARATION OF 'TYPE F'
--     MUST BE REJECTED.

-- HISTORY:
--     BAW 09/17/80
--     JBG 11/10/82
--     JBG 07/29/84
--     JBG 10/12/86 ADD CODE TO ENSURE RUN-TIME ADDING OPERATORS ARE
--              USED BY OPTIMIZING COMPILERS; REMOVE -B FROM TEST NAME.
--     DHH 01/11/88 ADDED APPLICABILITY CRITERIA AND STANDARD HEADER.

WITH REPORT;
PROCEDURE C45321T IS

     USE REPORT;

     N : CONSTANT INTEGER := 24;      -- NUMBER OF DIGITS
     TYPE F IS DIGITS N;             -- MANTISSA BITS: 81  N/A => ERROR.
     SUBTYPE F1 IS F DIGITS N-1;     -- MANTISSA BITS: 78
     SUBTYPE F2 IS F DIGITS N-2;     -- MANTISSA BITS: 75
BEGIN TEST ("C45321T", "CHECK FLOATING POINT ADDING OPERATORS");
      DECLARE  --(A)
              A : F := 16#0.A000000000000000179A#E10;
              B : F := 16#0.400000000000000000CE8#E10;
              C : F := 0.0;
              D : F := A + B;

      BEGIN COMMENT("(A) CHECK +, A, B, A+B ALL MODEL NUMBERS " &
                    "FOR FLOATING POINT");

            IF NOT EQUAL(3,3) THEN      -- NEVER TRUE
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A + B;
            END IF;

            IF C /= 16#0.E00000000000000018688#E10
            OR D /= 16#0.E00000000000000018688#E10
            THEN
                 FAILED("THE RESULT OF THE ADDITION IS INCORRECT");
            END IF;

      END;  --(A)

      DECLARE  --(B)
              A : F := 16#0.A0000000000000000199#E10;
              B : F := 16#0.A0000000000000000001#E9;
              C : F := 0.0;
              D : F := A + B;

      BEGIN COMMENT("(B) CHECK +, A, B MODEL NUMBERS " &
                 " A+B NOT (FOR FLOATING POINT)");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A + B;
            END IF;

            IF (C < 16#0.AA000000000000000199#E10)
            OR (C > 16#0.AA0000000000000001998#E10)
            OR (D < 16#0.AA000000000000000199#E10)
            OR (D > 16#0.AA0000000000000001998#E10)
            THEN
                 FAILED("THE RESULT OF THE ADDITION IS INCORRECT");
            END IF;

      END;  --(B)

      DECLARE  --(C)
              A : F := 16#0.A000000000000000019A#;
              B : F := 16#0.A000000000000000019BC#;
              C : F := 0.0;
              D : F := A + B;

      BEGIN COMMENT("(C) CHECK +, A MODEL NUMBER B, A+B NOT "&
                 " (FOR FLOATING POINT)");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A + B;
            END IF;

            IF (C < 16#1.40000000000000000335#)
            OR (C > 16#1.40000000000000000336#)
            OR (D < 16#1.40000000000000000335#)
            OR (D > 16#1.40000000000000000336#)
            THEN
                 FAILED("THE RESULT OF THE ADDITION IS INCORRECT");
            END IF;

      END;  --(C)

      DECLARE  --(D)

              A : F1 := 16#0.A0000000000000000018#;
              B : F2 := 16#0.A000000000000000006#;
              C : F1 := 0.0;
              D : F1 := A + B;

      BEGIN COMMENT("(D) CHECK +, A, B, A+B ALL MODEL NUMBERS " &
                 " (FOR FLOATING POINT) WITH DIFFERENT SUBTYPES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A + B;
            END IF;

            IF C /= 16#1.40000000000000000078#
            OR D /= 16#1.40000000000000000078#
            THEN
                 FAILED("THE RESULT OF THE ADDITION IS INCORRECT");
            END IF;

      END;  --(D)

      DECLARE  --(E)

              A : F1 := 16#0.A000000000000000001C#;
              B : F2 := 16#0.A00000000000000000C#;
              C : F1 := 0.0;
              D : F1 := A + B;

      BEGIN COMMENT("(E) CHECK +, A, B MODEL NUMBERS, A+B NOT " &
                 " (FOR FLOATING POINT) WITH DIFFERENT SUBTYPES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A + B;
            END IF;

            IF (C < 16#1.4000000000000000000D8#)
            OR (C > 16#1.400000000000000000E#)
            OR (D < 16#1.4000000000000000000D8#)
            OR (D > 16#1.400000000000000000E#)
            THEN
                 FAILED("THE RESULT OF THE ADDITION IS INCORRECT");
            END IF;

      END;  --(E)

      DECLARE  --(F)
              A : F1 := 16#0.A000000000000000001C#;
              B : F2 := 16#0.A00000000000000000CD#;
              C : F1 := 0.0;
              D : F1 := A + B;

      BEGIN COMMENT("(F) CHECK +, A MODEL NUMBER, B, A+B NOT " &
                 " (FOR FLOATING POINT) WITH DIFFERENT SUBTYPES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A + B;
            END IF;

            IF (C < 16#1.400000000000000000D8#)
            OR (C > 16#1.400000000000000001#)
            OR (D < 16#1.400000000000000000D8#)
            OR (C > 16#1.400000000000000001#)
            THEN
                 FAILED("THE RESULT OF THE ADDITION IS INCORRECT");
            END IF;

      END;  --(F)

      DECLARE  --(G)
              A : F := 16#0.F0000000000000000269#E10;
              B : F := 16#0.400000000000000000CE8#E10;
              C : F := 0.0;
              D : F := A - B;

      BEGIN COMMENT("(G) CHECK -, A, B, A-B ALL MODEL NUMBERS " &
                 " FOR FLOATING POINT");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A - B;
            END IF;

            IF C /= 16#0.B000000000000000019A8#E10
            OR D /= 16#0.B000000000000000019A8#E10
            THEN
                 FAILED("THE RESULT OF THE SUBTRACTION IS INCORRECT");
            END IF;

      END;  --(G)

      DECLARE  --(H)
              A : F := 16#0.A000000000000000179B8#;
              B : F := 16#0.30000000000000000468A#;
              C : F := 0.0;
              D : F := A - B;

      BEGIN COMMENT("(H) CHECK -, A, B, MODEL NUMBERS, A-B NOT " &
                 " (FOR FLOATING POINT)");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A - B;
            END IF;

            IF (C < 16#0.70000000000000001330C#)
            OR (C > 16#0.700000000000000013331#)
            OR (D < 16#0.70000000000000001330C#)
            OR (D > 16#0.700000000000000013331#)
            THEN
                 FAILED("THE RESULT OF THE SUBTRACTION IS INCORRECT");
            END IF;

     END;  --(H)

      DECLARE  --(I)
              A : F := 16#0.A000000000000000179B8#;
              B : F := 16#0.400000000000000008ACE#;
              C : F := 0.0;
              D : F := A - B;

      BEGIN COMMENT("(I) CHECK -, A MODEL NUMBER, B, A-B NOT " &
                 " (FOR FLOATING POINT)");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A - B;
            END IF;

            IF (C < 16#0.60000000000000000EEE8#)
            OR (C > 16#0.60000000000000000EEEC#)
            OR (D < 16#0.60000000000000000EEE8#)
            OR (D > 16#0.60000000000000000EEEC#)
            THEN
                 FAILED("THE RESULT OF THE SUBTRACTION IS INCORRECT");
            END IF;

      END;  --(I)

      DECLARE  --(J)
              A : F1 := 16#0.C000000000000000003C#;
              B : F2 := 16#0.20000000000000000008#;
              C : F1 := 0.0;
              D : F1 := A - B;

      BEGIN COMMENT("(J) CHECK -, A, B, A-B ALL MODEL NUMBERS " &
                 " (FOR FLOATING POINT) WITH DIFFERENT SUBTYPES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A - B;
            END IF;

            IF C /= 16#0.A0000000000000000034#
            OR D /= 16#0.A0000000000000000034#
            THEN
                 FAILED("THE RESULT OF THE SUBTRACTION IS INCORRECT");
            END IF;

      END;  --(J)

      DECLARE  --(K)
              A : F1 := 16#A.B0000000000000001FC#;
              B : F2 := 16#0.700000000000000000B#;
              C : F1 := 0.0;
              D : F1 := A - B;

      BEGIN COMMENT("(K) CHECK -, A, B MODEL NUMBERS, A-B NOT " &
                 " (FOR FLOATING POINT) WITH DIFFERENT SUBTYPES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A - B;
            END IF;

            IF (C < 16#A.40000000000000001F#)
            OR (C > 16#A.40000000000000001F4#)
            OR (D < 16#A.40000000000000001F#)
            OR (C > 16#A.40000000000000001F4#)
            THEN
                 FAILED("THE RESULT OF THE SUBTRACTION IS INCORRECT");
            END IF;

      END;  --(K)

      DECLARE  --(L)
              A : F1 := 16#0.A000000000000000001C#;
              B : F2 := -16#0.A00000000000000000CD#;
              C : F1 := 0.0;
              D : F1 := A - B;

      BEGIN COMMENT("(L) CHECK -, A MODEL NUMBER, B, A-B NOT " &
                 " (FOR FLOATING POINT) WITH DIFFERENT SUBTYPES");

            IF NOT EQUAL(3,3) THEN      -- NEVER EXECUTED.
                 A := 0.0;
            END IF;

            IF EQUAL(2,2) THEN
                 C := A - B;
            END IF;

            IF (C < 16#1.400000000000000000D8#)
            OR (C > 16#1.400000000000000001#)
            OR (D < 16#1.400000000000000000D8#)
            OR (C > 16#1.400000000000000001#)
            THEN
                 FAILED("THE RESULT OF THE SUBTRACTION IS INCORRECT");
            END IF;

      END;  --(L)

      RESULT;

END C45321T;
