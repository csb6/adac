-- C53005A.ADA

-- CHECK THAT CONTROL FLOWS CORRECTLY IN BASIC NON-NESTED IF_STATEMENTS
--    THAT HAVE NO ELSIF OR ELSE PARTS.

-- CHECK IF_STATEMENTS WITH STATIC CONDITIONS.

-- DCB 3/9/80
-- JRK 7/7/80
-- SPS 3/3/83

WITH REPORT;
PROCEDURE C53005A IS

     USE REPORT;

     I1 : CONSTANT INTEGER := 1;
     I9 : CONSTANT INTEGER := 9;
     BT : CONSTANT BOOLEAN := TRUE;
     BF : CONSTANT BOOLEAN := FALSE;
     FLOW_COUNT : INTEGER;

BEGIN
     TEST ("C53005A","CONTROL FLOWS CORRECTLY IN BASIC NON-NESTED " &
           "IF_STATEMENTS WITH STATIC CONDITIONS");

     FLOW_COUNT := 0;

     -- CHECK THAT FALSE CONDITIONS SKIP THEN STATEMENTS.

     IF FALSE THEN
          FAILED("STATIC BOOLEAN LITERAL FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF BF THEN
          FAILED("STATIC BOOLEAN CONSTANT FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF I9 < 5 THEN
          FAILED("STATIC SIMPLE RELATION FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF BF AND I9 < 5 THEN
          FAILED("STATIC LOGICAL EXPRESSION FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF BT AND THEN I9 < 5 THEN
          FAILED("STATIC LOGICAL EXPRESSION2 FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF BF AND THEN I1 < 5 THEN
          FAILED("STATIC LOGICAL EXPRESSION3 FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF BF OR ELSE I9 < 5 THEN
          FAILED("STATIC LOGICAL EXPRESSION4 FALSE CONDITION");
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     -- CHECK THAT TRUE CONDITIONS INITIATE THEN STATEMENTS.

     IF TRUE THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L1;
     END IF;
     FAILED("STATIC BOOLEAN LITERAL TRUE CONDITION");
<<L1>> NULL;

     IF BT THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L2;
     END IF;
     FAILED("STATIC BOOLEAN CONSTANT TRUE CONDITION");
<<L2>> NULL;

     IF I1 < 5 THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L3;
     END IF;
     FAILED("STATIC SIMPLE RELATION TRUE CONDITION");
<<L3>> NULL;

     IF BT AND I1 < 5 THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L4;
     END IF;
     FAILED("STATIC LOGICAL EXPRESSION TRUE CONDITION");
<<L4>> NULL;

     IF BT AND THEN I1 < 5 THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L5;
     END IF;
     FAILED("STATIC LOGICAL EXPRESSION2 TRUE CONDITION");
<<L5>> NULL;

     IF BT OR ELSE I9 < 5 THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L6;
     END IF;
     FAILED("STATIC LOGICAL EXPRESSION3 TRUE CONDITION");
<<L6>> NULL;

     IF BF OR ELSE I1 < 5 THEN
          FLOW_COUNT := FLOW_COUNT + 1;
          GOTO L7;
     END IF;
     FAILED("STATIC LOGICAL EXPRESSION4 TRUE CONDITION");
<<L7>> NULL;

     -- CHECK THAT THEN STATEMENTS ARE COMPLETED.

     IF BT THEN
          FLOW_COUNT := FLOW_COUNT + 1;
     END IF;

     -- CHECK OVERALL CONTROL FLOW FOR NON-NULL ACTIONS.

     IF FLOW_COUNT /= 15 THEN
          FAILED("INCORRECT FLOW_COUNT VALUE");
     END IF;

     -- CHECK NULL THEN STATEMENTS.

     IF TRUE THEN
          NULL;
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF FALSE THEN
          NULL;
     END IF;
     FLOW_COUNT := FLOW_COUNT + 1;

     IF FLOW_COUNT /= 17 THEN
          FAILED("NULL ACTION ALTERED FLOW_COUNT");
     END IF;

     RESULT;
END C53005A;
