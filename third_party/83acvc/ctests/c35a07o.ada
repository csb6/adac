-- C35A07O.ADA

-- CHECK THAT FOR FIXED POINT TYPES THE FIRST AND LAST ATTRIBUTES YIELD
-- CORRECT VALUES.

-- CASE O: 'MANTISSA = SYSTEM.MAX_MANTISSA, FOR GENERICS.

-- WRG 8/26/86

WITH REPORT; USE REPORT;
WITH SYSTEM; USE SYSTEM;
PROCEDURE C35A07O IS

     MM            : CONSTANT := MAX_MANTISSA;
     FLOOR_MM_HALF : CONSTANT := MM / 2;
     CEIL_MM_HALF  : CONSTANT := MM - FLOOR_MM_HALF;

     -- THE NAME OF EACH TYPE OR SUBTYPE ENDS WITH THAT TYPE'S
     -- 'MANTISSA VALUE.

     TYPE LEFT_OUT_MM    IS
          DELTA 2.0 ** (-(MM+1))
          RANGE -(2.0 ** (-1) ) .. 2.0 ** (-1);
     TYPE LEFT_EDGE_MM   IS
          DELTA 2.0 ** (-MM)
          RANGE -1.0 .. 1.0;
     TYPE MIDDLE_MM      IS
          DELTA 2.0 ** (-CEIL_MM_HALF)
          RANGE -(2.0 ** FLOOR_MM_HALF) .. 2.0 ** FLOOR_MM_HALF;
     TYPE RIGHT_EDGE_MM  IS
          DELTA 1.0
          RANGE -(2.0 ** MM) .. 2.0 ** MM;
     TYPE RIGHT_OUT_MM   IS
          DELTA 2.0
          RANGE -(2.0 ** (MM+1)) .. 2.0 ** (MM+1);

     -------------------------------------------------------------------

     SUBTYPE ST_LEFT_OUT_MM_LESS_1 IS LEFT_OUT_MM
          DELTA 2.0 ** (-MM);
               -- 'MANTISSA = MM - 1.
     SUBTYPE ST_LEFT_OUT_MM_HALF   IS LEFT_EDGE_MM
          DELTA 2.0 ** (-MM)
          RANGE LEFT_EDGE_MM ( -(2.0 ** (-FLOOR_MM_HALF)) ) ..
                IDENT_INT (1) * LEFT_EDGE_MM ( 2.0 ** (-FLOOR_MM_HALF));
               -- 'MANTISSA = CEIL_MM_HALF.
     SUBTYPE ST_RIGHT_EDGE_MM_HALF IS MIDDLE_MM
          DELTA 1.0;
               -- 'MANTISSA = FLOOR_MM_HALF.
     SUBTYPE ST_RIGHT_OUT_MM_HALF  IS RIGHT_EDGE_MM
          DELTA 2.0 ** FLOOR_MM_HALF;
               -- 'MANTISSA = CEIL_MM_HALF.
     SUBTYPE ST_RIGHT_OUT_M1       IS RIGHT_OUT_MM
          DELTA 2.0 RANGE -4.0 .. 4.0;
               -- 'MANTISSA = 1.

     -------------------------------------------------------------------

     GENERIC
          TYPE T IS DELTA <>;
     PROCEDURE INEXACT_CHECK (NAME : STRING);

     PROCEDURE INEXACT_CHECK (NAME : STRING) IS
     BEGIN
          IF T'FIRST > -T'LARGE THEN
               FAILED (NAME & "'FIRST > -" & NAME & "'LARGE");
          END IF;

          IF T'LAST  <  T'LARGE THEN
               FAILED (NAME & "'LAST  <  " & NAME & "'LARGE");
          END IF;
     END INEXACT_CHECK;

     -------------------------------------------------------------------

     PROCEDURE CHECK_LEFT_OUT_MM   IS NEW INEXACT_CHECK (LEFT_OUT_MM  );
     PROCEDURE CHECK_LEFT_EDGE_MM  IS NEW INEXACT_CHECK (LEFT_EDGE_MM );
     PROCEDURE CHECK_MIDDLE_MM     IS NEW INEXACT_CHECK (MIDDLE_MM    );
     PROCEDURE CHECK_RIGHT_EDGE_MM IS NEW INEXACT_CHECK (RIGHT_EDGE_MM);
     PROCEDURE CHECK_RIGHT_OUT_MM  IS NEW INEXACT_CHECK (RIGHT_OUT_MM );
     PROCEDURE CHECK_ST_LEFT_OUT_MM_LESS_1
                           IS NEW INEXACT_CHECK (ST_LEFT_OUT_MM_LESS_1);
     PROCEDURE CHECK_ST_LEFT_OUT_MM_HALF
                           IS NEW INEXACT_CHECK (ST_LEFT_OUT_MM_HALF  );
     PROCEDURE CHECK_ST_RIGHT_EDGE_MM_HALF
                           IS NEW INEXACT_CHECK (ST_RIGHT_EDGE_MM_HALF);
     PROCEDURE CHECK_ST_RIGHT_OUT_MM_HALF
                           IS NEW INEXACT_CHECK (ST_RIGHT_OUT_MM_HALF );
     PROCEDURE CHECK_ST_RIGHT_OUT_M1
                           IS NEW INEXACT_CHECK (ST_RIGHT_OUT_M1      );

BEGIN

     TEST ("C35A07O", "CHECK THAT FOR FIXED POINT TYPES THE FIRST " &
                      "AND LAST ATTRIBUTES YIELD CORRECT VALUES - " &
                      "'MANTISSA = SYSTEM.MAX_MANTISSA, GENERICS");

     COMMENT ("VALUE OF SYSTEM.MAX_MANTISSA IS" &
              POSITIVE'IMAGE(MAX_MANTISSA));

     CHECK_LEFT_OUT_MM           ("LEFT_OUT_MM");
     CHECK_LEFT_EDGE_MM          ("LEFT_EDGE_MM");
     CHECK_MIDDLE_MM             ("MIDDLE_MM");
     CHECK_RIGHT_EDGE_MM         ("RIGHT_EDGE_MM");
     CHECK_RIGHT_OUT_MM          ("RIGHT_OUT_MM");
     CHECK_ST_LEFT_OUT_MM_LESS_1 ("ST_LEFT_OUT_MM_LESS_1");
     CHECK_ST_LEFT_OUT_MM_HALF   ("ST_LEFT_OUT_MM_HALF");
     CHECK_ST_RIGHT_EDGE_MM_HALF ("ST_RIGHT_EDGE_MM_HALF");
     CHECK_ST_RIGHT_OUT_MM_HALF  ("ST_RIGHT_OUT_MM_HALF");
     CHECK_ST_RIGHT_OUT_M1       ("ST_RIGHT_OUT_M1");

     RESULT;

END C35A07O;
