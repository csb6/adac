-- C35505A.ADA

-- OBJECTIVE:
--     CHECK THAT CONSTRAINT_ERROR IS RAISED FOR 'SUCC AND 'PRED,
--     IF THE RETURNED VALUES WOULD BE OUTSIDE OF THE BASE TYPE,
--     FOR USER-DEFINED ENUMERATION TYPES.

-- HISTORY:
--     DAT 03/18/81  CREATED ORIGINAL TEST.
--     JET 01/05/88  UPDATED HEADER FORMAT AND ADDED CODE TO PREVENT
--                   OPTIMIZATION.

WITH REPORT; USE REPORT;

PROCEDURE C35505A IS

     TYPE B IS ('Z', 'X', Z, X);

     SUBTYPE C IS B RANGE 'X' .. Z;

     V : B;

BEGIN
     TEST ("C35505A", "CHECK THAT 'SUCC AND 'PRED RAISE " &
           "CONSTRAINT_ERROR FOR USER-DEFINED ENUMERATION TYPES");

     BEGIN
          V := B'PRED(B'SUCC (X));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR SUCC 1");

          IF EQUAL (B'POS(V), B'POS(V)) THEN
               COMMENT ("NO EXCEPTION OCCURRED");
          END IF;

     EXCEPTION
          WHEN CONSTRAINT_ERROR => NULL;
          WHEN OTHERS => FAILED ("WRONG EXCEPTION RAISED 1");
     END;

     BEGIN
          V := B'SUCC(B'PRED ('Z'));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR PRED 2");

          IF EQUAL (B'POS(V), B'POS(V)) THEN
               COMMENT ("NO EXCEPTION OCCURRED");
          END IF;

     EXCEPTION
          WHEN CONSTRAINT_ERROR => NULL;
          WHEN OTHERS => FAILED ("WRONG EXCEPTION RAISED 2");
     END;

     BEGIN
          V := B'PRED(C'SUCC (X));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR SUCC 3");

          IF EQUAL (B'POS(V), B'POS(V)) THEN
               COMMENT ("NO EXCEPTION OCCURRED");
          END IF;

     EXCEPTION
          WHEN CONSTRAINT_ERROR => NULL;
          WHEN OTHERS => FAILED ("WRONG EXCEPTION RAISED 3");
     END;

     BEGIN
          V := B'SUCC(C'PRED ('Z'));
          FAILED ("CONSTRAINT_ERROR NOT RAISED FOR PRED 4");

          IF EQUAL (B'POS(V), B'POS(V)) THEN
               COMMENT ("NO EXCEPTION OCCURRED");
          END IF;

     EXCEPTION
          WHEN CONSTRAINT_ERROR => NULL;
          WHEN OTHERS => FAILED ("WRONG EXCEPTION RAISED 4");
     END;

     RESULT;
END C35505A;
