-- C87B37C.ADA

-- CHECK THAT AN IMPLICIT CONVERSION FROM UNIVERSAL  INTEGER
-- IS NOT APPLIED IF THERE IS A LEGAL INTERPRETATION WITHOUT
-- THE IMPLICIT CONVERSION. 

-- INDEXING AND SLICING

-- RFB 04/09/84
-- EG  05/31/84

WITH REPORT; USE REPORT;

PROCEDURE C87B37C IS

     FUNCTION "<" (L, R : INTEGER) RETURN INTEGER IS
     BEGIN
          RETURN 4;
     END "<";

     PROCEDURE CHECK (B : BOOLEAN; S : STRING) IS
     BEGIN
          IF NOT B THEN 
               FAILED(S); 
          END IF;
     END;

BEGIN

     TEST ("C87B37C","CHECK THAT IMPLICIT CONVERSIONS ARE ONLY USED " &
                     "WHEN NECESSARY FOR UNIVERSAL INTEGER");

     DECLARE        -- CASES INVOLVING INDEXING AND SLICING

          SUBTYPE S12 IS STRING(1 .. 2);

          WHICH_FUNC1C : CHARACTER;
          WHICH_FUNC1S : S12;

          TYPE NEW_CHAR IS NEW CHARACTER;
          TYPE NS12 IS ARRAY(POSITIVE RANGE 1 .. 2) OF NEW_CHAR;

          WHICH_FUNC2C : NEW_CHAR;
          WHICH_FUNC2S : NS12;

          FUNCTION F (X : BOOLEAN) RETURN S12 IS
          BEGIN
               RETURN "11";
          END;

          FUNCTION F (X : INTEGER) RETURN S12 IS
          BEGIN
               RETURN "22";
          END;

          FUNCTION F (X : INTEGER) RETURN NS12 IS
          BEGIN
               RETURN "33";
          END;

     BEGIN

          WHICH_FUNC1C := F(5 < 5)(1);       -- NO IMPLICIT CONVERSION
          CHECK(WHICH_FUNC1C = '1', "CALLED WRONG F : INDEXED #1");

          WHICH_FUNC2C := F(5 < 5)(2);       -- IMPLICIT CONVERSION
          CHECK(WHICH_FUNC2C = '3', "CALLED WRONG F : INDEXED #2");

          WHICH_FUNC1S := F(5 < 5)(1 .. 2);  -- NO IMPLICIT CONVERSION
          CHECK(WHICH_FUNC1S = "11", "CALLED WRONG F : SLICE #1");

          WHICH_FUNC2S := F(5 < 5)(1 .. 2);  -- IMPLICIT CONVERSION
          CHECK(WHICH_FUNC2S = "33", "CALLED WRONG F : SLICE #2");

     END;

     RESULT;

END C87B37C;
