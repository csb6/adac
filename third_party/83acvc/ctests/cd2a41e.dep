-- CD2A41E.DEP

-- OBJECTIVE:
--     CHECK THAT IF A SIZE CLAUSE GIVEN FOR A FLOATING POINT
--     TYPE IS ALLOWED TO SPECIFY OTHER THAN A DEFAULT SIZE, THEN
--     OPERATIONS ON VALUES OF SUCH A TYPE ARE NOT AFFECTED BY THE
--     SIZE CLAUSE, WHEN THE TYPE IS PASSED AS AN ACTUAL GENERIC
--     PARAMETER.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE ONLY TO IMPLEMENTATIONS THAT ALLOW
--     FLOATING POINT SIZE CLAUSES SPECIFYING OTHER THAN AN
--     IMPLEMENTATION DEPENDENT DEFAULT SIZE.

--     IF SUCH SIZE CLAUSES FOR FLOATING POINT TYPES ARE NOT
--     SUPPORTED, THEN THE REPRESENTATION CLAUSE FOR "CHECK_TYPE"
--     MUST BE REJECTED.

-- HISTORY:
--     DHH 09/08/87 CREATED ORIGINAL TEST.
--     DHH 04/18/89 CHANGED OPERATORS ON 'SIZE TESTS, AND ADDED CHECK ON
--                  REPRESENTATION CLAUSE.

WITH REPORT; USE REPORT;
WITH LENGTH_CHECK;                      -- CONTAINS A CALL TO 'FAILED'.
PROCEDURE CD2A41E IS

BEGIN
     TEST ("CD2A41E", "CHECK THAT IF A SIZE CLAUSE GIVEN FOR A " &
                      "FLOATING POINT TYPE IS ALLOWED TO SPECIFY " &
                      "OTHER THAN A DEFAULT SIZE, THEN OPERATIONS " &
                      "ON VALUES OF SUCH A TYPE ARE NOT AFFECTED BY " &
                      "THE SIZE CLAUSE, WHEN THE TYPE IS PASSED " &
                      "AS AN ACTUAL GENERIC PARAMETER");

     DECLARE
          TYPE SPECIFIED IS DIGITS 5;
          SPECIFIED_SIZE : CONSTANT := SPECIFIED'SIZE/2;

          TYPE BASIC_TYPE IS DIGITS 1;

          TYPE CHECK_TYPE IS DIGITS 1;

          FOR CHECK_TYPE'SIZE USE SPECIFIED_SIZE; -- N/A => ERROR.

          GENERIC
               TYPE GENTYPE IS DIGITS <>;
          PROCEDURE GENPROC;

          PROCEDURE GENPROC IS

               CNEG4 : GENTYPE := -4.0;
               CNEG  : GENTYPE := -1.0/3.0;
               CPOS  : GENTYPE := 4.0/6.0;
               CPOS4 : GENTYPE := 4.0;
               CZERO : GENTYPE;

               TYPE ARRAY_TYPE IS ARRAY (0 .. 3) OF GENTYPE;
               CHARRAY : ARRAY_TYPE :=
                    (-4.0, -1.0/3.0, 4.0/6.0, 4.0);

               TYPE REC_TYPE IS RECORD
                    CHNEG4 : GENTYPE := -4.0;
                    CHNEG  : GENTYPE := -1.0/3.0;
                    CHPOS  : GENTYPE := 4.0/6.0;
                    CHPOS4 : GENTYPE :=  4.0;
               END RECORD;

               CHREC : REC_TYPE;

               FUNCTION IDENT (FX : GENTYPE) RETURN GENTYPE IS
               BEGIN
                    IF EQUAL (3, 3) THEN
                         RETURN FX;
                    ELSE
                         RETURN 0.0;
                    END IF;
               END IDENT;

               PROCEDURE CHECK_1 IS NEW LENGTH_CHECK (GENTYPE);

               PROCEDURE PROC (N4IN, PIN      :        GENTYPE;
                          NINOUT,P4INOUT : IN OUT GENTYPE;
                          ZOUT           :    OUT GENTYPE) IS
               BEGIN

                    IF IDENT (N4IN) + PIN NOT IN -3.375 .. -3.25 OR
                       P4INOUT  - IDENT (PIN) NOT IN 3.25 .. 3.375
                         THEN FAILED ("INCORRECT RESULTS FOR " &
                            "BINARY ADDING OPERATORS - 1");
                    END IF;

                    IF +IDENT (NINOUT) NOT IN -0.34375 .. -0.328125
                       OR IDENT (-PIN) NOT IN -0.6875 .. -0.65625
                         THEN FAILED ("INCORRECT RESULTS FOR " &
                                 "UNARY ADDING OPERATORS - 1");
                    END IF;

                    IF N4IN * IDENT (PIN) NOT IN -2.75 .. -2.625 OR
                       IDENT (NINOUT) / P4INOUT NOT IN
                              -0.0859375 .. -0.08203125 THEN
                         FAILED ("INCORRECT RESULTS FOR " &
                                 "MULTIPLYING OPERATORS - 1");
                    END IF;

                    IF ABS IDENT (NINOUT) NOT IN 0.328125 .. 0.34375 OR
                       IDENT (ABS PIN) NOT IN 0.65625 .. 0.6875 THEN
                         FAILED ("INCORRECT RESULTS FOR " &
                            "ABSOLUTE VALUE OPERATORS - 1");
                    END IF;

                    IF (IDENT (PIN) IN PIN .. P4INOUT) /=
                         (BASIC_TYPE (4.0/6.0) IN
                             BASIC_TYPE (4.0/6.0) .. BASIC_TYPE (4.0))
                        OR (NINOUT NOT IN IDENT (NINOUT) .. PIN) /=
                         (BASIC_TYPE (-1.0/3.0) NOT IN
                              BASIC_TYPE (-1.0/3.0) .. BASIC_TYPE
                              (4.0/6.0)) THEN
                         FAILED ("INCORRECT RESULTS FOR " &
                                 "MEMBERSHIP OPERATORS - 1");
                    END IF;

                    ZOUT := 0.0;

               END PROC;

          BEGIN

               CHECK_1 (CPOS, SPECIFIED_SIZE, "CHECK_TYPE");
               PROC (CNEG4, CPOS, CNEG, CPOS4, CZERO);

               IF IDENT (CZERO) /= 0.0 THEN
                    FAILED ("INCORRECT VALUE FOR OUT PARAMETER");
               END IF;

               IF GENTYPE'SIZE /= IDENT_INT (SPECIFIED_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'SIZE");
               END IF;

               IF GENTYPE'DIGITS /= IDENT_INT (1) THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'DIGITS");
               END IF;

               IF GENTYPE'MANTISSA /= BASIC_TYPE'MANTISSA THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'MANTISSA");
               END IF;

               IF GENTYPE'EPSILON /= BASIC_TYPE'EPSILON THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'EPSILON");
               END IF;

               IF GENTYPE'EMAX /= BASIC_TYPE'EMAX THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'EMAX");
               END IF;

               IF GENTYPE'SMALL /= BASIC_TYPE'SMALL THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'SMALL");
               END IF;

               IF GENTYPE'LARGE /= BASIC_TYPE'LARGE THEN
                    FAILED ("INCORRECT VALUE FOR GENTYPE'LARGE");
               END IF;

               IF CNEG'SIZE < IDENT_INT (SPECIFIED_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR CNEG'SIZE");
               END IF;

               IF IDENT (CNEG4) + CPOS NOT IN -3.375 .. -3.25 OR
                  CPOS4  - IDENT (CPOS) NOT IN 3.25 .. 3.375 THEN
                   FAILED ("INCORRECT RESULTS FOR BINARY ADDING " &
                      "OPERATORS - 2");
               END IF;

               IF +IDENT (CNEG) NOT IN -0.34375 .. -0.328125 OR
                  IDENT (-CPOS) NOT IN -0.6875 .. -0.65625 THEN
                    FAILED ("INCORRECT RESULTS FOR UNARY ADDING " &
                       "OPERATORS - 2");
               END IF;

               IF CNEG4 * IDENT (CPOS) NOT IN -2.75 .. -2.625 OR
                  IDENT (CNEG) / CPOS4 NOT IN
                    -0.0859375 .. -0.08203125 THEN
                    FAILED ("INCORRECT RESULTS FOR MULTIPLYING " &
                        "OPERATORS - 2");
               END IF;

               IF ABS IDENT (CNEG) NOT IN 0.328125 .. 0.34375 OR
                  IDENT (ABS CPOS) NOT IN 0.65625 .. 0.6875 THEN
                    FAILED ("INCORRECT RESULTS FOR ABSOLUTE VALUE " &
                            "OPERATORS - 2");
               END IF;

               IF (IDENT (CPOS) IN CPOS .. CNEG4) /=
                    (BASIC_TYPE (4.0/6.0) IN
                         BASIC_TYPE (4.0/6.0) .. BASIC_TYPE (-4.0)) OR
                  (CNEG NOT IN IDENT (CNEG) .. CPOS) /=
                    (BASIC_TYPE (-1.0/3.0) NOT IN
                         BASIC_TYPE (-1.0/3.0) .. BASIC_TYPE (4.0/6.0))
                    THEN FAILED ("INCORRECT RESULTS FOR MEMBERSHIP " &
                            "OPERATORS - 2");
               END IF;

               IF CHARRAY (0)'SIZE < IDENT_INT (SPECIFIED_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR CHARRAY (0)'SIZE");
               END IF;

               IF IDENT (CHARRAY (0)) + CHARRAY (2) NOT IN -3.375 ..
                  -3.25 OR CHARRAY (3)  - IDENT (CHARRAY (2)) NOT IN
                  3.25 .. 3.375 THEN FAILED ("INCORRECT RESULTS " &
                  "FOR BINARY ADDING OPERATORS - 3");
               END IF;

               IF +IDENT (CHARRAY (1)) NOT IN -0.34375 .. -0.328125 OR
                  IDENT (-CHARRAY (2)) NOT IN -0.6875 .. -0.65625 THEN
                    FAILED ("INCORRECT RESULTS FOR UNARY ADDING " &
                        "OPERATORS - 3");
               END IF;

               IF CHARRAY (0) * IDENT (CHARRAY (2)) NOT IN -2.75 ..
                    -2.625 OR IDENT (CHARRAY (1)) / CHARRAY (3) NOT IN
                         -0.0859375 .. -0.08203125 THEN
                    FAILED ("INCORRECT RESULTS FOR MULTIPLYING " &
                     "OPERATORS - 3");
               END IF;

               IF ABS IDENT (CHARRAY (1)) NOT IN 0.328125 .. 0.34375 OR
                  IDENT (ABS CHARRAY (2)) NOT IN 0.65625 .. 0.6875 THEN
                    FAILED ("INCORRECT RESULTS FOR ABSOLUTE VALUE " &
                       "OPERATORS - 3");
               END IF;

               IF (IDENT (CHARRAY (2)) IN CHARRAY (2) .. CHARRAY (3)) /=
                    (BASIC_TYPE (4.0/6.0) IN
                         BASIC_TYPE (4.0/6.0) .. BASIC_TYPE (4.0)) OR
                  (CHARRAY (1) NOT IN IDENT (CHARRAY (1)) ..
                    CHARRAY (2)) /= (BASIC_TYPE (-1.0/3.0) NOT IN
                         BASIC_TYPE (-1.0/3.0) .. BASIC_TYPE (4.0/6.0))
                    THEN FAILED ("INCORRECT RESULTS FOR " &
                            "MEMBERSHIP OPERATORS - 3");
               END IF;

               IF CHREC.CHPOS'SIZE < IDENT_INT (SPECIFIED_SIZE) THEN
                    FAILED ("INCORRECT VALUE FOR CHREC.CHPOS'SIZE");
               END IF;

               IF IDENT (CHREC.CHNEG4) + CHREC.CHPOS NOT IN -3.375 ..
                  -3.25 OR CHREC.CHPOS4  - IDENT (CHREC.CHPOS) NOT
                  IN 3.25 .. 3.375 THEN
                    FAILED ("INCORRECT RESULTS FOR BINARY ADDING " &
                                   "OPERATORS - 4");
               END IF;

               IF +IDENT (CHREC.CHNEG) NOT IN -0.34375 .. -0.328125 OR
                  IDENT (-CHREC.CHPOS) NOT IN -0.6875 .. -0.65625 THEN
                    FAILED ("INCORRECT RESULTS FOR UNARY ADDING " &
                                  "OPERATORS - 4");
               END IF;

               IF CHREC.CHNEG4 * IDENT (CHREC.CHPOS) NOT IN -2.75 ..
                  -2.625 OR IDENT (CHREC.CHNEG) / CHREC.CHPOS4 NOT IN
                         -0.0859375 .. -0.08203125             THEN
                    FAILED ("INCORRECT RESULTS FOR MULTIPLYING " &
                                "OPERATORS - 4");
               END IF;

               IF ABS IDENT (CHREC.CHNEG) NOT IN 0.328125 .. 0.34375 OR
                  IDENT (ABS CHREC.CHPOS) NOT IN 0.65625 .. 0.6875 THEN
                    FAILED ("INCORRECT RESULTS FOR ABSOLUTE VALUE " &
                            "OPERATORS - 4");
               END IF;

               IF (IDENT (CHREC.CHPOS) IN CHREC.CHPOS .. CHREC.CHPOS4)
                    /= (BASIC_TYPE (4.0/6.0) IN
                         BASIC_TYPE (4.0/6.0) .. BASIC_TYPE (4.0)) OR
                  (CHREC.CHNEG NOT IN IDENT
                              (CHREC.CHNEG) .. CHREC.CHPOS)
                     /= (BASIC_TYPE (-1.0/3.0) NOT IN
                         BASIC_TYPE (-1.0/3.0) .. BASIC_TYPE (4.0/6.0))
                    THEN FAILED ("INCORRECT RESULTS FOR " &
                                  "MEMBERSHIP OPERATORS - 4");
               END IF;
          END GENPROC;

          PROCEDURE PROC IS NEW GENPROC(CHECK_TYPE);

     BEGIN
          NULL;
     END;

     RESULT;
END CD2A41E;
