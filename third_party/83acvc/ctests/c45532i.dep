-- C45532I.DEP

-- OBJECTIVE:
--     CHECK THAT THE OPERATOR "*" PRODUCES CORRECT RESULTS
--     FOR FIXED POINT TYPES USING 3 SUBTESTS.
--       THIS TEST REQUIRES MIN_WORD_LENGTH = 32.
--       THIS TEST USES VALUES OF DELTA WHICH ARE LESS THAN 0.5.
--
--     TEST CASES ARE:
--       A) THE OPERATOR *, A, B, AND A * B ALL MODEL NUMBERS.
--       B) THE OPERATOR *, A, B MODEL NUMBERS A * B NOT.
--       C) THE OPERATOR *, USING NO MODEL NUMBERS.
--
--     REPEAT FOR MINIMUM REQUIRED WORD LENGTHS OF 12, 16, 32 AND 48,
--     WITH RANGE <, =, AND > THAN 1.0 AND
--     WITH DELTA <, =, AND > THAN 1.0.

-- APPLICABILITY CRITERIA:
--     THIS TEST IS APPLICABLE FOR IMPLEMENTATIONS WHICH HAVE A
--     'MAX_MANTISSA OF 32 OR GREATER.

--     IF 'MAX_MANTISSA >= 32 IS NOT SUPPORTED THEN THE DECLARATION OF
--     'TYPE FX_OP5' MUST BE REJECTED.

-- HISTORY:
--     NTW 09/08/86 CREATED ORIGINAL TEST.
--     RJW 11/05/86 REVISED COMMENTS.
--     DHH 01/13/88 ADDED APPLICABILITY CRITERIA AND STANDARD HEADER.


WITH REPORT;
PROCEDURE C45532I IS

     USE REPORT;

     MIN_WORD_LENGTH : CONSTANT := 32;
     FULL_SCALE      : CONSTANT := 2 ** (MIN_WORD_LENGTH - 1);
     FORTH           : CONSTANT := FULL_SCALE / 4;
     DEL1            : CONSTANT := 0.5 / FULL_SCALE;
     TYPE FX_0P5 IS DELTA DEL1 * 1 RANGE -0.5 .. 0.5 - DEL1 * 1;
                                                        -- N/A => ERROR.
     TYPE FX_1   IS DELTA DEL1 * 2 RANGE -1.0 .. 1.0 - DEL1 * 2;
     TYPE FX_2   IS DELTA DEL1 * 4 RANGE -2.0 .. 2.0 - DEL1 * 4;

BEGIN TEST ("C45532I", "FIXED POINT OPERATOR ""*""" );

     --------------------------------------------------

     -- CASE A) THE OPERATOR *, A, B, AND A * B ALL MODEL NUMBERS.

A:   DECLARE
          A              : FX_0P5  := 0.0;
          B              : FX_2    := 0.0;
          RESULT_VALUE   : FX_1    := 0.0;
          LOWEST_ACCEPTABLE_VALUE  : FX_1 := FX_1 (0.125);
          HIGHEST_ACCEPTABLE_VALUE : FX_1 := FX_1 (0.125);
     BEGIN
          IF EQUAL (3, 3) THEN
               A := FX_0P5 (0.25);                -- A MODEL NUMBER
               B := FX_2   (0.50);                -- A MODEL NUMBER
          END IF;

          RESULT_VALUE := FX_1 (A * B);

          IF    (RESULT_VALUE < LOWEST_ACCEPTABLE_VALUE)
             OR (RESULT_VALUE > HIGHEST_ACCEPTABLE_VALUE) THEN
               FAILED ("RESULT OF ""*"" OUTSIDE RESULT MODEL INTERVAL "
                    &  "WHEN A, B, AND A * B ARE ALL MODEL NUMBERS");
          END IF;
     END A;

     --------------------------------------------------

     -- CASE B) THE OPERATOR *, A, B MODEL NUMBERS A * B NOT.

B:   DECLARE
          A              : FX_0P5  := 0.0;
          B              : FX_1    := 0.0;
          RESULT_VALUE   : FX_2    := 0.0;
          LOW_COUNT     : CONSTANT := FULL_SCALE / 64;
          HIGH_COUNT    : CONSTANT := LOW_COUNT + 1;
          LOWEST_ACCEPTABLE_VALUE  :  FX_2
                                   := FX_2 (4 * DEL1 * LOW_COUNT );
          HIGHEST_ACCEPTABLE_VALUE :  FX_2
                                   := FX_2 (4 * DEL1 * HIGH_COUNT);
     BEGIN
          IF EQUAL (3, 3) THEN
               A := FX_0P5 (DEL1 * (FORTH + 1) ); -- A MODEL NUMBER
               B := FX_1   (DEL1 * (FORTH * 2) ); -- A MODEL NUMBER
          END IF;

          RESULT_VALUE := FX_2 (A * B);

          IF    (RESULT_VALUE < LOWEST_ACCEPTABLE_VALUE)
             OR (RESULT_VALUE > HIGHEST_ACCEPTABLE_VALUE) THEN
               FAILED ("RESULT OF ""*"" OUTSIDE RESULT MODEL INTERVAL "
                    &  "WHEN A, B MODEL NUMBERS A * B NOT");
          END IF;
     END B;

     --------------------------------------------------

     -- CASE C) THE OPERATOR *, USING NO MODEL NUMBERS

C:   DECLARE
          A              : FX_1    := 0.0;
          B              : FX_1    := 0.0;
          RESULT_VALUE   : FX_2    := 0.0;
          LOW_COUNT     : CONSTANT := FULL_SCALE / 128 - 1;
          HIGH_COUNT    : CONSTANT := FULL_SCALE / 128 + 1;
          LOWEST_ACCEPTABLE_VALUE  :  FX_2
                                   := FX_2 (4 * DEL1 * LOW_COUNT );
          HIGHEST_ACCEPTABLE_VALUE :  FX_2
                                   := FX_2 (4 * DEL1 * HIGH_COUNT);
     BEGIN
          IF EQUAL (3, 3) THEN
               A := FX_1 (DEL1 * (FORTH + 1) );   -- NOT MODEL NUMBER
               B := FX_1 (DEL1 * (FORTH - 1) );   -- NOT MODEL NUMBER
          END IF;

          RESULT_VALUE := FX_2 (A * B);

          IF    (RESULT_VALUE < LOWEST_ACCEPTABLE_VALUE)
             OR (RESULT_VALUE > HIGHEST_ACCEPTABLE_VALUE) THEN
               FAILED ("RESULT OF ""*"" OUTSIDE RESULT MODEL INTERVAL "
                    &  "WHEN USING NO MODEL NUMBERS");
          END IF;
     END C;

     --------------------------------------------------


     RESULT;

END C45532I;
