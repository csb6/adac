-- CD2A32G.ADA

-- OBJECTIVE:
--     CHECK THAT A SIZE SPECIFICATION CAN BE GIVEN FOR AN INTEGER
--     TYPE OF THE SMALLEST APPROPRIATE UNSIGNED SIZE CAN BE GIVEN:
--        IN THE VISIBLE OR PRIVATE PART OF A PACKAGE FOR A TYPE
--          DECLARED IN THE VISIBLE PART;
--        FOR A DERIVED INTEGER TYPE;
--        FOR A DERIVED PRIVATE TYPE WHOSE FULL DECLARATION IS AS
--          AN INTEGER TYPE;
--        FOR AN INTEGER TYPE GIVEN IN A GENERIC UNIT.

-- HISTORY:
--     JET 08/12/87  CREATED ORIGINAL TEST.
--     DHH 04/11/89  CHANGED EXTENSION FROM '.DEP' TO '.ADA', CHANGED
--                   SIZE CLAUSE VALUE TO 7, CHANGED OPERATOR ON 'SIZE
--                   CHECKS, AND ADDED CHECK FOR 'SIZE IN A GENERIC
--                   UNIT.

WITH REPORT; USE REPORT;
PROCEDURE CD2A32G IS

     TYPE BASIC_INT IS RANGE 0 .. 126;
     SPECIFIED_SIZE : CONSTANT := 7;

     TYPE CHECK_INT IS RANGE 0 .. 126;
     FOR CHECK_INT'SIZE USE SPECIFIED_SIZE;

     TYPE DERIVED_INT IS NEW BASIC_INT;
     FOR DERIVED_INT'SIZE USE SPECIFIED_SIZE;

     PACKAGE P IS
          TYPE INT_IN_P IS RANGE 0 .. 126;
          FOR INT_IN_P'SIZE USE SPECIFIED_SIZE;
          TYPE PRIVATE_INT IS PRIVATE;
          TYPE ALT_INT_IN_P IS RANGE 0 .. 126;
     PRIVATE
          TYPE PRIVATE_INT IS RANGE 0 .. 126;
          FOR ALT_INT_IN_P'SIZE USE SPECIFIED_SIZE;
     END P;

     USE P;

     TYPE DERIVED_PRIVATE_INT IS NEW PRIVATE_INT;
     FOR DERIVED_PRIVATE_INT'SIZE USE SPECIFIED_SIZE;

     MINIMUM_SIZE : INTEGER := IDENT_INT(SPECIFIED_SIZE);

     GENERIC
     PROCEDURE GENPROC;

     PROCEDURE GENPROC IS
          TYPE GEN_CHECK_INT IS RANGE 0 .. 126;
          FOR GEN_CHECK_INT'SIZE USE SPECIFIED_SIZE;

     BEGIN

          IF GEN_CHECK_INT'SIZE /= MINIMUM_SIZE THEN
               FAILED ("GEN_CHECK_INT'SIZE SHOULD NOT BE GREATER " &
                       "THAN" & INTEGER'IMAGE(MINIMUM_SIZE) &
                       ".  ACTUAL SIZE IS" &
                       INTEGER'IMAGE(GEN_CHECK_INT'SIZE));
          END IF;
     END GENPROC;

     PROCEDURE NEWPROC IS NEW GENPROC;

BEGIN

     TEST("CD2A32G", "CHECK THAT SIZE SPECIFICATIONS OF THE SMALLEST " &
                     "APPROPRIATE UNSIGNED SIZE CAN BE GIVEN " &
                     "IN THE VISIBLE OR PRIVATE PART OF PACKAGE FOR " &
                     "AN INTEGER TYPE DECLARED IN VISIBLE PART, " &
                     "FOR DERIVED INTEGER " &
                     "TYPES AND PRIVATE TYPES WHOSE FULL DECLARATION " &
                     "IS AS AN INTEGER TYPE AND FOR AN INTEGER TYPE " &
                     "GIVEN IN A GENERIC UNIT");

     IF CHECK_INT'SIZE /= MINIMUM_SIZE THEN
          FAILED ("CHECK_INT'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(CHECK_INT'SIZE));
     END IF;

     IF DERIVED_INT'SIZE /= MINIMUM_SIZE THEN
          FAILED ("DERIVED_INT'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(DERIVED_INT'SIZE));
     END IF;

     IF INT_IN_P'SIZE /= MINIMUM_SIZE THEN
          FAILED ("INT_IN_P'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(INT_IN_P'SIZE));
     END IF;

     IF ALT_INT_IN_P'SIZE /= MINIMUM_SIZE THEN
          FAILED ("ALT_INT_IN_P'SIZE SHOULD NOT BE GREATER THAN" &
                  INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(ALT_INT_IN_P'SIZE));
     END IF;

     IF DERIVED_PRIVATE_INT'SIZE /= MINIMUM_SIZE THEN
          FAILED ("DERIVED_PRIVATE_INT'SIZE SHOULD NOT BE GREATER " &
                  "THAN" & INTEGER'IMAGE(MINIMUM_SIZE) &
                  ".  ACTUAL SIZE IS" &
                  INTEGER'IMAGE(DERIVED_PRIVATE_INT'SIZE));
     END IF;

     NEWPROC;

     RESULT;

END CD2A32G;
